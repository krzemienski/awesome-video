{
  "title": "Awesome Video ",
  "header": "# Awesome Video [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n \n<!-- \n\nPLEASE DO NOT UPDATE THIS FILE, UPDATE CONTENTS.JSON INSTEAD. THANK YOU :-)\n\n -->\n\n",
  "header_contributing": "Please take a quick look at the [contribution guidelines](https://github.com/krzemienski/awesome-video/blob/master/.github/CONTRIBUTING.md) first. If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you to all [contributors](https://github.com/krzemienski/awesome-video/graphs/contributors); you rock!!",
  "categories": [
    {
      "title": "Intro & Learning",
      "id": "intro-learning",
      "description": "Fundamental concepts, history, and educational resources for video streaming."
    },
    {
      "title": "Introduction",
      "id": "introduction",
      "description": "A high-level overview of video as a medium, its technical basics and creative impact.",
      "parent": "intro-learning"
    },
    {
      "title": "Learning Resources",
      "id": "learning-resources",
      "description": "Curated articles, books, courses, and talks offering in-depth knowledge of video streaming.",
      "parent": "intro-learning"
    },
    {
      "title": "Tutorials & Case Studies",
      "id": "tutorials-case-studies",
      "description": "Practical tutorials and real-world case studies demonstrating video streaming implementations.",
      "parent": "intro-learning"
    },
    {
      "title": "Protocols & Transport",
      "id": "protocols-transport",
      "description": "Resources covering the protocols and transport mechanisms that drive video delivery."
    },
    {
      "title": "Adaptive Streaming",
      "id": "adaptive-streaming",
      "description": "Standards and tools for adaptive streaming, primarily focused on HLS and DASH.",
      "parent": "protocols-transport"
    },
    {
      "title": "HLS",
      "id": "hls",
      "description": "Dedicated resources, libraries, and tools for HTTP Live Streaming.",
      "parent": "adaptive-streaming"
    },
    {
      "title": "DASH",
      "id": "dash",
      "description": "Dedicated resources, libraries, and tools for Dynamic Adaptive Streaming over HTTP.",
      "parent": "adaptive-streaming"
    },
    {
      "title": "Transport Protocols",
      "id": "transport-protocols",
      "description": "Protocols that ensure reliable video transport such as RIST, SRT, and RTMP.",
      "parent": "protocols-transport"
    },
    {
      "title": "RIST",
      "id": "rist",
      "description": "Resources focused on the Reliable Internet Stream Transport protocol.",
      "parent": "transport-protocols"
    },
    {
      "title": "SRT",
      "id": "srt",
      "description": "Resources dedicated to the Secure Reliable Transport protocol.",
      "parent": "transport-protocols"
    },
    {
      "title": "RTMP",
      "id": "rtmp",
      "description": "Resources covering the Real-Time Messaging Protocol for video.",
      "parent": "transport-protocols"
    },
    {
      "title": "Encoding & Codecs",
      "id": "encoding-codecs",
      "description": "Technologies and tools for video encoding, transcoding, and codec implementation."
    },
    {
      "title": "Encoding Tools",
      "id": "encoding-tools",
      "description": "Utilities and libraries (including FFMPEG-based solutions) for encoding and transcoding video.",
      "parent": "encoding-codecs"
    },
    {
      "title": "FFMPEG",
      "id": "ffmpeg",
      "description": "Resources, configurations, and scripts based on FFMPEG for video processing.",
      "parent": "encoding-tools"
    },
    {
      "title": "Other Encoders",
      "id": "other-encoders",
      "description": "Additional encoding libraries and tools beyond FFMPEG.",
      "parent": "encoding-tools"
    },
    {
      "title": "Codecs",
      "id": "codecs",
      "description": "Implementations and libraries for modern video codecs.",
      "parent": "encoding-codecs"
    },
    {
      "title": "HEVC",
      "id": "hevc",
      "description": "Resources and tools for the HEVC (H.265) codec.",
      "parent": "codecs"
    },
    {
      "title": "VP9",
      "id": "vp9",
      "description": "Libraries, tools, and examples for the VP9 codec.",
      "parent": "codecs"
    },
    {
      "title": "AV1",
      "id": "av1",
      "description": "Resources and implementations for the emerging AV1 codec.",
      "parent": "codecs"
    },
    {
      "title": "Players & Clients",
      "id": "players-clients",
      "description": "Software and hardware solutions for video playback across platforms."
    },
    {
      "title": "Hardware Players",
      "id": "hardware-players",
      "description": "Dedicated players for devices like Roku, Smart TVs, and Chromecast.",
      "parent": "players-clients"
    },
    {
      "title": "Roku",
      "id": "roku",
      "description": "Tools, SDKs, and examples specific to Roku app development.",
      "parent": "hardware-players"
    },
    {
      "title": "Smart TVs",
      "id": "smart-tv",
      "description": "Player frameworks and SDKs tailored for Smart TV platforms.",
      "parent": "hardware-players"
    },
    {
      "title": "Chromecast",
      "id": "chromecast",
      "description": "Libraries and resources for developing Chromecast-enabled video apps.",
      "parent": "hardware-players"
    },
    {
      "title": "Mobile & Web Players",
      "id": "mobile-web-players",
      "description": "Playback solutions and SDKs for mobile devices and web browsers.",
      "parent": "players-clients"
    },
    {
      "title": "iOS/tvOS",
      "id": "ios-tvos",
      "description": "Tools and SDKs for video playback on Apple's iOS and tvOS platforms.",
      "parent": "mobile-web-players"
    },
    {
      "title": "Android",
      "id": "android",
      "description": "Player solutions and SDKs for Android devices and FireTV.",
      "parent": "mobile-web-players"
    },
    {
      "title": "Web Players",
      "id": "web-players",
      "description": "HTML5 and browser-based video players and frameworks.",
      "parent": "mobile-web-players"
    },
    {
      "title": "Media Tools",
      "id": "media-tools",
      "description": "Utilities to enhance and manage media content in video streaming workflows."
    },
    {
      "title": "Audio & Subtitles",
      "id": "audio-subtitles",
      "description": "Libraries and tools for audio processing and subtitle/caption integration.",
      "parent": "media-tools"
    },
    {
      "title": "Audio",
      "id": "audio",
      "description": "Tools for processing and managing audio streams within video content.",
      "parent": "audio-subtitles"
    },
    {
      "title": "Subtitles & Captions",
      "id": "subtitles-captions",
      "description": "Libraries and utilities for creating and managing subtitles and closed captions.",
      "parent": "audio-subtitles"
    },
    {
      "title": "Ads & QoE",
      "id": "ads-qoe",
      "description": "Resources for integrating advertising and measuring quality of experience (QoE) in video streaming.",
      "parent": "media-tools"
    },
    {
      "title": "Advertising",
      "id": "advertising",
      "description": "Tools and platforms focused on video advertising and monetization strategies.",
      "parent": "ads-qoe"
    },
    {
      "title": "Quality & Testing",
      "id": "quality-testing",
      "description": "Solutions for assessing video quality and testing streaming performance.",
      "parent": "ads-qoe"
    },
    {
      "title": "Standards & Industry",
      "id": "standards-industry",
      "description": "Official specifications, standards, and industry resources shaping video streaming."
    },
    {
      "title": "Specs & Standards",
      "id": "specs-standards",
      "description": "Documentation on official video streaming specifications, including MPEG standards and related forums.",
      "parent": "standards-industry"
    },
    {
      "title": "Official Specs",
      "id": "official-specs",
      "description": "Direct access to official technical specifications and standards documentation.",
      "parent": "specs-standards"
    },
    {
      "title": "MPEG & Forums",
      "id": "mpeg-forums",
      "description": "Resources covering MPEG standards and industry discussions about video technology.",
      "parent": "specs-standards"
    },
    {
      "title": "Vendors & HDR",
      "id": "vendors-hdr",
      "description": "Vendor-specific documentation and resources, including HDR guidelines and product specifications.",
      "parent": "standards-industry"
    },
    {
      "title": "Vendor Docs",
      "id": "vendor-docs",
      "description": "Technical documentation and support resources provided by industry vendors.",
      "parent": "vendors-hdr"
    },
    {
      "title": "HDR Guidelines",
      "id": "hdr-guidelines",
      "description": "Best practices and technical standards for implementing HDR in video streaming.",
      "parent": "vendors-hdr"
    },
    {
      "title": "Infrastructure & Delivery",
      "id": "infrastructure-delivery",
      "description": "Backend systems and cloud technologies that enable reliable video content delivery."
    },
    {
      "title": "Streaming Servers",
      "id": "streaming-servers",
      "description": "Software platforms for hosting video origins, managing storage, and serving content.",
      "parent": "infrastructure-delivery"
    },
    {
      "title": "Origin Servers",
      "id": "origin-servers",
      "description": "Solutions for origin server management and content distribution.",
      "parent": "streaming-servers"
    },
    {
      "title": "Storage Solutions",
      "id": "storage-solutions",
      "description": "Systems designed to store and manage large volumes of video content.",
      "parent": "streaming-servers"
    },
    {
      "title": "Cloud & CDN",
      "id": "cloud-cdn",
      "description": "Cloud platforms and content delivery network (CDN) integrations that optimize video delivery.",
      "parent": "infrastructure-delivery"
    },
    {
      "title": "Cloud Platforms",
      "id": "cloud-platforms",
      "description": "Orchestration and cloud service providers (e.g., Kubernetes, AWS, GCP) for streaming infrastructures.",
      "parent": "cloud-cdn"
    },
    {
      "title": "CDN Integration",
      "id": "cdn-integration",
      "description": "Tools and resources for integrating CDNs with video streaming services.",
      "parent": "cloud-cdn"
    },
    {
      "title": "General Tools",
      "id": "general-tools",
      "description": "Miscellaneous utilities that streamline video processing and security workflows."
    },
    {
      "title": "FFMPEG & Tools",
      "id": "ffmpeg-tools",
      "description": "A collection of FFMPEG-based scripts, libraries, and utilities for advanced video processing.",
      "parent": "general-tools"
    },
    {
      "title": "DRM",
      "id": "drm",
      "description": "Digital rights management solutions and resources to secure video content and manage licensing.",
      "parent": "general-tools"
    },
    {
      "title": "Community & Events",
      "id": "community-events",
      "description": "Resources and platforms that facilitate networking, collaboration, and industry events in video streaming."
    },
    {
      "title": "Community Groups",
      "id": "community-groups",
      "description": "Online communities, forums, Slack channels, and meetups for video professionals.",
      "parent": "community-events"
    },
    {
      "title": "Online Forums",
      "id": "online-forums",
      "description": "Dedicated discussion boards and online communities focused on video streaming technology.",
      "parent": "community-groups"
    },
    {
      "title": "Slack & Meetups",
      "id": "slack-meetups",
      "description": "Resources for real-time chat groups and local meetup events in the video streaming community.",
      "parent": "community-groups"
    },
    {
      "title": "Events & Conferences",
      "id": "events-conferences",
      "description": "A comprehensive list of conferences, talks, webinars, and podcasts related to video streaming.",
      "parent": "community-events"
    },
    {
      "title": "Conferences",
      "id": "conferences",
      "description": "Major industry conferences and live events dedicated to video streaming.",
      "parent": "events-conferences"
    },
    {
      "title": "Podcasts & Webinars",
      "id": "podcasts-webinars",
      "description": "Recorded talks, webinars, and podcasts sharing insights on video streaming trends and technology.",
      "parent": "events-conferences"
    }
  ],
  "model_used": "claude-3-5-haiku-20241022",
  "provider": "anthropic",
  "timestamp": 1743170712,
  "project_count": 1181,
  "projects": [
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/transitive-bullshit/awesome-ffmpeg",
      "description": "\ud83d\udc7b A curated list of awesome FFmpeg resources.",
      "title": "transitive-bullshit/awesome-ffmpeg",
      "tags": [
        "ffmpeg",
        "resources",
        "video-tools",
        "encoding"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://4kmedia.org/",
      "description": "Uncompressed 4K demos, samples, and trailers, to show off your new ultra-HD (2160p) HDR/HLG/Dolby Vision television or monitor.",
      "title": "4K Media | Free Ultra-HD / HDR / HLG / Dolby Vision 4K Video Demos",
      "tags": [
        "4K",
        "HDR",
        "demo",
        "video samples",
        "ultra-HD",
        "display testing"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://github.com/alfg/docker-nginx-rtmp",
      "description": "\ud83d\udc0b A Dockerfile for nginx-rtmp-module + FFmpeg from source with basic settings for streaming HLS. Built on Alpine Linux. - alfg/docker-nginx-rtmp",
      "title": "alfg/docker-nginx-rtmp",
      "tags": [
        "nginx",
        "rtmp",
        "docker",
        "streaming",
        "hls",
        "server"
      ]
    },
    {
      "category": "streaming-servers",
      "description": "NGINX-based Live Media Streaming Server.",
      "homepage": "https://github.com/gnolizuh/BLSS",
      "title": "gnolizuh/BLSS",
      "tags": [
        "nginx",
        "live streaming",
        "media server",
        "server-side",
        "streaming infrastructure"
      ]
    },
    {
      "category": "ios-tvos",
      "description": "HLS player for iOS that supports manual selection for the quality of adaptive streams - IvanoBilenchi/Adaptive-Video-Player",
      "homepage": "https://github.com/IvanoBilenchi/Adaptive-Video-Player",
      "title": "IvanoBilenchi/Adaptive-Video-Player",
      "tags": [
        "HLS",
        "iOS",
        "adaptive streaming",
        "video player",
        "mobile"
      ]
    },
    {
      "category": "hls",
      "description": "A light weight M3U8 parser. Support X-Key & X-Session-Key. - M3U8Kit/M3U8Parser",
      "homepage": "https://github.com/M3U8Kit/M3U8Parser",
      "title": "M3U8Kit/M3U8Parser",
      "tags": [
        "m3u8",
        "parser",
        "streaming",
        "hls",
        "playlist"
      ]
    },
    {
      "category": "hls",
      "description": "Google Chrome Extension for sniffing and downloading HTTP Live streams (HLS) - puemos/hls-downloader-chrome-extension",
      "homepage": "https://github.com/puemos/hls-downloader-chrome-extension",
      "title": "puemos/hls-downloader-chrome-extension",
      "tags": [
        "chrome-extension",
        "streaming",
        "downloader",
        "hls",
        "video-tools"
      ]
    },
    {
      "category": "hls",
      "description": "HLS media segmenter.",
      "homepage": "https://github.com/iliya-gr/mediasegmenter",
      "title": "iliya-gr/mediasegmenter",
      "tags": [
        "hls",
        "segmenter",
        "streaming",
        "media",
        "adaptive-streaming"
      ]
    },
    {
      "category": "media-tools",
      "description": "A lovely video downloader for HLS videos.",
      "homepage": "https://github.com/Last-Order/Minyami",
      "title": "Last-Order/Minyami",
      "tags": [
        "downloader",
        "HLS",
        "video-utility",
        "streaming-tool"
      ]
    },
    {
      "category": "hls",
      "description": "Download all video files from HLS (HTTP Live Streaming) VoD (Video on Demand) m3u8 playlist for local playback - denex/hls-downloader",
      "homepage": "https://github.com/denex/hls-downloader",
      "title": "denex/hls-downloader",
      "tags": [
        "downloader",
        "m3u8",
        "video-streaming",
        "hls",
        "vod"
      ]
    },
    {
      "category": "media-tools",
      "description": "Unison file synchronizer.",
      "homepage": "https://github.com/bcpierce00/unison",
      "title": "bcpierce00/unison",
      "tags": [
        "file sync",
        "file transfer",
        "media management",
        "utility"
      ]
    },
    {
      "category": "hls",
      "description": "An asynchronous terminal-based hls video stream (m3u8) downloader & combiner, with AES-128 decryption support. - SoulMelody/hls-get",
      "homepage": "https://github.com/SoulMelody/hls-get",
      "title": "SoulMelody/hls-get",
      "tags": [
        "downloader",
        "m3u8",
        "streaming",
        "decryption",
        "async",
        "terminal"
      ]
    },
    {
      "category": "ios-tvos",
      "description": "ModernAVPlayer is a persistence AVPlayer wrapper. ",
      "homepage": "https://github.com/noreasonprojects/ModernAVPlayer",
      "title": "noreasonprojects/ModernAVPlayer",
      "tags": [
        "AVPlayer",
        "iOS",
        "video playback",
        "persistence",
        "mobile player"
      ]
    },
    {
      "category": "adaptive-streaming",
      "description": "Node.js DASH and HLS downloader. ",
      "homepage": "https://github.com/schedules/dl",
      "title": "schedules/dl",
      "tags": [
        "downloader",
        "DASH",
        "HLS",
        "Node.js",
        "streaming"
      ]
    },
    {
      "category": "media-tools",
      "description": "High performance file syncing and sharing, with also Markdown WYSIWYG editing, Wiki, file label and other knowledge management features. - haiwen/seafile",
      "homepage": "https://github.com/haiwen/seafile",
      "title": "haiwen/seafile",
      "tags": [
        "file-sharing",
        "collaboration",
        "markdown",
        "wiki",
        "knowledge-management"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "JavaScript version of GPAC's MP4Box tool.",
      "homepage": "https://github.com/gpac/mp4box.js",
      "title": "gpac/mp4box.js",
      "tags": [
        "mp4",
        "javascript",
        "encoding",
        "media-processing",
        "tool"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "Manifesto is an HLS tool for creating multiple variants, a master.m3u8 file, and converting 608 captions to segmented webvtt subtitles via ffmpeg. - gitfu/manifesto",
      "homepage": "https://github.com/gitfu/manifesto",
      "title": "gitfu/manifesto",
      "tags": [
        "ffmpeg",
        "hls",
        "encoding",
        "captions",
        "subtitle-conversion"
      ]
    },
    {
      "category": "specs-standards",
      "homepage": "https://www.ansi.org/membership/how_to_join/how_3",
      "title": "How Do I Become an ANSI Member",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "standards",
        "industry-forum",
        "specification",
        "membership"
      ]
    },
    {
      "category": "storage-solutions",
      "description": "rsync for cloud storage - Google Drive, Amazon Drive, S3, Dropbox, Backblaze B2, One Drive, Swift, Hubic, Cloudfiles, Google Cloud Storage, Yandex Files - rclone/rclone",
      "homepage": "https://github.com/rclone/rclone",
      "title": "rclone/rclone",
      "tags": [
        "cloud storage",
        "sync",
        "backup",
        "file transfer",
        "cloud services"
      ]
    },
    {
      "category": "media-tools",
      "description": "A simple Python based HTTP server that sets CORS allow headers. Useful for streaming from files on local computer - Eyevinn/docker-serve",
      "homepage": "https://github.com/Eyevinn/docker-serve",
      "title": "Eyevinn/docker-serve",
      "tags": [
        "http-server",
        "cors",
        "python",
        "streaming-utility",
        "docker"
      ]
    },
    {
      "category": "adaptive-streaming",
      "description": "The Stale Playlist Detector (SPD) is a tool to monitor live HLS origin endpoints for changing playlists. The Stale Playlist Detector (SPD) will use data in the top-level playlist, the child playlis...",
      "homepage": "https://github.com/awslabs/aws-stale-playlist-detector",
      "title": "awslabs/aws-stale-playlist-detector",
      "tags": [
        "HLS",
        "monitoring",
        "playlist",
        "streaming",
        "origin",
        "endpoint"
      ]
    },
    {
      "category": "subtitles-captions",
      "description": "Telestream Closed Captioning: MacCaption and CaptionMaker allow you to easily author, edit, create subtitles, and encode and repurpose video captions for television, web and mobile delivery",
      "homepage": "https://www.telestream.net/captioning/overview.htm?utm_campaign=partners&utm_source=itunespartner.apple.com&utm_medium=text_link",
      "title": "Closed Captioning and Subtitling Products - MacCaption and CaptionMaker Overview - Telestream",
      "tags": [
        "closed captioning",
        "subtitles",
        "video accessibility",
        "encoding",
        "media tools"
      ]
    },
    {
      "category": "hls",
      "description": "Latest Apple HLS tools copy from Apple Developer Center - creeveliu/HTTPLiveStreamingTools",
      "homepage": "https://github.com/creeveliu/HTTPLiveStreamingTools",
      "title": "creeveliu/HTTPLiveStreamingTools",
      "tags": [
        "apple",
        "streaming",
        "tools",
        "http-live-streaming",
        "development"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "description": "Mux makes adding video to your app or website as easy as making a single API call. But behind the scenes is a large multistep process to analyze and transform the video into something that can be easily consumed by a device. This process is commonly called a media \u201cpipeline\u201d",
      "homepage": "https://mux.com/blog/quantifying-packaging-overhead-2",
      "title": "Quantifying packaging overhead",
      "tags": [
        "video processing",
        "api",
        "media pipeline",
        "technical tutorial"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "description": "A collection of fixes / problem solutions to HTTP video streaming - leandromoreira/http-video-streaming-troubleshooting",
      "homepage": "https://github.com/leandromoreira/http-video-streaming-troubleshooting",
      "title": "leandromoreira/http-video-streaming-troubleshooting",
      "tags": [
        "troubleshooting",
        "http",
        "streaming",
        "solutions",
        "guide"
      ]
    },
    {
      "category": "storage-solutions",
      "description": "OpenStack Storage (Swift).",
      "homepage": "https://github.com/openstack/swift",
      "title": "openstack/swift",
      "tags": [
        "cloud storage",
        "object storage",
        "distributed systems",
        "infrastructure"
      ]
    },
    {
      "category": "media-tools",
      "description": "Snowmix Video Mixer",
      "homepage": "https://snowmix.sourceforge.io",
      "title": "Snowmix - The Swiss Army Knife of Open Source Live Video Mixing.",
      "tags": [
        "video mixer",
        "open source",
        "live video",
        "video processing"
      ]
    },
    {
      "category": "media-tools",
      "description": "Automagically synchronize subtitles with video.",
      "homepage": "https://github.com/smacke/subsync",
      "title": "smacke/subsync",
      "tags": [
        "subtitles",
        "synchronization",
        "media-processing",
        "video-tools"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "Android java library for FFmpeg binary compiled using https://github.com/writingminds/ffmpeg-android - WritingMinds/ffmpeg-android-java",
      "homepage": "https://github.com/WritingMinds/ffmpeg-android-java",
      "title": "WritingMinds/ffmpeg-android-java",
      "tags": [
        "ffmpeg",
        "android",
        "encoding",
        "library",
        "mobile"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "Shell scripts to build FFmpeg for iOS and tvOS. ",
      "homepage": "https://github.com/kewlbear/FFmpeg-iOS-build-script",
      "title": "kewlbear/FFmpeg-iOS-build-script",
      "tags": [
        "ffmpeg",
        "ios",
        "tvos",
        "build-script",
        "encoding"
      ]
    },
    {
      "category": "web-players",
      "description": ":lollipop: Wow, such a lovely HTML5 danmaku video player - MoePlayer/DPlayer",
      "homepage": "https://github.com/MoePlayer/DPlayer",
      "title": "MoePlayer/DPlayer",
      "tags": [
        "html5",
        "video player",
        "web",
        "javascript",
        "interactive",
        "danmaku"
      ]
    },
    {
      "category": "streaming-servers",
      "description": "A server that exposes a directory for video streaming via web interface - shimberger/gohls",
      "homepage": "https://github.com/shimberger/gohls",
      "title": "shimberger/gohls",
      "tags": [
        "go",
        "hls",
        "video-server",
        "web-streaming",
        "directory-streaming"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "description": "A hls.js plugin to offload bandwidth from expensive traditional CDNs\uff0cwhile also maximizing a user\u2019s viewing experience.  - cdnbye/hlsjs-p2p-engine",
      "homepage": "https://github.com/cdnbye/hlsjs-p2p-engine",
      "title": "cdnbye/hlsjs-p2p-engine",
      "tags": [
        "p2p",
        "cdn",
        "hls",
        "streaming",
        "bandwidth-optimization"
      ]
    },
    {
      "category": "streaming-servers",
      "description": "Ant Media Server supports RTMP, RTSP, WebRTC and Adaptive Bitrate. It can also record videos in MP4, HLS and FLV - ant-media/Ant-Media-Server",
      "homepage": "https://github.com/ant-media/Ant-Media-Server",
      "title": "ant-media/Ant-Media-Server",
      "tags": [
        "streaming",
        "server",
        "RTMP",
        "RTSP",
        "WebRTC",
        "recording",
        "media server"
      ]
    },
    {
      "category": "web-players",
      "description": "A HTML5 video player with a parser that saves traffic - bytedance/xgplayer",
      "homepage": "https://github.com/bytedance/xgplayer",
      "title": "bytedance/xgplayer",
      "tags": [
        "html5",
        "video player",
        "web",
        "javascript",
        "bytedance"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "An S3-triggered Amazon Web Services Lambda function that runs your choice of FFmpeg \ud83c\udfac commands on a file  \ud83c\udfa5 and uploads the outputs to a bucket. - binoculars/aws-lambda-ffmpeg",
      "homepage": "https://github.com/binoculars/aws-lambda-ffmpeg",
      "title": "binoculars/aws-lambda-ffmpeg",
      "tags": [
        "ffmpeg",
        "aws",
        "lambda",
        "video-processing",
        "s3",
        "transcoding"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "FFME: The Advanced WPF MediaElement (based on FFmpeg) - unosquare/ffmediaelement",
      "homepage": "https://github.com/unosquare/ffmediaelement",
      "title": "unosquare/ffmediaelement",
      "tags": [
        "ffmpeg",
        "wpf",
        "media-element",
        "video-rendering",
        "dotnet"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "Java wrapper around the FFmpeg command line tool.",
      "homepage": "https://github.com/bramp/ffmpeg-cli-wrapper",
      "title": "bramp/ffmpeg-cli-wrapper",
      "tags": [
        "ffmpeg",
        "java",
        "encoding",
        "wrapper",
        "cli"
      ]
    },
    {
      "category": "streaming-servers",
      "description": "SRS is a simple live streaming cluster, a simple joy. - ossrs/srs",
      "homepage": "https://github.com/ossrs/srs",
      "title": "ossrs/srs",
      "tags": [
        "live streaming",
        "rtmp",
        "server",
        "cluster",
        "open-source"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "Full-HD Software Live-Video-Mixer in python.",
      "homepage": "https://github.com/voc/voctomix",
      "title": "voc/voctomix",
      "tags": [
        "python",
        "live-mixer",
        "video-processing",
        "software-tool",
        "encoding"
      ]
    },
    {
      "category": "hls",
      "description": "A web app that lets you insert a cut into a segment, which is then cut into two new segments. - Eyevinn/hls-cutsegment",
      "homepage": "https://github.com/Eyevinn/hls-cutsegment",
      "title": "Eyevinn/hls-cutsegment",
      "tags": [
        "hls",
        "segmentation",
        "web-app",
        "video-editing",
        "streaming-tools"
      ]
    },
    {
      "category": "av1",
      "description": "Working with the AV1 Codec Kevin Staunton-Lambert Solutions Architect R&D @kevleyski www.switch.tv",
      "homepage": "https://docs.google.com/presentation/d/12_Vewc0SDpB1FycflfT4us9eipRCy0HWJVSaDMDifRs/edit?usp=sharing",
      "title": "AV1 Codec",
      "tags": [
        "codec",
        "video compression",
        "AV1",
        "open source",
        "streaming technology"
      ]
    },
    {
      "category": "adaptive-streaming",
      "description": "HLS, DASH, and future HTTP streaming protocols library for video.js - videojs/http-streaming",
      "homepage": "https://github.com/videojs/http-streaming",
      "title": "videojs/http-streaming",
      "tags": [
        "HLS",
        "DASH",
        "streaming",
        "video.js",
        "adaptive bitrate",
        "HTTP streaming"
      ]
    },
    {
      "category": "hls",
      "description": "Parser and generator of M3U8-playlists for Apple HLS. Library for Go language. :cinema: - grafov/m3u8",
      "homepage": "https://github.com/grafov/m3u8",
      "title": "grafov/m3u8",
      "tags": [
        "library",
        "go",
        "playlist",
        "streaming",
        "parser",
        "generator"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "Port of FFmpeg with Emscripten.",
      "homepage": "https://github.com/Kagami/ffmpeg.js",
      "title": "Kagami/ffmpeg.js",
      "tags": [
        "ffmpeg",
        "emscripten",
        "javascript",
        "encoding",
        "web",
        "porting"
      ]
    },
    {
      "category": "media-tools",
      "description": "Basic Real-time AV Editor - allowing you to preview, mix, and route live audio and video streams on the cloud - bbc/brave",
      "homepage": "https://github.com/bbc/brave",
      "title": "bbc/brave",
      "tags": [
        "live streaming",
        "audio routing",
        "video mixing",
        "cloud media",
        "broadcast tools"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "django-video-encoding helps to convert your videos into different formats and resolutions. - escaped/django-video-encoding",
      "homepage": "https://github.com/escaped/django-video-encoding",
      "title": "escaped/django-video-encoding",
      "tags": [
        "django",
        "video-encoding",
        "transcoding",
        "python",
        "conversion"
      ]
    },
    {
      "category": "web-players",
      "description": "a video player framework aims to bring wonderful experience on browser - Chimeejs/chimee",
      "homepage": "https://github.com/Chimeejs/chimee",
      "title": "Chimeejs/chimee",
      "tags": [
        "javascript",
        "video player",
        "browser",
        "web framework",
        "HTML5"
      ]
    },
    {
      "category": "hardware-players",
      "description": "Simplified media playback for bigscreen devices.",
      "homepage": "https://github.com/bbc/bigscreen-player",
      "title": "bbc/bigscreen-player",
      "tags": [
        "bigscreen",
        "media playback",
        "device-specific",
        "hardware player"
      ]
    },
    {
      "category": "mobile-web-players",
      "description": "Javascript library which implements a video comparator component: two overlaped and synchronized video players each one playing an independent source. - epiclabs-io/epic-video-comparator",
      "homepage": "https://github.com/epiclabs-io/epic-video-comparator",
      "title": "epiclabs-io/epic-video-comparator",
      "tags": [
        "javascript",
        "video player",
        "web",
        "comparison",
        "synchronization"
      ]
    },
    {
      "category": "web-players",
      "description": "Highly extensible, modern, JavaScript video player. Handles MPEG-Dash / HLS / MPEG-4 and is built on top of the HTML5 video element. - matvp91/indigo-player",
      "homepage": "https://github.com/matvp91/indigo-player",
      "title": "matvp91/indigo-player",
      "tags": [
        "javascript",
        "html5",
        "video player",
        "streaming",
        "MPEG-DASH",
        "HLS"
      ]
    },
    {
      "category": "players-clients",
      "description": "\ud83c\udfa5 Command line video player.",
      "homepage": "https://github.com/mpv-player/mpv",
      "title": "mpv-player/mpv",
      "tags": [
        "video player",
        "command-line",
        "open source",
        "media playback"
      ]
    },
    {
      "category": "web-players",
      "description": "A React video player facilitating adaptive stream playback with custom UI and a React-friendly API. - vimond/replay",
      "homepage": "https://github.com/vimond/replay",
      "title": "vimond/replay",
      "tags": [
        "react",
        "video player",
        "adaptive streaming",
        "web",
        "javascript"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/senko/avtk",
      "title": "senko/avtk",
      "description": "A tool or resource for ffmpeg-based-tools.",
      "tags": [
        "ffmpeg",
        "video-processing",
        "tool",
        "encoding"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/kkroening/ffmpeg-python",
      "title": "kkroening/ffmpeg-python",
      "description": "A tool or resource for ffmpeg-based-tools.",
      "tags": [
        "ffmpeg",
        "python",
        "encoding",
        "video-processing",
        "library"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/Ch00k/ffmpy",
      "title": "Ch00k/ffmpy",
      "description": "A tool or resource for ffmpeg-based-tools.",
      "tags": [
        "ffmpeg",
        "encoding",
        "video-tools",
        "python"
      ]
    },
    {
      "category": "hls",
      "description": "M3U8 library",
      "homepage": "https://github.com/globocom/m3u8",
      "title": "globocom/m3u8",
      "tags": [
        "m3u8",
        "playlist",
        "streaming",
        "library",
        "adaptive-streaming"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/Zulko/moviepy",
      "title": "Zulko/moviepy",
      "description": "A tool or resource for effects-compositing-tools.",
      "tags": [
        "python",
        "video-editing",
        "effects",
        "compositing",
        "library"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/crunchyroll/objective_perceptual_analysis",
      "title": "crunchyroll/objective_perceptual_analysis",
      "description": "A tool or resource for quality-analysis-metrics.",
      "tags": [
        "quality-of-experience",
        "metrics",
        "analysis",
        "video-quality"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/wargarblgarbl/libgosubs",
      "title": "wargarblgarbl/libgosubs",
      "description": "A tool or resource for subtitle-caption-tools.",
      "tags": [
        "subtitles",
        "captions",
        "library",
        "tools",
        "text processing"
      ]
    },
    {
      "category": "general-tools",
      "homepage": "https://github.com/sitkevij/mpi",
      "title": "sitkevij/mp",
      "description": "A tool or resource for command-line-utilities-wrappers.",
      "tags": [
        "cli",
        "utility",
        "command-line",
        "wrapper"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/bavc/qctools",
      "title": "bavc/qctools",
      "description": "A tool or resource for quality-analysis-metrics.",
      "tags": [
        "quality control",
        "video analysis",
        "metrics",
        "testing",
        "media tools"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/jliljebl/flowblade",
      "title": "jliljebl/flowblade",
      "description": "A tool or resource for non-linear-editing-suites.",
      "tags": [
        "video editing",
        "non-linear editing",
        "open source",
        "video processing"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/muxinc/hlstools",
      "title": "muxinc/hlstools",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "streaming",
        "tools",
        "adaptive-streaming"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/mifi/lossless-cut",
      "title": "mifi/lossless-cut",
      "description": "A tool or resource for trimming-cutting-tools.",
      "tags": [
        "trimming",
        "video-editing",
        "cutting-tool",
        "media-processing"
      ]
    },
    {
      "category": "encoding-tools",
      "description": "MLT Multimedia Framework.",
      "homepage": "https://github.com/mltframework/mlt",
      "title": "mltframework/mlt",
      "tags": [
        "multimedia",
        "framework",
        "video processing",
        "encoding",
        "library"
      ]
    },
    {
      "category": "hardware-players",
      "homepage": "https://github.com/anachirino/bifserver",
      "description": "Server which creates and serves up BIF files for Roku players - anachirino/bifserver",
      "title": "anachirino/bifserver",
      "tags": [
        "roku",
        "server",
        "bif",
        "video-metadata",
        "streaming-support"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/avTranscoder/avTranscoder",
      "description": "C++ API for LibAV / FFMpeg.d",
      "title": "avTranscoder/avTranscoder",
      "tags": [
        "ffmpeg",
        "encoding",
        "c++",
        "libav",
        "transcoding",
        "video processing"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/bfansports/CloudTranscode",
      "description": "Distributed videos and images encoding/transcoding using Amazon SFN, FFMpeg and ImageMagic - bfansports/CloudTranscode",
      "title": "bfansports/CloudTranscode",
      "tags": [
        "transcoding",
        "ffmpeg",
        "amazon-sfn",
        "distributed-encoding",
        "cloud-encoding"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/briandunnington/Redoku",
      "description": "Redux for Roku.",
      "title": "briandunnington/Redoku",
      "tags": [
        "roku",
        "development",
        "redux",
        "streaming",
        "hardware-player"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/briandunnington/Roact",
      "description": "React for Roku",
      "title": "briandunnington/Roact",
      "tags": [
        "roku",
        "framework",
        "development",
        "javascript",
        "streaming"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/BrikerMan/BMPlayer",
      "description": "A video player for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brightness and seek by slide, support subtitles.  - BrikerMan/BMPlayer",
      "title": "BrikerMan/BMPlayer",
      "tags": [
        "ios",
        "video player",
        "avplayer",
        "mobile",
        "subtitles"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/CCecilia/roku-suite-desktop",
      "description": "Tool suite for Roku channel development.",
      "title": "CCecilia/roku-suite-desktop",
      "tags": [
        "roku",
        "channel development",
        "streaming",
        "desktop tool",
        "sdk"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/chrishoffman/brightscript-json",
      "description": "JSON parser for Roku's proprietary Brightscript language - chrishoffman/brightscript-json",
      "title": "chrishoffman/brightscript-json",
      "tags": [
        "roku",
        "json",
        "parsing",
        "brightscript",
        "development"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/DaMingShen/SUCacheLoader",
      "description": "AVPlayer ",
      "title": "DaMingShen/SUCacheLoader",
      "tags": [
        "AVPlayer",
        "iOS",
        "video playback",
        "mobile player"
      ]
    },
    {
      "category": "events-conferences",
      "homepage": "https://www.youtube.com/playlist?list=PLkyaYNWEKcOf98lZxnCcL6y7ZIVU3oSYO",
      "description": "2022 Demuxed talks & presentations",
      "title": "Demuxed 2022",
      "tags": [
        "conference",
        "video",
        "talks",
        "technology",
        "streaming"
      ]
    },
    {
      "category": "events-conferences",
      "homepage": "https://www.youtube.com/playlist?list=PLkyaYNWEKcOfD1GYFxFbZXDP03XM-cZPg",
      "description": "2021 Demuxed talks & presentations",
      "title": "Demuxed 2021",
      "tags": [
        "conference",
        "talks",
        "video technology",
        "presentations"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.youtube.com/playlist?list=PLkyaYNWEKcOcDlGjEbpxBe4woCJGHrarN",
      "description": "2020 Demuxed talks & presentations",
      "title": "Demuxed 2020",
      "tags": [
        "conference",
        "talks",
        "video technology",
        "learning",
        "presentations"
      ]
    },
    {
      "category": "events-conferences",
      "homepage": "https://m.youtube.com/playlist?list=PLkyaYNWEKcOf_C_6W45abNvXMb40xUUqh",
      "description": "2019 Demuxed talks & presentations",
      "title": "Demuxed 2019",
      "tags": [
        "conference",
        "video technology",
        "talks",
        "presentations"
      ]
    },
    {
      "category": "events-conferences",
      "homepage": "https://www.youtube.com/watch?v=bfK_f7GBA8s&list=PLkyaYNWEKcOfARqEht42i1P4kBemzEV2V",
      "title": "Demuxed 2018",
      "description": "2018  Demuxed talks & presentations",
      "tags": [
        "conference",
        "video technology",
        "talks",
        "presentations"
      ]
    },
    {
      "category": "community-events",
      "homepage": "https://www.youtube.com/watch?v=PSdhW-R9u6s&list=PLkyaYNWEKcOfntbMd6KtHhF7qpL9hj6of",
      "title": "Demuxed 2017",
      "description": "2017 Demuxed talks & presentations",
      "tags": [
        "conference",
        "video technology",
        "presentations",
        "talks"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.youtube.com/watch?v=kEo2TrXm7F4&list=PLkyaYNWEKcOekC2m9Na77G40Lmhb1bnsK",
      "title": "Demuxed 2016",
      "description": "2016 Demuxed talks & presentations",
      "tags": [
        "conference",
        "talks",
        "video technology",
        "learning",
        "presentations"
      ]
    },
    {
      "category": "podcasts-webinars",
      "homepage": "https://www.heavybit.com/library/podcasts/demuxed",
      "description": "Demuxed is a podcast made for and by engineers working with video. Brought to you by Heavybit.",
      "title": "Demuxed | Heavybit",
      "tags": [
        "podcast",
        "engineering",
        "video",
        "community",
        "learning"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://mile-high.video/files/mhv2019",
      "description": "Mile High Video 2019 talks & presentations",
      "title": "Mile High Video 2019 Proceedings",
      "tags": [
        "conference",
        "proceedings",
        "video technology",
        "learning",
        "presentations"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://mile-high.video/files/mhv2018",
      "description": "Mile High Video 2018 talks & presentations",
      "title": "Mile High Video 2018 Proceedings",
      "tags": [
        "conference",
        "proceedings",
        "education",
        "video technology"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://medium.com/@eyevinntechnology/demystifying-html5-video-player-e480846328f0",
      "description": "In this post we will go under the hood of a HTML video player for video streaming. With the exception of Apple and their browser Safari, no\u2026",
      "title": "Demystifying HTML5 Video Player",
      "tags": [
        "HTML5",
        "video player",
        "web streaming",
        "tutorial",
        "browser technology"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/DeviLeo/DLGPlayer",
      "description": "A media player for iOS based on FFmpeg 4.0.",
      "title": "DeviLeo/DLGPlayer",
      "tags": [
        "ios",
        "media player",
        "ffmpeg",
        "mobile",
        "video playback"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/dhairav/URLSessionHLSDownload",
      "description": "A swift 3 implementation for downloading HLS content and play it back using native AVPlayer - dhairav/URLSessionHLSDownload",
      "title": "dhairav/URLSessionHLSDownload",
      "tags": [
        "HLS",
        "iOS",
        "AVPlayer",
        "URLSession",
        "streaming",
        "download"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/dphang/roku-lib",
      "description": "Some useful Roku utilities.",
      "title": "dphang/roku-lib",
      "tags": [
        "roku",
        "hardware",
        "utilities",
        "streaming",
        "sdk"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/ElderByte-/docker-java-media",
      "description": "JRE 10 (Java 10) and media tools (ffmpeg).",
      "title": "ElderByte-/docker-java-media",
      "tags": [
        "docker",
        "java",
        "ffmpeg",
        "media-tools",
        "encoding"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/epiclabs-io/hls-analyzer",
      "description": "Analyzer for HTTP Live Streams (HLS) content.",
      "title": "epiclabs-io/hls-analyzer",
      "tags": [
        "hls",
        "analyzer",
        "streaming",
        "protocol",
        "stream-analysis"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/exegersha/network-benchmark",
      "description": "Proof of concept. Roku app implementing network layer using scene graph nodes. - exegersha/network-benchmark",
      "title": "exegersha/network-benchmark",
      "tags": [
        "roku",
        "network",
        "scene graph",
        "proof of concept",
        "app development"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/FallingSnow/h265ize",
      "description": "A node utility utilizing ffmpeg to encode videos with the hevc codec. - FallingSnow/h265ize",
      "title": "FallingSnow/h265ize",
      "tags": [
        "ffmpeg",
        "encoding",
        "hevc",
        "h265",
        "node",
        "video-processing",
        "codec"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/FFmpeg/FFmpeg",
      "description": "Mirror of git://source.ffmpeg.org/ffmpeg.git.",
      "title": "FFmpeg/FFmpeg",
      "tags": [
        "encoding",
        "video processing",
        "open-source",
        "multimedia",
        "codec"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/flavioribeiro/nginx-audio-track-for-hls-module",
      "description": ":sound: Nginx module that generates audio track for HTTP Live Streaming (HLS) streams on the fly. - flavioribeiro/nginx-audio-track-for-hls-module",
      "title": "flavioribeiro/nginx-audio-track-for-hls-module",
      "tags": [
        "nginx",
        "audio",
        "streaming",
        "module",
        "hls"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/flavioribeiro/nginx-vod-module-fmp4-hls",
      "description": "Play fragmented mp4's on HLS using nginx-vod-module - flavioribeiro/nginx-vod-module-fmp4-hls",
      "title": "flavioribeiro/nginx-vod-module-fmp4-hls",
      "tags": [
        "nginx",
        "hls",
        "fragmented-mp4",
        "streaming",
        "video-delivery"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/gabek/Amplitude-Brightscript",
      "description": "A Brightscript (Roku) library for submitting analytics to Amplitude - gabek/Amplitude-Brightscript",
      "title": "gabek/Amplitude-Brightscript",
      "tags": [
        "roku",
        "analytics",
        "brightscript",
        "sdk",
        "platform-specific"
      ]
    },
    {
      "category": "hardware-players",
      "homepage": "https://github.com/gabek/SegmentIO-Brightscript",
      "description": "A BrightScript interface to SegmentIO event tracking - gabek/SegmentIO-Brightscript",
      "title": "gabek/SegmentIO-Brightscript",
      "tags": [
        "roku",
        "brightscript",
        "tracking",
        "sdk",
        "analytics"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/georgejecook/rooibos",
      "description": "simple, flexible, fun brightscript test framework for roku scenegraph apps - georgejecook/rooibos",
      "title": "georgejecook/rooibos",
      "tags": [
        "roku",
        "testing",
        "framework",
        "brightscript",
        "scenegraph"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/globocom/hlsclient",
      "description": "Python HLS Client.",
      "title": "globocom/hlsclient",
      "tags": [
        "python",
        "streaming",
        "client",
        "protocol"
      ]
    },
    {
      "category": "mobile-web-players",
      "homepage": "https://github.com/googleads/google-media-framework-ios",
      "description": "The Google Media Framework (GMF) is a lightweight media player designed to make video playback and integration with the Google IMA SDK on iOS easier. - googleads/google-media-framework-ios",
      "title": "googleads/google-media-framework-ios",
      "tags": [
        "ios",
        "media-player",
        "google-ads",
        "sdk",
        "video-integration"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/hanton/HTY360Player",
      "description": "Open Source iOS 360 Degree Panorama Video Player.",
      "title": "hanton/HTY360Player",
      "tags": [
        "ios",
        "video player",
        "360-degree",
        "panorama",
        "mobile video"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/iina/iina",
      "description": "The modern video player for macOS.",
      "title": "iina/iina",
      "tags": [
        "macOS",
        "video player",
        "desktop application",
        "media playback"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://code.videolan.org/videolan/vlc-ios",
      "description": "VLC for iOS is the official port of VLC on the iOS/tvOS platforms.",
      "title": "videolan/vlc-ios",
      "tags": [
        "mobile",
        "player",
        "ios",
        "tvos",
        "open-source"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/imsanthosh/HLS-Stream-health-monitoring-tool",
      "description": "HLS stream health monitoring utility tool provides an report of live HLS stream. This utility tool checks the all available bitrate streams and generates the report in html file format. HTML file i...",
      "title": "imsanthosh/HLS-Stream-health-monitoring-tool",
      "tags": [
        "HLS",
        "stream monitoring",
        "health check",
        "reporting",
        "performance"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/juliomalves/roku-libs",
      "description": "BrightScript Utility Libraries.",
      "title": "juliomalves/roku-libs",
      "tags": [
        "roku",
        "brightscript",
        "utility",
        "library",
        "hardware-player"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/karimkawambwa/roku-framework-example",
      "description": "This is a project to show how the boku-framework by Karim Kawambwa is used - karimkawambwa/roku-framework-example",
      "title": "karimkawambwa/roku-framework-example",
      "tags": [
        "roku",
        "framework",
        "tutorial",
        "hardware-player",
        "example"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/karimkawambwa/roku-framework",
      "description": "Roku app framework to make app creation easier and structured. Under construction - karimkawambwa/roku-framework",
      "title": "karimkawambwa/roku-framework",
      "tags": [
        "roku",
        "framework",
        "app-development",
        "streaming-platform"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/kodlian/TVVLCPlayer",
      "description": "TVVLCPlayer lets you integrate easily a powerfull video player with playback control views to your tvOS apps. - kodlian/TVVLCPlayer",
      "title": "kodlian/TVVLCPlayer",
      "tags": [
        "tvOS",
        "video player",
        "Apple",
        "mobile player",
        "VLC"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/Kthulu120/liquid_dl",
      "description": "Liquid-dl is a simple tool for utlities such as FFMPEG, youtube-dl, and scdl. It provides a simple framework with simple point and click options allowing users to just click on what they need and u...",
      "title": "Kthulu120/liquid_dl",
      "tags": [
        "ffmpeg",
        "download",
        "utility",
        "media-processing",
        "cli-tool"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://github.com/leandromoreira/ffmpeg-libav-tutorial",
      "description": "FFmpeg libav tutorial - learn how media works from basic to transmuxing, transcoding and more - leandromoreira/ffmpeg-libav-tutorial",
      "title": "leandromoreira/ffmpeg-libav-tutorial",
      "tags": [
        "ffmpeg",
        "tutorial",
        "media-processing",
        "encoding",
        "learning"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/libobjc/SGPlayer",
      "description": "A powerful media play framework for iOS, macOS, and tvOS. - libobjc/SGPlayer",
      "title": "libobjc/SGPlayer",
      "tags": [
        "media player",
        "iOS",
        "tvOS",
        "framework",
        "mobile video"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/lightspark/lightspark",
      "description": "An open source flash player implementation.",
      "title": "lightspark/lightspark",
      "tags": [
        "flash",
        "player",
        "open source",
        "video playback"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/majamee/arch-ffmpeg-gpac",
      "description": "A ready-prepared video transcoding pipeline to create DASH/ HLS compatible video files & playlists - majamee/arch-ffmpeg-gpac",
      "title": "majamee/arch-ffmpeg-gpac",
      "tags": [
        "ffmpeg",
        "transcoding",
        "dash",
        "hls",
        "video-processing"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/markus-perl/ffmpeg-build-script",
      "description": "The FFmpeg build script provides an easy way to build a static FFmpeg on OSX and Linux with non-free codecs included. - markus-perl/ffmpeg-build-script",
      "title": "markus-perl/ffmpeg-build-script",
      "tags": [
        "ffmpeg",
        "build-script",
        "codec",
        "static-build",
        "linux",
        "macos"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/MediaBrowser/Emby.Roku",
      "description": "Emby for Roku. ",
      "title": "MediaBrowser/Emby.Roku",
      "tags": [
        "roku",
        "media browser",
        "streaming client",
        "hardware player"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/microshow/RxFFmpeg",
      "description": "\ud83d\udd25RxFFmpeg \u662f\u57fa\u4e8e ( FFmpeg 4.0 + X264 + mp3lame + fdk-aac )",
      "title": "microshow/RxFFmpeg",
      "tags": [
        "ffmpeg",
        "encoding",
        "x264",
        "mp3",
        "aac",
        "mobile"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/mifi/hls-vod",
      "description": "HTTP Live Streaming with on-the-fly encoding of any video file for Web/Apple TV/iPhone/iPad/iPod - mifi/hls-vod",
      "title": "mifi/hls-vod",
      "tags": [
        "streaming",
        "encoding",
        "apple-devices",
        "web-streaming",
        "mobile-streaming"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/mrkjffrsn/RokuFramework",
      "description": "An opensource Roku framework.",
      "title": "mrkjffrsn/RokuFramework",
      "tags": [
        "roku",
        "framework",
        "streaming",
        "sdk",
        "open-source"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/nmrony/hlsdownloader-cli",
      "description": "Downloads HLS Playlist file and TS chunks using Terminal - nmrony/hlsdownloader-cli",
      "title": "nmrony/hlsdownloader-cli",
      "tags": [
        "cli",
        "download",
        "streaming",
        "hls",
        "playlist",
        "terminal"
      ]
    },
    {
      "category": "hardware-players",
      "homepage": "https://github.com/nod/rokumote",
      "description": "osx app for controlling your roku because sometimes your kids lose the remote - nod/rokumote",
      "title": "nod/rokumote",
      "tags": [
        "roku",
        "remote control",
        "hardware",
        "osx",
        "device management"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/nytimes/ios-360-videos",
      "description": "NYT360Video plays 360-degree video streamed from an AVPlayer on iOS. - nytimes/ios-360-videos",
      "title": "nytimes/ios-360-videos",
      "tags": [
        "360-video",
        "ios",
        "avplayer",
        "mobile-video",
        "video-playback"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/openHPI/nginx-hls-analyzer",
      "description": "Fork of fmsloganalyzer to adapt it for HLS streaming analyzes with nginx - openHPI/nginx-hls-analyzer",
      "title": "openHPI/nginx-hls-analyzer",
      "tags": [
        "hls",
        "streaming",
        "log-analysis",
        "nginx",
        "analyzer"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/piemonte/Player",
      "description": "\u25b6\ufe0f video player in Swift, simple way to play and stream media on iOS/tvOS - piemonte/Player",
      "title": "piemonte/Player",
      "tags": [
        "swift",
        "ios",
        "tvos",
        "video player",
        "mobile streaming"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/ptrandev/swift-encoder",
      "description": "A fire-and-forget shell script that encodes multiple video and audio files with ffmpeg. - ptrandev/swift-encoder",
      "title": "ptrandev/swift-encoder",
      "tags": [
        "encoding",
        "shell-script",
        "ffmpeg",
        "video-processing",
        "audio-processing"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/r-plus/HLSion",
      "description": "HTTP Live Streaming (HLS) download manager to offline playback. - r-plus/HLSion",
      "title": "r-plus/HLSion",
      "tags": [
        "hls",
        "streaming",
        "download",
        "offline",
        "video-management"
      ]
    },
    {
      "category": "mobile-web-players",
      "homepage": "https://github.com/renzifeng/ZFPlayer",
      "description": "Support customization of any player SDK and control layer",
      "title": "renzifeng/ZFPlayer",
      "tags": [
        "player",
        "SDK",
        "mobile",
        "web",
        "customization",
        "video playback"
      ]
    },
    {
      "category": "general-tools",
      "homepage": "https://github.com/rkoshak/sensorReporter",
      "description": "A python based service that receives sensor inputs and publishes them over REST (should work with any API but mainly tested with openHAB) or MQTT. It can also receive commands and perform an action...",
      "title": "rkoshak/sensorReporter",
      "tags": [
        "python",
        "sensor",
        "REST",
        "MQTT",
        "integration",
        "service"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/RokuCommunity/brighterscript-formatter",
      "description": "A code formatter for BrighterScript (and BrightScript) - rokucommunity/brighterscript-formatter",
      "title": "rokucommunity/brighterscript-formatter",
      "tags": [
        "roku",
        "code-formatter",
        "development-tool",
        "brightscript"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokucommunity/vscode-brightscript-language",
      "description": "A Visual Studio Code extension for Roku's BrightScript language - rokucommunity/vscode-brightscript-language",
      "title": "rokucommunity/vscode-brightscript-language",
      "tags": [
        "roku",
        "vscode",
        "extension",
        "brightscript",
        "development",
        "hardware-player"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/rokudev/automated-channel-testing",
      "description": "Roku Automated Channel Testing: Selenium-based WebDriver + Robot Framework + Samples - rokudev/automated-channel-testing",
      "title": "rokudev/automated-channel-testing",
      "tags": [
        "testing",
        "automation",
        "selenium",
        "roku",
        "quality-assurance",
        "webdriver"
      ]
    },
    {
      "category": "hardware-players",
      "homepage": "https://github.com/rokudev/dolby-audio-sample",
      "description": "A collection of Dolby test content available in different streaming protocols. - rokudev/dolby-audio-sample",
      "title": "rokudev/dolby-audio-sample",
      "tags": [
        "roku",
        "dolby",
        "audio",
        "streaming",
        "sample-content"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokudev/RAF4RSG-sample",
      "description": "sample demonstrating the Roku Advertising Framework in SceneGraph - rokudev/RAF4RSG-sample",
      "title": "rokudev/RAF4RSG-sample",
      "tags": [
        "roku",
        "advertising",
        "scenegraph",
        "sample",
        "framework"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokudev/samples",
      "description": "Collection of sample channels for side-loading on your Roku device - rokudev/samples",
      "title": "rokudev/samples",
      "tags": [
        "roku",
        "sample",
        "channel",
        "development",
        "hardware-player"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokudev/SceneGraphDeveloperExtensions",
      "description": "Contribute to rokudev/SceneGraphDeveloperExtensions development by creating an account on GitHub.",
      "title": "rokudev/SceneGraphDeveloperExtensions",
      "tags": [
        "roku",
        "scene graph",
        "developer tools",
        "hardware players"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://github.com/rokudev/SDK-Development-Guide",
      "description": "Contribute to rokudev/SDK-Development-Guide development by creating an account on GitHub.",
      "title": "rokudev/SDK-Development-Guide",
      "tags": [
        "roku",
        "sdk",
        "development",
        "guide",
        "tutorial"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokudev/unit-testing-framework",
      "description": "Tool for automating and testing Roku channels.",
      "title": "rokudev/unit-testing-framework",
      "tags": [
        "testing",
        "automation",
        "development",
        "roku",
        "unit-testing"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/rokudev/videoplayer-channel",
      "description": "SceneGraph version of the SDK1 VideoPlayer Channel  - rokudev/videoplayer-channel",
      "title": "rokudev/videoplayer-channel",
      "tags": [
        "roku",
        "sdk",
        "videoplayer",
        "scenegraph",
        "channel development"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://github.com/rolandoislas/BrightWebSocket",
      "description": "RFC 6455 WebSocket Library for the Roku.",
      "title": "rolandoislas/BrightWebSocket",
      "tags": [
        "websocket",
        "protocol",
        "roku",
        "transport",
        "rfc6455"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://github.com/rounce/nginx-hls-module",
      "description": "Smooth Streaming Module fork. ",
      "title": "rounce/nginx-hls-module",
      "tags": [
        "nginx",
        "streaming",
        "module",
        "server",
        "hls"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/sampotts/plyr",
      "description": "A simple HTML5, YouTube and Vimeo player.",
      "title": "sampotts/plyr",
      "tags": [
        "html5",
        "player",
        "javascript",
        "video",
        "web",
        "youtube",
        "vimeo"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/schtanislau/brightscript-state-machine",
      "description": "State management for Roku channel..",
      "title": "schtanislau/brightscript-state-machine",
      "tags": [
        "roku",
        "state-machine",
        "channel-development",
        "brightscript"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://medium.com/@eyevinntechnology/server-less-video-backend-1a142d1d2ba",
      "description": "In this blog post by Jonas Rydholm Birm\u00e9 he describes how a completely server-less video backend on AWS would look like.",
      "title": "Server-less Video Backend",
      "tags": [
        "serverless",
        "aws",
        "backend",
        "cloud",
        "infrastructure"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/silencecorner/jre-ffmpeg-apline",
      "description": "Dockerfile [jre8](https://github.com/fabric8io-images/java) and [ffmpeg](https://hub.docker.com/r/jrottenberg/ffmpeg)  - silencecorner/jre-ffmpeg-apline",
      "title": "silencecorner/jre-ffmpeg-apline",
      "tags": [
        "docker",
        "ffmpeg",
        "encoding",
        "java",
        "alpine"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/sjbarag/brs-testbed",
      "description": "A simple, buildable Roku channel that executes arbitrary BrightScript files. - sjbarag/brs-testbed",
      "title": "sjbarag/brs-testbed",
      "tags": [
        "roku",
        "brightscript",
        "development",
        "testing",
        "channel"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/slhck/ffmpeg-bitrate-stats",
      "description": "Calculate bitrate statistics using FFmpeg",
      "title": "slhck/ffmpeg-bitrate-stats",
      "tags": [
        "ffmpeg",
        "bitrate",
        "video analysis",
        "encoding tools"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/slhck/ffmpeg-debug-qp",
      "description": "FFmpeg Debug Script for QP Values",
      "title": "slhck/ffmpeg-debug-qp",
      "tags": [
        "ffmpeg",
        "debug",
        "encoding",
        "qp",
        "video-analysis"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://github.com/slhck/ffmpeg-encoding-course",
      "description": "An introduction to FFmpeg and its tools. ",
      "title": "slhck/ffmpeg-encoding-course",
      "tags": [
        "ffmpeg",
        "tutorial",
        "encoding",
        "learning",
        "video processing"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/slhck/scenecut-extractor",
      "description": "Extract scenecuts from video files using ffmpeg",
      "title": "slhck/scenecut-extractor",
      "tags": [
        "ffmpeg",
        "video-processing",
        "scene-detection",
        "tool"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/slhck/ffmpeg-quality-metrics",
      "description": "Calculate quality metrics with FFmpeg (SSIM, PSNR, VMAF)",
      "title": "slhck/ffmpeg-quality-metrics",
      "tags": [
        "ffmpeg",
        "quality-metrics",
        "video-analysis",
        "ssim",
        "psnr",
        "vmaf"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/snickers/snickers",
      "description": ":chocolate_bar: An open source alternative to the video cloud encoding services. - snickers/snickers",
      "title": "snickers/snickers",
      "tags": [
        "encoding",
        "cloud",
        "open-source",
        "video processing",
        "transcoding"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://www.elecard.com/products/video-analysis/stream-analyzer",
      "description": "Professional Video Analysis Tool For Syntax Analysis Of Encoded Media Streams. Operates With MPEG-2 PS/TS, VES and MP4 Files. Automation, batch execution via Command Line Interface. Check your multiplexer",
      "title": "Stream Analyzer - ts analyzer, stream validation, ETSI TR 101 290 | Elecard: Video Compression Guru ",
      "tags": [
        "analysis",
        "validation",
        "MPEG-2",
        "stream validation",
        "syntax analysis",
        "multiplexer",
        "encoding"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/T-Pham/RokuJSONHelperNode",
      "description": "Roku SceneGraph JSON Helper.",
      "title": "T-Pham/RokuJSONHelperNode",
      "tags": [
        "roku",
        "sdk",
        "json",
        "scenegraph",
        "helper"
      ]
    },
    {
      "category": "introduction",
      "homepage": "https://medium.com/@eyevinntechnology/the-challenge-to-maintain-and-translate-creative-visual-ideas-to-everyones-viewing-devices-a88e1a841439",
      "description": "Many articles have already been posted drawing conclusions on what went wrong with the visual quality of a very popular TV show that was\u2026",
      "title": "The Challenge to Maintain and Translate Creative Visual Ideas to Everyone\u2019s Viewing Devices",
      "tags": [
        "visual quality",
        "content delivery",
        "device compatibility",
        "video technology"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/tjenkinson/mock-hls-server",
      "description": "Fake a live/event HLS stream from a VOD one. Useful for testing. - tjenkinson/mock-hls-server",
      "title": "tjenkinson/mock-hls-server",
      "tags": [
        "hls",
        "streaming",
        "testing",
        "mock",
        "development"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://medium.com/@eyevinntechnology/understanding-real-time-bidding-for-avod-services-861ebfa8bd13",
      "description": "We have in previous blog articles described the principles behind server-side ad-insertion and described some of the challenges with it as\u2026",
      "title": "Understanding Real-time Bidding for AVOD Services",
      "tags": [
        "advertising",
        "monetization",
        "real-time bidding",
        "AVOD",
        "server-side ad insertion"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/ustwo/videoplayback-ios",
      "description": "Swift AVPlayer wrapper using the VIPER architecture. Currently a work in progress  - ustwo/videoplayback-ios",
      "title": "ustwo/videoplayback-ios",
      "tags": [
        "swift",
        "avplayer",
        "ios",
        "video-player",
        "mobile",
        "architecture"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/veeta-tv/jasmine-roku",
      "description": "Example jasmine tests using node-roku-test for verifying Roku channel behavior - veeta-tv/jasmine-roku",
      "title": "veeta-tv/jasmine-roku",
      "tags": [
        "roku",
        "testing",
        "jasmine",
        "channel-development",
        "automated-testing"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/VeinGuo/VGPlayer",
      "description": "\ud83d\udcfa  A simple iOS video player by Vein.",
      "title": "VeinGuo/VGPlayer",
      "tags": [
        "ios",
        "video player",
        "mobile",
        "swift",
        "objective-c"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/video-dev/hls.js",
      "description": "JavaScript HLS client using Media Source Extension - video-dev/hls.js",
      "title": "video-dev/hls.js",
      "tags": [
        "javascript",
        "streaming",
        "media-source-extensions",
        "client-side",
        "adaptive-streaming"
      ]
    },
    {
      "category": "community-groups",
      "homepage": "https://github.com/video-dev/streams",
      "description": "A repository of shared streams - no media uploads.",
      "title": "video-dev/streams",
      "tags": [
        "community",
        "streams",
        "sharing",
        "collaboration"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/video-dev/vtt.js",
      "description": "A JavaScript implementation of the WebVTT specification - video-dev/vtt.js",
      "title": "video-dev/vtt.js",
      "tags": [
        "webvtt",
        "subtitles",
        "captions",
        "javascript",
        "web"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/videojs/video.js",
      "description": "Video.js - open source HTML5 & Flash video player.",
      "title": "videojs/video.js",
      "tags": [
        "html5",
        "javascript",
        "video player",
        "web development",
        "open source"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/videolan/vlc",
      "description": "VLC media player - All pull requests are ignored, please follow https://wiki.videolan.org/Sending_Patches_VLC/ - videolan/vlc",
      "title": "videolan/vlc",
      "tags": [
        "media player",
        "cross-platform",
        "open-source",
        "video playback"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/vitoziv/VIMediaCache",
      "description": "Cache media file while play media using AVPlayer.",
      "title": "vitoziv/VIMediaCache",
      "tags": [
        "ios",
        "avplayer",
        "media-cache",
        "mobile-video",
        "caching"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/willowtreeapps/ukor",
      "description": "A Roku build tool with support for build flavors.",
      "title": "willowtreeapps/ukor",
      "tags": [
        "roku",
        "build tool",
        "development",
        "streaming",
        "hardware-player"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/xiewei-wayne/FFEngine.framework",
      "description": "FFEngine framework is a high performance player sdk for iOS based on ffmpeg. - xiewei-wayne/FFEngine.framework",
      "title": "xiewei-wayne/FFEngine.framework",
      "tags": [
        "ios",
        "player",
        "sdk",
        "ffmpeg",
        "mobile-video"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/xiewei-wayne/rtmp-video-player-for-ios",
      "description": "Based on FFEngine framework, a rtmp video player for apple iOS devices. - xiewei-wayne/rtmp-video-player-for-ios",
      "title": "xiewei-wayne/rtmp-video-player-for-ios",
      "tags": [
        "ios",
        "rtmp",
        "video-player",
        "mobile-streaming",
        "ffmpeg"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/zhaiweiwei/nginx-hls",
      "description": "Contribute to zhaiweiwei/nginx-hls development by creating an account on GitHub.",
      "title": "zhaiweiwei/nginx-hls",
      "tags": [
        "nginx",
        "streaming",
        "hls",
        "adaptive-streaming",
        "video-transport"
      ]
    },
    {
      "category": "roku",
      "homepage": "https://github.com/zype/zype-roku-scenegraph",
      "description": "Contribute to zype/zype-roku-scenegraph development by creating an account on GitHub.",
      "title": "zype/zype-roku-scenegraph",
      "tags": [
        "roku",
        "scenegraph",
        "video streaming",
        "hardware player",
        "sdk"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://docs.hybrik.com/api/v1/HybrikAPI.html?#getting-started",
      "title": "Hybrik API Reference",
      "description": "A tool or resource for api-libraries-sdks.",
      "tags": [
        "api",
        "sdk",
        "libraries",
        "integration"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/bcoudurier/FFmbc",
      "description": "FFmpeg customized for broadcast and professional usage - bcoudurier/FFmbc",
      "title": "bcoudurier/FFmbc",
      "tags": [
        "ffmpeg",
        "broadcast",
        "professional",
        "video-encoding",
        "customization"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/hybrik/hybrik-samples",
      "description": "Hybrik Samples.",
      "title": "hybrik/hybrik-samples",
      "tags": [
        "samples",
        "encoding",
        "hybrik",
        "video processing"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Eyevinn/docker-dash-packager",
      "description": "Open source MPEG DASH packager for live and VOD.",
      "title": "Eyevinn/docker-dash-packager",
      "tags": [
        "packager",
        "live streaming",
        "vod",
        "docker",
        "adaptive streaming"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Dash-Industry-Forum/ISOSegmentValidator",
      "description": "Contribute to Dash-Industry-Forum/ISOSegmentValidator development by creating an account on GitHub.",
      "title": "Dash-Industry-Forum/ISOSegmentValidator",
      "tags": [
        "dash",
        "validator",
        "streaming",
        "segment",
        "iso"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Viblast/dash-proxy",
      "description": "Easy downloading and mirroring of MPEG-DASH streams - Viblast/dash-proxy",
      "title": "Viblast/dash-proxy",
      "tags": [
        "adaptive streaming",
        "DASH",
        "stream mirroring",
        "download",
        "proxy"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/emarsden/dash-mpd-rs",
      "description": "Rust library for parsing, serializing and downloading media content from a DASH MPD file.",
      "title": "dash-mpd-rs",
      "tags": [
        "rust",
        "library",
        "parsing",
        "streaming",
        "mpd",
        "adaptive-streaming"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/emarsden/dash-mpd-cli",
      "description": "Commandline application for downloading media content from a DASH MPD manifest.",
      "title": "dash-mpd-cli",
      "tags": [
        "dash",
        "cli",
        "download",
        "adaptive-streaming",
        "manifest"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://bitmovin.com/mpeg-dash-hls-examples-sample-streams/",
      "title": "DASH & HLS Sample Streams",
      "description": "A tool or resource for test-content-sample-streams.",
      "tags": [
        "DASH",
        "HLS",
        "streaming",
        "sample-streams",
        "test-content"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://hlsbook.net/hls-fragmented-mp4/",
      "description": "At WWDC 2016, Apple announced support for fragmented MP4 (fMP4) as an alternative to MPEG-TS, which prior to their announcement was the only supported format. So why use fragmented MP4 files? Well,\u2026",
      "title": "HLS and Fragmented MP4",
      "tags": [
        "HLS",
        "fragmented MP4",
        "streaming format",
        "Apple",
        "WWDC"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://github.com/matmoi/create-DASH-HLS/",
      "description": "A tutorial to generate fMp4 files compatible with dash and HLS - matmoi/create-DASH-HLS",
      "title": "matmoi/create-DASH-HLS",
      "tags": [
        "tutorial",
        "DASH",
        "HLS",
        "fMP4",
        "streaming",
        "encoding"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/realeyes-media/demo-encoder/",
      "description": "A nodejs encoding system based on ffmpeg and configured to write HLS streaming files to S3 - realeyes-media/demo-encoder",
      "title": "realeyes-media/demo-encoder",
      "tags": [
        "nodejs",
        "ffmpeg",
        "hls",
        "encoding",
        "s3",
        "streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/nmrony/hlsdownloader",
      "description": "Downloads HLS Playlist file and TS chunks.",
      "title": "nmrony/hlsdownloader",
      "tags": [
        "hls",
        "download",
        "streaming",
        "playlist",
        "chunks"
      ]
    },
    {
      "category": "encoding-codecs",
      "homepage": "https://medium.com/netflix-techblog/a-large-scale-comparison-of-x264-x265-and-libvpx-a-sneak-peek-2e81e88f8b0f",
      "description": "a Sneak Peek",
      "title": "A Large-Scale Comparison of x264, x265, and libvpx",
      "tags": [
        "codec",
        "comparison",
        "encoding",
        "x264",
        "x265",
        "libvpx",
        "video compression"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://developer.apple.com/videos/play/wwdc2017/504/",
      "description": "HTTP Live Streaming allows you to stream live and on-demand content to global audiences. Learn about great new features and enhancements...",
      "title": "Advances in HTTP Live Streaming - WWDC 2017 - Videos - Apple Developer",
      "tags": [
        "streaming",
        "apple",
        "protocol",
        "live streaming",
        "video delivery"
      ]
    },
    {
      "category": "encoding-codecs",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=121878",
      "description": "Adding HEVC to your HLS streams is looking like a no brainer, but if you decide to do so, you may not want to take Apple's HEVC encoding recommendations verbatim. You'll deliver noticeably higher quality video if you follow the advice detailed below.",
      "title": "Apple Got It Wrong: Encoding Specs for HEVC in HLS ",
      "tags": [
        "HEVC",
        "encoding",
        "HLS",
        "Apple",
        "video quality"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://nomadyun.wordpress.com/2018/04/12/how-to-generate-a-fmp4-hls-live-stream-with-ffmpeg/",
      "description": "ffmpeg -re -stream_loop -1 -i voweb.mp4 -hls_fmp4_init_filename init.mp4 -vf \u201csettb=AVTB,setpts=\u2019trunc(PTS/1K)*1K+st\\(1,trunc(RTCTIME/1K))-1K*trunc(ld(1)/1K)\u2019,\\ drawtext=fontfile=\u2026",
      "title": "How to generate a fmp4 hls live stream with FFMPEG",
      "tags": [
        "ffmpeg",
        "hls",
        "live streaming",
        "fmp4",
        "encoding"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://tools.ietf.org/html/draft-pantos-hls-rfc8216bis-00#section-5.1",
      "title": "draft-pantos-hls-rfc8216bis-00 - HTTP Live Streaming 2nd Edition",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "streaming",
        "specification",
        "adaptive-streaming",
        "rfc",
        "standards"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://go.buydrm.com/thedrmblog/hevc-drm-market-update",
      "description": "Since time eternal, the streaming industry has toiled with and extolled the virtues of CODECs and their key enablement of the entire digital video experience. Now comes the latest candy in the increasingly large bowl, H.265 (MPEG-H Part 2) or as it\u2019s more commonly known. HEVC.",
      "title": "HEVC DRM Market Update",
      "tags": [
        "codec",
        "H.265",
        "streaming technology",
        "video compression",
        "market trends"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://superuser.com/questions/1295957/ffmpeg-and-hardware-acceleration-of-hevc-transcoding-on-mac",
      "description": "I have a MacBook Pro with a Kaby Lake processor running macOS High Sierra (10.12). Is it possibe somehow to setup FFmpeg to utilize hardware encoding of HEVC with toolbox, instead of libx265?",
      "title": "Is it possible to get FFmpeg to use hardware acceleration for HEVC transcoding on macOS?",
      "tags": [
        "ffmpeg",
        "hardware-acceleration",
        "hevc",
        "transcoding",
        "macos"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://blog.twitch.tv/en/2017/10/10/live-video-transmuxing-transcoding-f-fmpeg-vs-twitch-transcoder-part-i-489c1c125f28/",
      "title": "Live Video Transmuxing/Transcoding: FFmpeg vs TwitchTranscoder, Part I",
      "description": "A tool or resource for real-time-encoding-solutions.",
      "tags": [
        "ffmpeg",
        "transcoding",
        "real-time encoding",
        "video processing",
        "tutorial"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://blog.twitch.tv/live-video-transmuxing-transcoding-ffmpeg-vs-twitchtranscoder-part-ii-4973f475f8a3?source=userActivityShare-94bccb50d11-1561003748&_branch_match_id=670105191114382351&gi=fd8d504494f4",
      "title": "Live Video Transmuxing/Transcoding: FFmpeg vs TwitchTranscoder, Part 2",
      "description": "A tool or resource for real-time-encoding-solutions.",
      "tags": [
        "ffmpeg",
        "transcoding",
        "real-time encoding",
        "video processing"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://medium.com/@eyevinntechnology/internet-video-streaming-abr-part-1-b10964849e19?source=userActivityShare-94bccb50d11-1559723768&_branch_match_id=664736558865703297",
      "description": "Background",
      "title": "Internet Video Streaming \u2014 ABR part 1",
      "tags": [
        "ABR",
        "adaptive bitrate",
        "streaming",
        "video delivery",
        "network optimization"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://medium.com/@eyevinntechnology/a-docker-container-with-the-video-streaming-tools-you-need-b8319e98f36a",
      "description": "As a video streaming technician there are a number of tools that you find yourself using on a daily basis. Wouldn\u2019t it be handy if all\u2026",
      "title": "A Docker container with the video streaming tools you need",
      "tags": [
        "docker",
        "streaming",
        "tools",
        "container",
        "technician"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/ZaifSenpai/Batch-Py-Remux",
      "description": "Convert mkv video to hevc (h.265).",
      "title": "ZaifSenpai/Batch-Py-Remux",
      "tags": [
        "python",
        "video-conversion",
        "hevc",
        "mkv",
        "transcoding"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/video-dev/video-transcoding-api",
      "description": "Agnostic API to transcode media assets across different cloud services. - video-dev/video-transcoding-api",
      "title": "video-dev/video-transcoding-api",
      "tags": [
        "transcoding",
        "cloud",
        "api",
        "media-processing",
        "video-encoding"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://medium.com/@eyevinntechnology/internet-video-streaming-abr-part-2-dbce136b0d7c?source=userActivityShare-94bccb50d11-1559723862&_branch_match_id=664736952377004405",
      "description": "Background",
      "title": "Internet Video Streaming \u2014 ABR part 2",
      "tags": [
        "ABR",
        "adaptive bitrate",
        "streaming",
        "video delivery",
        "network optimization"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/realeyes-media/alpine-bento-ffmpeg",
      "description": "Alpine Linux with FFMPEG, Bento, and PM2.",
      "title": "realeyes-media/alpine-bento-ffmpeg",
      "tags": [
        "docker",
        "alpine",
        "container",
        "encoding",
        "ffmpeg",
        "media-processing"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/nextbreakpoint/ffmpeg4java",
      "description": "FFmpeg4Java provides a JNI wrapper of FFmpeg library - nextbreakpoint/ffmpeg4java",
      "title": "nextbreakpoint/ffmpeg4java",
      "tags": [
        "ffmpeg",
        "java",
        "jni",
        "video-processing",
        "library",
        "encoding"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://aws.amazon.com/blogs/networking-and-content-delivery/lambdaedge-design-best-practices/",
      "description": "Lambda@Edge transforms CloudFront into a highly programmable CDN with serverless compute capabilities closer to your viewers around the world. This blog is the first in a series that explains best practices associated with using Lambda@Edge functions to customize your content delivery.",
      "title": "Lambda@Edge Design Best Practices | Amazon Web Services",
      "tags": [
        "aws",
        "serverless",
        "cdn",
        "lambda",
        "content delivery",
        "tutorial"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://medium.com/@eyevinntechnology/generate-mpeg-ts-from-file-with-ffmpeg-7561181e6369?source=userActivityShare-94bccb50d11-1560983471&_branch_match_id=670020142756633081",
      "description": "In this post I will describe how an MPEG-TS multicast stream can be generated with ffmpeg by looping an MP4 file and a Docker container\u2026",
      "title": "Generate MPEG-TS from file with ffmpeg",
      "tags": [
        "ffmpeg",
        "mpeg-ts",
        "multicast",
        "docker",
        "video encoding"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/alfg/docker-bento4",
      "description": "A dockerized Bento4 from source. Built on Alpine Linux.  - alfg/docker-bento4",
      "title": "alfg/docker-bento4",
      "tags": [
        "docker",
        "encoding",
        "bento4",
        "alpine",
        "video-processing"
      ]
    },
    {
      "category": "vendors-hdr",
      "homepage": "https://www.dolby.com/us/en/technologies/dolby-vision/dolby-vision-for-creative-professionals.html",
      "description": "The Dolby Vision integrated workflow gives you the tools needed to efficiently create wide color gamut and high dynamic range content and ensures that the look you create in the color suite stays true when experienced across across a multitude of devices. With Dolby Vision high dynamic range imaging, you get bolder highlights and incredible contrast. That means greater sharpness, depth, and more detailed shadows to expand your storytelling possibilities like never before.",
      "title": "Dolby Vision for Content Creators | Dolby Laboratories",
      "tags": [
        "HDR",
        "color grading",
        "video technology",
        "Dolby Vision",
        "wide color gamut"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/majamee/auto-dash-hls",
      "description": "Automated toolchain for generating DASH/ HLS compatible files from all videos inside a root folder - majamee/auto-dash-hls",
      "title": "majamee/auto-dash-hls",
      "tags": [
        "DASH",
        "HLS",
        "adaptive streaming",
        "video conversion",
        "toolchain"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/Netflix/vmaf/",
      "description": "Perceptual video quality assessment based on multi-method fusion. - Netflix/vmaf",
      "title": "Netflix/vmaf",
      "tags": [
        "quality assessment",
        "video quality",
        "metrics",
        "machine learning",
        "perceptual evaluation"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://www.miracletutorials.com/hls-adaptive-streaming-tutorial-with-cloudfront-jw-player/",
      "description": "A step-by-step HLS adaptive streaming tutorial with CloudFront & JW Player in two parts. It is easier than you think. This tutorial presumes you have",
      "title": "HLS adaptive streaming tutorial with CloudFront & JW Player | Miracle Tutorials",
      "tags": [
        "tutorial",
        "HLS",
        "adaptive streaming",
        "CloudFront",
        "JW Player",
        "streaming tutorial"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-edge-how-it-works-tutorial.html",
      "description": "This tutorial shows you how to get started with Lambda@Edge by helping you create and add a sample Node.js function that runs in CloudFront. The example that we walk through adds HTTP security headers to a response, which can improve security and privacy for a website. (That said, you don\u2019t need a website for this walkthrough; we simply add security headers to a response when CloudFront retrieves a file.)",
      "title": "Lambda Edge Tutorial",
      "tags": [
        "tutorial",
        "aws",
        "cloudfront",
        "lambda",
        "security",
        "infrastructure"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/djvergad/dash",
      "description": "An MPEG/DASH client-server module for simulating rate adaptation mechanisms over HTTP/TCP. - djvergad/dash",
      "title": "djvergad/dash",
      "tags": [
        "adaptive streaming",
        "DASH",
        "rate adaptation",
        "HTTP",
        "TCP",
        "simulation"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://www.iso.org/standard/75485.html",
      "description": "Information technology \u2014 Dynamic adaptive streaming over HTTP (DASH) \u2014 Part 1: Media presentation description and segment formats",
      "title": "ISO/IEC 23009-1:2019",
      "tags": [
        "adaptive streaming",
        "http streaming",
        "standards",
        "specification",
        "protocol"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/caststack/python-mpegdash",
      "description": "MPEG-DASH MPD(Media Presentation Description) Parser - sangwonl/python-mpegdash",
      "title": "sangwonl/python-mpegdash",
      "tags": [
        "parser",
        "python",
        "streaming",
        "adaptive-streaming",
        "mpd"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/gpac/gpac",
      "description": "GPAC main code repository.",
      "title": "gpac/gpac",
      "tags": [
        "multimedia",
        "encoding",
        "open-source",
        "video processing",
        "streaming"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://github.com/coopernurse/nginx-s3-proxy",
      "description": "nginx compiled with aws-auth support, suitable for S3 reverse proxy usage - coopernurse/nginx-s3-proxy",
      "title": "coopernurse/nginx-s3-proxy",
      "tags": [
        "nginx",
        "aws",
        "s3",
        "proxy",
        "infrastructure",
        "cloud-storage"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://developer.apple.com/documentation/http_live_streaming/example_playlists_for_http_live_streaming/creating_a_master_playlist#overview",
      "title": "Creating a Master Playlist | Apple Developer Documentation",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "playlist",
        "streaming",
        "apple",
        "developer-documentation"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/carlanton/mpd-tools",
      "description": "DASH MPD tools for Java.",
      "title": "carlanton/mpd-tools",
      "tags": [
        "java",
        "mpd",
        "adaptive-streaming",
        "dash",
        "streaming-tools"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/carlanton/m3u8-parser",
      "description": "HLS compliant m3u8 parser for Java.",
      "title": "carlanton/m3u8-parser",
      "tags": [
        "parser",
        "java",
        "streaming",
        "playlist",
        "adaptive-streaming"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/gkozlenko/node-video-lib",
      "description": "Node.js Video Library / MP4 & FLV parser / MP4 builder / HLS muxer - gkozlenko/node-video-lib",
      "title": "gkozlenko/node-video-lib",
      "tags": [
        "nodejs",
        "mp4",
        "flv",
        "parser",
        "builder",
        "hls",
        "muxer",
        "video-library"
      ]
    },
    {
      "category": "encoding-codecs",
      "homepage": "https://medium.com/@eyevinntechnology/chessboard-for-beginners-video-encoding-compression-and-resolutions-bcefe04fa639",
      "description": "Written by: Boris Asadanin, Streaming Media Consultant at Eyevinn Technology",
      "title": "Video Encoding \u2014 Compression and Resolutions",
      "tags": [
        "video encoding",
        "compression",
        "resolution",
        "technical guide"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/Eyevinn/vp9-dash",
      "description": "FFMpeg wrapper script to create VP9 MPEG-DASH packages - Eyevinn/vp9-dash",
      "title": "Eyevinn/vp9-dash",
      "tags": [
        "ffmpeg",
        "vp9",
        "dash",
        "encoding",
        "packaging"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/nickdesaulniers/combine-mpd",
      "description": "Combine MPEG DASH MPD manifest files.",
      "title": "nickdesaulniers/combine-mpd",
      "tags": [
        "dash",
        "manifest",
        "streaming",
        "mpd",
        "adaptive-streaming"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/theolampert/dash-server",
      "description": "Small, command-line HTTP/2 file server for serving MPEG-DASH content. - theolampert/dash-server",
      "title": "theolampert/dash-server",
      "tags": [
        "http2",
        "file-server",
        "streaming",
        "dash",
        "adaptive-streaming"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://docs.aws.amazon.com/mediaconvert/latest/ug/dvb-sub-output-captions.html",
      "description": "** If your output captions are DVB-Sub, set them up in your outputs according to the following information.",
      "title": "DVB captions in media convert",
      "tags": [
        "captions",
        "DVB-Sub",
        "media conversion",
        "subtitles"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/stultus/mp4-to-mpegdash-py",
      "description": "Python Script to convert a MP4 file into onDemand MPEG-DASH - stultus/mp4-to-mpegdash-py",
      "title": "stultus/mp4-to-mpegdash-py",
      "tags": [
        "dash",
        "conversion",
        "python",
        "streaming",
        "adaptive-bitrate"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://github.com/CrackerCat/video_decrypter",
      "description": "Decrypt video from a streaming site with MPEG-DASH Widevine DRM encryption. - CrackerCat/video_decrypter",
      "title": "CrackerCat/video_decrypter",
      "tags": [
        "drm",
        "decryption",
        "widevine",
        "streaming",
        "encryption"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Eyevinn/dash-validator-js",
      "description": "MPEG DASH validator JS library. ",
      "title": "Eyevinn/dash-validator-js",
      "tags": [
        "validator",
        "javascript",
        "dash",
        "adaptive-streaming",
        "validation-tool"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://medium.com/@eyevinntechnology/server-less-just-in-time-packaging-with-aws-fargate-and-unified-origin-by-unified-streaming-c1682dc051ca?source=userActivityShare-94bccb50d11-1559724204&_branch_match_id=664738392430917730",
      "description": "In this blog article Jonas Rydholm Birm\u00e9 describes how he created a server-less just-in-time packaging origin, using AWS ECS Fargate tasks\u2026",
      "title": "Server-less Just-in-Time Packaging with AWS Fargate and Unified Origin by Unified Streaming",
      "tags": [
        "serverless",
        "aws",
        "fargate",
        "origin",
        "packaging",
        "cloud",
        "infrastructure"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://videoblerg.wordpress.com/2017/11/10/ffmpeg-and-how-to-use-it-wrong/",
      "description": "I\u2019ve been in the streaming media industry since 2008 and have seen a lot of misinformation regarding both FFmpeg and libx264. In this post I hope to help shed some light on what does and does\u2026",
      "title": "FFmpeg and how to use it wrong",
      "tags": [
        "ffmpeg",
        "video encoding",
        "streaming media",
        "libx264",
        "tutorial"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/Comcast/cea-extractor",
      "description": "Parsing and display logic for CEA-608 caption data in fragmented MP4 files. - Comcast/cea-extractor",
      "title": "Comcast/cea-extractor",
      "tags": [
        "captions",
        "subtitles",
        "mp4",
        "parsing",
        "media-extraction"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/MPEGDASHPlayer/MPEGDASH-iOS-Player",
      "description": "The MPEG-DASH Player iOS Application.",
      "title": "MPEGDASHPlayer/MPEGDASH-iOS-Player",
      "tags": [
        "ios",
        "player",
        "adaptive-streaming",
        "mobile",
        "dash"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://www.wowza.com/docs/how-to-secure-apple-hls-streaming-using-drm-encryption",
      "description": "Protect live and on-demand HLS streaming using DRM encryption in Wowza Streaming Engine.",
      "title": "Secure HLS streaming using DRM encryption",
      "tags": [
        "HLS",
        "streaming",
        "encryption",
        "security",
        "Wowza",
        "content protection"
      ]
    },
    {
      "category": "audio",
      "homepage": "https://developers.google.com/assistant/tools/audio-loudness",
      "title": "Audio Loudness  |  Conversational Actions  |  Google Developers",
      "description": "A tool or resource for audio-analysis-processing.",
      "tags": [
        "audio",
        "processing",
        "analysis",
        "loudness",
        "google-developers"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://www.iskysoft.com/video-editing/how-to-increase-volume-in-audacity.html",
      "description": "How to increase volume in Audacity? This article will guide you to change volume in Audacity and its alternative tool. You can pick up one of them to edit volume in Audacity as you like.",
      "title": "Quick Tutorial: How to Increase Volume in Audacity [2019 Update]",
      "tags": [
        "audio",
        "tutorial",
        "editing",
        "volume",
        "audacity"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/xinnjie/extract-subtitle",
      "description": "extract subtitles from video.",
      "title": "xinnjie/extract-subtitle",
      "tags": [
        "subtitle",
        "extraction",
        "video-processing",
        "media-tools"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://github.com/awslabs/serverless-subtitles",
      "description": "Serverless Subtitles can handle a video input, extract the sound, transcript it and generate different subtitle files for your video. - awslabs/serverless-subtitles",
      "title": "awslabs/serverless-subtitles",
      "tags": [
        "subtitles",
        "transcription",
        "serverless",
        "aws",
        "audio-processing"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/abinashmeher999/voice-data-extract",
      "description": "A command line interface to combine text information from subtitles with voice data in the video. Provides a convenient way to generate training data for speech-recognition purposes. - abinashmeher...",
      "title": "abinashmeher999/voice-data-extract",
      "tags": [
        "subtitle",
        "speech-recognition",
        "data-extraction",
        "cli",
        "audio-processing"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Comcast/mamba",
      "description": "Mamba is a Swift iOS, tvOS and macOS framework to parse, validate and write HTTP Live Streaming (HLS) data. - Comcast/mamba",
      "title": "Comcast/mamba",
      "tags": [
        "swift",
        "ios",
        "tvos",
        "macos",
        "streaming",
        "framework",
        "hls",
        "parsing"
      ]
    },
    {
      "category": "general-tools",
      "homepage": "https://github.com/Comcast/eel",
      "description": "A simple proxy service to forward JSON events and transform or filter them along the way. - Comcast/eel",
      "title": "Comcast/eel",
      "tags": [
        "proxy",
        "event-processing",
        "json",
        "transformation",
        "filtering"
      ]
    },
    {
      "category": "cloud-cdn",
      "homepage": "https://medium.com/@eyevinntechnology/ott-content-delivery-multi-cdn-8cd90ad2628a?source=userActivityShare-94bccb50d11-1560983307&_branch_match_id=670019455010399744",
      "description": "Background",
      "title": "OTT Content Delivery\u2013 Multi CDN",
      "tags": [
        "CDN",
        "content delivery",
        "OTT",
        "streaming infrastructure",
        "multi-CDN"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Dash-Industry-Forum/dash.js",
      "description": "A reference client implementation for the playback of MPEG DASH via Javascript and compliant browsers. - Dash-Industry-Forum/dash.js",
      "title": "Dash-Industry-Forum/dash.js",
      "tags": [
        "javascript",
        "adaptive-streaming",
        "web-player",
        "dash",
        "streaming-protocol"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/tchakabam/dash-proxy",
      "description": "Experimental MPEG-DASH media gateway - proxy on-the-fly modified MP4 segment metadata - tchakabam/dash-proxy",
      "title": "tchakabam/dash-proxy",
      "tags": [
        "dash",
        "proxy",
        "mp4",
        "streaming",
        "metadata",
        "media-gateway"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/Marcos-A/STRCleaner",
      "description": "Script that extracts all the text from a subtitles file ignoring time indications, HTML tags and other alien info. - Marcos-A/STRCleaner",
      "title": "Marcos-A/STRCleaner",
      "tags": [
        "subtitles",
        "text-extraction",
        "subtitle-processing",
        "text-cleaning"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://github.com/liwf616/awesome-live-stream",
      "description": "Webrtc && Nginx && DASH && Quic \u5b66\u4e60\u8d44\u6599\u6536\u96c6\uff0c\u6301\u7eed\u66f4\u65b0\u4e2d.",
      "title": "liwf616/awesome-live-stream",
      "tags": [
        "webrtc",
        "nginx",
        "dash",
        "quic",
        "live-streaming",
        "learning",
        "tutorial"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://github.com/jrottenberg/ffmpeg",
      "description": "Docker build for FFmpeg on Ubuntu / Alpine / Centos 7 / Scratch - jrottenberg/ffmpeg",
      "title": "jrottenberg/ffmpeg",
      "tags": [
        "docker",
        "encoding",
        "ubuntu",
        "alpine",
        "linux",
        "video-processing"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://link.medium.com/Lu3GnIPeg0",
      "description": "At Netflix, our real-time data infrastructure have embraced the multi-cluster Kafka architecture and Flink powered stream processing\u2026",
      "title": "Inca\u200a\u2014\u200aMessage Tracing and Loss Detection For Streaming Data @Netflix",
      "tags": [
        "kafka",
        "streaming",
        "data infrastructure",
        "message processing",
        "netflix"
      ]
    },
    {
      "category": "chromecast",
      "homepage": "https://github.com/googlecast/CastReceiver",
      "description": "Reference Receiver: CastReceiver shows how to develop a fully Cast Design Checklist compliant receiver with additional features. - googlecast/CastReceiver",
      "title": "googlecast/CastReceiver",
      "tags": [
        "chromecast",
        "google cast",
        "receiver",
        "reference implementation",
        "hardware player"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://github.com/BingLingGroup/autosub",
      "description": "Command-line utility to transcribe/translate from video/audio/subtitles to subtitles  - BingLingGroup/autosub",
      "title": "BingLingGroup/autosub",
      "tags": [
        "subtitles",
        "transcription",
        "translation",
        "command-line",
        "media-processing"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/selsta/hlsdl",
      "description": "C program to download VoD HLS (.m3u8) files.",
      "title": "selsta/hlsdl",
      "tags": [
        "hls",
        "download",
        "m3u8",
        "video streaming",
        "cli tool"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://github.com/lcy0321/m3u8-downloader",
      "description": "Download the ts files according to the given m3u8 file. - lcy0321/m3u8-downloader",
      "title": "lcy0321/m3u8-downloader",
      "tags": [
        "m3u8",
        "hls",
        "streaming",
        "download",
        "video-transport"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://bitmovin.com/encoding-definition-bitrates/?utm_campaign=Newsletter&utm_medium=email&_hsenc=p2ANqtz-8MPFxhR7snQrxPYM7Bl3UTEMgOh5ZXoDQCHjLl9lkskqE0IfBhEuz3us39Br-lvA_CnyNmQl6L5wqO6iKOfAJ8HznenQ&_hsmi=79678208&utm_content=79677632&utm_source=hs_email&hsCtaTracking=b8eb0e0a-f292-435e-8b99-719b75d81412%7C367afa65-d810-4c2e-aa2c-c87e897a8942",
      "title": "Back to Basics: Encoding Definition and Adaptive Bitrate",
      "description": "A tool or resource for encoding-transcoding-guides.",
      "tags": [
        "encoding",
        "bitrate",
        "tutorial",
        "guide",
        "technical-learning"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://youtu.be/p6dLZfs0jTY",
      "description": "Standardization of High Efficiency Video Coding (HEVC) Jens-Rainer Ohm, Institute of Communication Engineering, RWTH Aachen University, DE",
      "title": "Standardization of High Efficiency Video Coding (HEVC)",
      "tags": [
        "codec",
        "video compression",
        "standardization",
        "H.265"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=101310",
      "description": "For the armed forces, streaming is a matter of national security. Here's an exclusive look at how the military, from analysts to ground troops, is using streaming video.",
      "title": "Video in the War Zone: The Current State of Military Streaming",
      "tags": [
        "military",
        "streaming",
        "case study",
        "national security",
        "video technology"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=135141",
      "description": "Metadata and low-latency video create a tactical advantage in intelligence-gathering and decision making. Discover why HEVC is gaining momentum in the armed forces, and Android is preferred over iOS.",
      "title": "Streaming Live From the Battlefield: Military Video in 2019",
      "tags": [
        "military",
        "live streaming",
        "HEVC",
        "tactical video",
        "low-latency",
        "Android"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/estliberitas/node-thumbnails-webvtt",
      "description": "Video thumbnail generator generating WebVTT spec file - estliberitas/node-thumbnails-webvtt",
      "title": "estliberitas/node-thumbnails-webvtt",
      "tags": [
        "thumbnails",
        "webvtt",
        "metadata",
        "video-processing",
        "node.js"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://gist.github.com/mrbar42/ae111731906f958b396f30906004b3fa",
      "description": "bash scripts to create VOD HLS stream with ffmpeg almighty (tested on Linux and OS X) - README.md",
      "title": "bash scripts to create VOD HLS stream with ffmpeg almighty (tested on Linux and OS X)",
      "tags": [
        "bash",
        "HLS",
        "VOD",
        "streaming",
        "script",
        "ffmpeg"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://softron.zendesk.com/hc/en-us/articles/207694617-HOW-TO-View-an-HLS-Stream-in-QuickTime-or-VLC?mobile_site=true",
      "title": "HOW TO: View an HLS Stream in QuickTime or VLC \u2013 Softron Support Desk",
      "description": "A tool or resource for video-streaming-tutorials.",
      "tags": [
        "tutorial",
        "HLS",
        "streaming",
        "QuickTime",
        "VLC",
        "playback"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://docs.peer5.com/guides/production-ready-hls-vod/",
      "description": "Peer5 documentation",
      "title": "Creating A Production Ready Multi Bitrate HLS VOD stream - Peer5 P2P Docs",
      "tags": [
        "HLS",
        "VOD",
        "streaming",
        "multi-bitrate",
        "production",
        "Peer5"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.youtube.com/watch?v=lZI51YzIgVE",
      "description": "Talk by Jonah Horowitz, Albert Tobey What does it take to be a Netflix SRE? With tens of thousands of Linux instances in a distributed system architecture, a...",
      "title": "From Sys Admin to Netflix SRE",
      "tags": [
        "career",
        "sre",
        "netflix",
        "infrastructure",
        "tutorial"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/Eyevinn/toolbox",
      "description": "A set of Docker containers with Streaming tools.",
      "title": "Eyevinn/toolbox",
      "tags": [
        "docker",
        "streaming",
        "toolbox",
        "containers",
        "utilities"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://www.bento4.com/developers/hls/",
      "title": "HLS | Bento4",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "streaming",
        "tools",
        "adaptive-streaming"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://www.bento4.com/",
      "title": "Bento4 | Fast, Modern Tools and C++ Class Library for all your MP4 and DASH media format needs",
      "description": "A tool or resource for containerization-packaging-tools.",
      "tags": [
        "mp4",
        "dash",
        "containerization",
        "packaging",
        "media-processing",
        "c++",
        "library"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/cannonbeach/ott-packager",
      "description": "OTT/ABR streaming encoder (H264/HEVC) and packager for DASH and HLS - cannonbeach/ott-packager",
      "title": "cannonbeach/ott-packager",
      "tags": [
        "encoder",
        "packager",
        "H264",
        "HEVC",
        "DASH",
        "HLS",
        "streaming"
      ]
    },
    {
      "category": "intro-learning",
      "homepage": "https://www.slideshare.net/vcodex/a-short-history-of-video-coding?from_m_app=ios",
      "description": "Video coding is an essential component of video streaming, digital TV, video chat and many other technologies. This presentation, an invited lecture to the US \u2026",
      "title": "A short history of video coding",
      "tags": [
        "video coding",
        "history",
        "technology",
        "lecture",
        "education"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://medium.com/@jnoduq/video-bench-how-measure-your-video-quality-easily-85a0feb8f6e2",
      "description": "Introduction",
      "title": "Video Bench\u200a\u2014\u200aHow measure your video quality easily",
      "tags": [
        "video quality",
        "measurement",
        "testing",
        "benchmarking"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/JNoDuq/videobench",
      "description": "VMAF PSNR Bitrate Analyzer.",
      "title": "JNoDuq/videobench",
      "tags": [
        "benchmarking",
        "video-quality",
        "performance",
        "analyzer",
        "metrics"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://medium.com/@eyevinntechnology/understanding-server-side-dynamic-ad-insertion-d7ed90e34aa2",
      "description": "In this post we\u2019re explaining the principles behind Server-Side Dynamic Ad Insertion technology. If you are already familiar with video\u2026",
      "title": "Understanding Server-Side Dynamic Ad Insertion",
      "tags": [
        "advertising",
        "ad insertion",
        "server-side",
        "monetization"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://www.tvtechnology.com/opinions/scte10435-and-beyond-a-look-at-ad-insertion-in-an-ott-world",
      "description": "Ad Insertion is a very important part of many video delivery systems because of the monetization aspect\u2014it generates revenue!",
      "title": "SCTE-104/35 and Beyond: A Look at Ad Insertion in an OTT World",
      "tags": [
        "advertising",
        "monetization",
        "SCTE-104",
        "SCTE-35",
        "OTT",
        "ad insertion"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/obsproject/obs-studio",
      "description": "OBS Studio - Free and open source software for live streaming and screen recording - obsproject/obs-studio",
      "title": "obsproject/obs-studio",
      "tags": [
        "streaming",
        "screen-recording",
        "live-streaming",
        "video-capture",
        "open-source"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://obsproject.com/",
      "description": "OBS (Open Broadcaster Software) is free and open source software for video recording and live streaming. Stream to Twitch, YouTube and many other providers or record your own videos with high quality H264 / AAC encoding.",
      "title": "Open Broadcaster Software | OBS",
      "tags": [
        "streaming",
        "recording",
        "encoding",
        "open-source",
        "live-streaming"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/artilleryio/artillery-plugin-hls",
      "description": "Load test HTTP Live Streaming (HLS) servers with Artillery \ud83c\udfa5 - artilleryio/artillery-plugin-hls",
      "title": "artilleryio/artillery-plugin-hls",
      "tags": [
        "hls",
        "load testing",
        "performance",
        "artillery",
        "streaming",
        "testing"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/tanersener/mobile-ffmpeg",
      "description": "FFmpeg for Android, iOS and tvOS.",
      "title": "tanersener/mobile-ffmpeg",
      "tags": [
        "ffmpeg",
        "mobile",
        "encoding",
        "cross-platform",
        "video processing"
      ]
    },
    {
      "category": "storage-solutions",
      "homepage": "https://github.com/minio/minio",
      "description": "MinIO is a high performance object storage server compatible with Amazon S3 APIs - minio/minio",
      "title": "minio/minio",
      "tags": [
        "object-storage",
        "cloud-storage",
        "s3-compatible",
        "storage-server"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://dev.to/samuyi/how-to-setup-nginx-for-hls-video-streaming-on-centos-7-3jb8",
      "description": "How to live stream videos with Nginx",
      "title": "How To Setup Nginx For HLS Video Streaming On Centos 7",
      "tags": [
        "nginx",
        "hls",
        "live streaming",
        "centos",
        "tutorial",
        "server configuration"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://mux.com/blog/mobile-hls-guide/",
      "description": "HTTP Live Streaming, also known as HLS, is the most common format used today for streaming video. If you're building a video streaming application today, you should probably use HLS. Apple created the HLS standard in 2009, and it is the required streaming format for iOS devices. Since then, Android",
      "title": "Guide to Mobile Video Streaming with HLS",
      "tags": [
        "mobile",
        "streaming",
        "tutorial",
        "iOS",
        "Android",
        "adaptive streaming"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://www.toptal.com/apple/introduction-to-http-live-streaming-hls",
      "description": "This article explains how HTTP Live Streaming works and demonstrates how to create an HLS player in Android.",
      "title": "Introduction to HTTP Live Streaming: HLS on Android and More",
      "tags": [
        "HLS",
        "Android",
        "tutorial",
        "streaming",
        "mobile development"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://artillery.io/docs/plugin-hls/",
      "title": "HTTP Live Streaming (HLS) - Artillery.io Docs",
      "description": "A tool or resource for testing.",
      "tags": [
        "testing",
        "performance",
        "HLS",
        "streaming",
        "tools"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://developer.apple.com/documentation/http_live_streaming/understanding_the_http_live_streaming_architecture",
      "title": "Understanding the HTTP Live Streaming Architecture | Apple Developer Documentation",
      "description": "A tool or resource for video-streaming-tutorials.",
      "tags": [
        "tutorial",
        "HLS",
        "streaming",
        "documentation",
        "apple"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/tjenkinson/media-element-syncer",
      "description": "Synchronise two or more HTML5 media elements.",
      "title": "tjenkinson/media-element-syncer",
      "tags": [
        "html5",
        "media",
        "synchronization",
        "javascript",
        "web-player"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/watson-developer-cloud/text-to-speech-nodejs",
      "description": ":speaker: Sample Node.js Application for the IBM Watson Text to Speech Service - watson-developer-cloud/text-to-speech-nodejs",
      "title": "watson-developer-cloud/text-to-speech-nodejs",
      "tags": [
        "text-to-speech",
        "audio",
        "nodejs",
        "watson",
        "ai",
        "media-processing"
      ]
    },
    {
      "category": "introduction",
      "homepage": "https://youtu.be/LDeL7-49qm4",
      "description": "An introduction to the basics of video coding",
      "title": "Video Coding Basics - How is this so efficient?",
      "tags": [
        "fundamentals",
        "video coding",
        "technical overview",
        "learning"
      ]
    },
    {
      "category": "podcasts-webinars",
      "homepage": "https://thevideoinsiders.simplecast.com/episodes",
      "description": "Video Insiders Podcast",
      "title": "The Video Insiders",
      "tags": [
        "podcast",
        "video technology",
        "streaming",
        "community",
        "discussion"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://medium.com/netflix-techblog/automated-testing-on-devices-fc5a39f47e24",
      "description": "key concepts and infrastructure",
      "title": "Automated Testing on Devices",
      "tags": [
        "testing",
        "automation",
        "device testing",
        "quality assurance"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://medium.com/@eyevinntechnology/server-less-just-in-time-packaging-with-aws-fargate-and-unified-origin-by-unified-streaming-c1682dc051ca?source=userActivityShare-94bccb50d11-1560983627&_branch_match_id=670020794794030328",
      "description": "In this blog article Jonas Rydholm Birm\u00e9 describes how he created a server-less just-in-time packaging origin, using AWS ECS Fargate tasks\u2026",
      "title": "Server-less Just-in-Time Packaging with AWS Fargate and Unified Origin by Unified Streaming",
      "tags": [
        "serverless",
        "aws",
        "fargate",
        "origin",
        "packaging",
        "cloud",
        "infrastructure"
      ]
    },
    {
      "category": "smart-tv",
      "homepage": "https://github.com/vitalets/awesome-smart-tv",
      "description": ":zap:A curated list of awesome resources for building Smart TV apps - vitalets/awesome-smart-tv",
      "title": "vitalets/awesome-smart-tv",
      "tags": [
        "smart tv",
        "app development",
        "platform",
        "resources",
        "curation"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://gitlab.com/olaris/olaris-server",
      "description": "GitLab.com",
      "title": "olaris / olaris-server",
      "tags": [
        "server",
        "video streaming",
        "gitlab",
        "open source"
      ]
    },
    {
      "category": "smart-tv",
      "homepage": "https://codelabs.developers.google.com/codelabs/cast-receiver/#0",
      "title": "Build a basic Cast Receiver",
      "description": "A tool or resource for smart-tv-players.",
      "tags": [
        "smart tv",
        "cast receiver",
        "video player",
        "hardware"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/StyleShare/HLSCachingReverseProxyServer",
      "description": "A simple local reverse proxy server for HLS segment cache - StyleShare/HLSCachingReverseProxyServer",
      "title": "StyleShare/HLSCachingReverseProxyServer",
      "tags": [
        "hls",
        "caching",
        "proxy",
        "streaming",
        "segment-cache"
      ]
    },
    {
      "category": "audio",
      "homepage": "https://github.com/superpoweredSDK/Low-Latency-Android-iOS-Linux-Windows-tvOS-macOS-Interactive-Audio-Platform",
      "description": "\ud83c\uddf8Superpowered Audio, Networking and Cryptographics SDKs. High performance and cross platform on Android, iOS, macOS, tvOS, Linux, Windows and modern web browsers. - superpoweredSDK/Low-Latency-Andr...",
      "title": "superpoweredSDK/Low-Latency-Android-iOS-Linux-Windows-tvOS-macOS-Interactive-Audio-Platform",
      "tags": [
        "audio",
        "sdk",
        "cross-platform",
        "performance",
        "networking",
        "cryptography"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/muxinc/elements/tree/main/packages/mux-player",
      "description": "`<mux-player>` is the official Mux-flavored video player web component. The player UI is built on [Media Chrome](https://github.com/muxinc/media-chrome) and [`<mux-video>`](https://github.com/muxinc/elements/tree/main/packages/mux-video) drives the core video logic used to play Mux Video content.",
      "title": "elements/packages/mux-player",
      "tags": [
        "web component",
        "HTML5 player",
        "Mux",
        "video player",
        "JavaScript"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://github.com/imoreapps/ffmpeg-avplayer-for-ios-tvos",
      "description": "A tiny but powerful iOS and Apple TV OS av player framework that's based on the FFmpeg library. - imoreapps/ffmpeg-avplayer-for-ios-tvos",
      "title": "imoreapps/ffmpeg-avplayer-for-ios-tvos",
      "tags": [
        "ffmpeg",
        "avplayer",
        "ios",
        "tvos",
        "video player",
        "mobile player"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://github.com/cta-wave/R4WG20-QoE-Metrics",
      "description": "Issue tracking repository for the R4-Wg20 QoE Initiative - cta-wave/R4WG20-QoE-Metrics",
      "title": "cta-wave/R4WG20-QoE-Metrics",
      "tags": [
        "qoe",
        "metrics",
        "performance",
        "testing",
        "video-quality"
      ]
    },
    {
      "category": "official-specs",
      "homepage": "https://tools.ietf.org/html/draft-pantos-hls-rfc8216bis-08",
      "title": "latest HLS Spec",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "HLS",
        "specification",
        "streaming standard",
        "adaptive streaming"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://dashif.org/guidelines/",
      "title": "DASH-IF IOPs",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "adaptive streaming",
        "standards",
        "DASH",
        "streaming protocols"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://www.smarthomebeginner.com/best-home-server-apps/",
      "description": "These are top 9 best home server apps to automate media management, so you get the latest Movies, Music and TV Shows in the best quality available.",
      "title": "9 Best Home Server Apps to Automate Media Management",
      "tags": [
        "media management",
        "automation",
        "home server",
        "media organization",
        "streaming"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/Eyevinn/vod-to-live",
      "description": "A python library to generate Live HLS from VOD.",
      "title": "Eyevinn/vod-to-live",
      "tags": [
        "HLS",
        "live streaming",
        "VOD",
        "python",
        "streaming conversion"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Eyevinn/hls-relay",
      "description": "Script to pull HLS stream from one origin and push to another origin - Eyevinn/hls-relay",
      "title": "Eyevinn/hls-relay",
      "tags": [
        "hls",
        "streaming",
        "relay",
        "origin",
        "protocol"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://bitmovin.com/digital-rights-management-everything-to-know/",
      "title": "Digital Rights Management (DRM) \u2013 Everything you need to know",
      "description": "A tool or resource for drm-solutions-implementations.",
      "tags": [
        "digital rights management",
        "content protection",
        "licensing",
        "security"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://s3.amazonaws.com/solutions-reference/video-on-demand-on-aws/latest/video-on-demand-on-aws.pdf",
      "title": "VOD on AWS",
      "description": "A tool or resource for vod-streaming-servers.",
      "tags": [
        "aws",
        "vod",
        "streaming",
        "cloud",
        "server"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://www.atsc.org/wp-content/uploads/2015/03/Techniques-for-establishing-and-maintaining-audio-loudness.pdf",
      "title": "Techniques for Establishing and Maintaining Audio Loudness for Digital Television",
      "description": "A tool or resource for best-practices-guidelines.",
      "tags": [
        "audio",
        "loudness",
        "digital television",
        "best practices",
        "guidelines"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://github.com/leandromoreira/digital_video_introduction",
      "description": "A hands-on introduction to video technology: image, video, codec (av1, vp9, h265) and more (ffmpeg encoding). - leandromoreira/digital_video_introduction",
      "title": "leandromoreira/digital_video_introduction",
      "tags": [
        "tutorial",
        "codec",
        "ffmpeg",
        "education",
        "av1",
        "vp9",
        "h265"
      ]
    },
    {
      "category": "audio",
      "homepage": "https://bytesandbones.wordpress.com/2017/03/16/audio-nomalization-with-ffmpeg-using-loudnorm-ebur128-filter/",
      "title": "Audio normalization with ffmpeg using loudnorm (ebur128) filter",
      "description": "A tool or resource for audio-analysis-processing.",
      "tags": [
        "audio-processing",
        "ffmpeg",
        "normalization",
        "loudnorm",
        "ebur128"
      ]
    },
    {
      "category": "audio",
      "homepage": "https://www.learndigitalaudio.com/normalize-audio",
      "title": "normalizing Audio",
      "description": "A tool or resource for audio-analysis-processing.",
      "tags": [
        "audio",
        "processing",
        "normalization",
        "analysis",
        "tool"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://www.tcelectronic.com/brand/tcelectronic/loudness-explained#googtrans(en|en)",
      "description": "tcelectronic, ",
      "title": "Loudness Explained Page | Music Tribe - TC Electronic",
      "tags": [
        "audio",
        "loudness",
        "music",
        "sound processing"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.youtube.com/watch?v=iuEtQqC-Sqo",
      "description": "Florian Camerer gives an introduction to the European Broadcasting Union's R128 Broadcast Standard and speaks in general about perceived loudness, peak norma...",
      "title": "EBU R128 Introduction - Florian Camerer",
      "tags": [
        "broadcast",
        "audio",
        "standards",
        "loudness",
        "tutorial"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://www.maketecheasier.com/normalize-music-files-with-ffmpeg/",
      "description": "If your music files are too loud, too soft, or have obnoxious peaks and irregular volume, you can use FFmpeg to normalize your music files. Here's how.",
      "title": "Adjust and Normalize Your Music Files with FFMPEG - Make Tech Easier",
      "tags": [
        "audio processing",
        "normalization",
        "volume adjustment",
        "media tools"
      ]
    },
    {
      "category": "audio",
      "homepage": "https://www.premiumbeat.com/blog/how-to-set-audio-levels-for-video/",
      "description": "Bad sound can easily ruin good footage. Use these tips when it comes time to set audio levels for video and film projects.",
      "title": "How to Set Audio Levels for Video",
      "tags": [
        "audio",
        "sound",
        "video production",
        "audio levels",
        "tutorial"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/slhck/ffmpeg-normalize#examples",
      "description": "Audio Normalization for Python/ffmpeg.",
      "title": "slhck/ffmpeg-normalize",
      "tags": [
        "ffmpeg",
        "audio",
        "normalization",
        "python",
        "processing"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://medium.com/netflix-techblog/extracting-contextual-information-from-video-assets-ee9da25b6008",
      "description": "for an improved Netflix user experience",
      "title": "Extracting contextual information from video assets",
      "tags": [
        "context extraction",
        "user experience",
        "video metadata",
        "content analysis",
        "Netflix"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/peak3d/inputstream.adaptive",
      "description": "kodi inputstream addon for several manifest types.",
      "title": "peak3d/inputstream.adaptive",
      "tags": [
        "kodi",
        "inputstream",
        "manifest",
        "streaming",
        "addon"
      ]
    },
    {
      "category": "mpeg-forums",
      "homepage": "https://www.streamingmedia.com/Articles/Editorial/Featured-Articles/Inside-MPEGs-Ambitious-Plan-to-Launch-3-Video-Codecs-in-2020-134694.aspx",
      "description": "The pace of innovation is getting faster and the demands on video codecs are getting greater. MPEG's three-part plan answers questions of royalties, licensing, and computational efficiency. Meet VVC, MPEG-5 Part 1 (EVC), and MPEG-5 Part 2 (LCEVC).",
      "title": "Inside MPEG's Ambitious Plan to Launch 3 Video Codecs in 2020",
      "tags": [
        "codec",
        "VVC",
        "MPEG",
        "standards",
        "video compression"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/Eyevinn/manifestparser",
      "description": "A manifest parser.",
      "title": "Eyevinn/manifestparser",
      "tags": [
        "manifest",
        "parsing",
        "streaming",
        "adaptive-bitrate"
      ]
    },
    {
      "category": "origin-servers",
      "homepage": "https://github.com/Eyevinn/docker-jit-capture",
      "description": "A Docker container for an open source Just-In-Time Capture Origin - Eyevinn/docker-jit-capture",
      "title": "Eyevinn/docker-jit-capture",
      "tags": [
        "docker",
        "streaming",
        "origin",
        "capture",
        "container"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://github.com/Eyevinn/srt-metadata-extractor",
      "description": "Contribute to Eyevinn/srt-metadata-extractor development by creating an account on GitHub.",
      "title": "Eyevinn/srt-metadata-extractor",
      "tags": [
        "srt",
        "metadata",
        "transport",
        "protocol",
        "extraction"
      ]
    },
    {
      "category": "mobile-web-players",
      "homepage": "https://github.com/Eyevinn/ott-multiview",
      "description": "This is a web based multiview screen for HLS and MPEG-DASH streams based on hls.js and Shaka Player. - Eyevinn/ott-multiview",
      "title": "Eyevinn/ott-multiview",
      "tags": [
        "web player",
        "HLS",
        "DASH",
        "multiview",
        "streaming"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/Eyevinn/docker-hevc",
      "description": "Docker container to create HEVC streaming packages - Eyevinn/docker-hevc",
      "title": "Eyevinn/docker-hevc",
      "tags": [
        "docker",
        "hevc",
        "encoding",
        "streaming",
        "packaging"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/Eyevinn/pseudo-live-playout",
      "description": "Contribute to Eyevinn/pseudo-live-playout development by creating an account on GitHub.",
      "title": "Eyevinn/pseudo-live-playout",
      "tags": [
        "live streaming",
        "playout",
        "adaptive bitrate",
        "github"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/Eyevinn/hls-to-dash",
      "description": "Open source packager and tools to rewrap live HLS to live MPEG DASH - Eyevinn/hls-to-dash",
      "title": "Eyevinn/hls-to-dash",
      "tags": [
        "HLS",
        "DASH",
        "live streaming",
        "protocol conversion",
        "packaging"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/Eyevinn/channel-engine-multiview",
      "description": "A multiview frontend for Eyevinn Channel Engine.",
      "title": "Eyevinn/channel-engine-multiview",
      "tags": [
        "frontend",
        "multiview",
        "video player",
        "channel engine"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://github.com/Eyevinn/vast-info",
      "description": "Parse a VAST or VMAP to show valuable information in a readable format - Eyevinn/vast-info",
      "title": "Eyevinn/vast-info",
      "tags": [
        "advertising",
        "vast",
        "vmap",
        "ad-parsing",
        "video-metadata"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/bengarney/list-of-streams",
      "description": "Community list of public test streams for HLS and DASH. - bengarney/list-of-streams",
      "title": "bengarney/list-of-streams",
      "tags": [
        "HLS",
        "DASH",
        "streaming",
        "test streams",
        "public resources"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://github.com/Eyevinn/streaming-onboarding",
      "description": "New to streaming and don't know where to start? This is the place for you! - Eyevinn/streaming-onboarding",
      "title": "Eyevinn/streaming-onboarding",
      "tags": [
        "beginner",
        "onboarding",
        "tutorial",
        "education",
        "streaming"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://video-streaming-cheatsheet.s3.eu-west-2.amazonaws.com/artifacts/video-streaming-cheatsheet.pdf",
      "description": "The Video Streaming Cheatsheet is a double sided page, suitable for printing, that contains common terminology used in the video streaming industry in a quick reference format",
      "title": "Video Streaming Cheatsheet",
      "tags": [
        "terminology",
        "reference",
        "learning",
        "streaming",
        "quick guide"
      ]
    },
    {
      "category": "encoding-codecs",
      "homepage": "https://github.com/Eyevinn/fmp4-js",
      "description": "A Javascript library to parse ISO Base Media File Format (MPEG-4 Part 12) - Eyevinn/fmp4-js",
      "title": "Eyevinn/fmp4-js",
      "tags": [
        "javascript",
        "codec",
        "parsing",
        "file-format",
        "mpeg4"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Eyevinn/hls-playlist-parser",
      "description": "A Javascript library to parse Hls playlists.",
      "title": "Eyevinn/hls-playlist-parser",
      "tags": [
        "hls",
        "playlist",
        "parser",
        "javascript",
        "streaming"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/Eyevinn/docker-html5player",
      "description": "A Docker containerized HTML5 player based on Shaka Player - Eyevinn/docker-html5player",
      "title": "Eyevinn/docker-html5player",
      "tags": [
        "html5",
        "player",
        "web",
        "docker",
        "shaka-player",
        "containerized"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Eyevinn/hls-ts-js",
      "description": "HLS MPEG-TS parser library in Javascript.",
      "title": "Eyevinn/hls-ts-js",
      "tags": [
        "parser",
        "javascript",
        "streaming",
        "hls",
        "mpeg-ts"
      ]
    },
    {
      "category": "web-players",
      "homepage": "https://github.com/Eyevinn/abr-player-chrome",
      "description": "Chrome extension that uses Eyevinn HTML player to be able to play HLS and MPEG-DASH natively - Eyevinn/abr-player-chrome",
      "title": "Eyevinn/abr-player-chrome",
      "tags": [
        "chrome-extension",
        "html5-player",
        "hls",
        "dash",
        "web-streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Eyevinn/hls-ts-analyzer",
      "description": "Example implementation of hls-ts.js library. ",
      "title": "Eyevinn/hls-ts-analyzer",
      "tags": [
        "hls",
        "streaming",
        "analyzer",
        "library",
        "transport stream"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/Eyevinn/eyevinn-player",
      "description": "Throttled video player to test video streams.",
      "title": "Eyevinn/eyevinn-player",
      "tags": [
        "video player",
        "testing",
        "stream",
        "throttling",
        "performance"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://gist.github.com/krzemienski/e51a0b7a6ba77e616f954e516783270c#file-compile-and-install-latest-ffmpeg-source-sh-L2",
      "description": "compile and install latest ffmpeg source as pkg. GitHub Gist: instantly share code, notes, and snippets.",
      "title": "compile and install latest ffmpeg source as pkg",
      "tags": [
        "ffmpeg",
        "compilation",
        "source",
        "package",
        "installation"
      ]
    },
    {
      "category": "encoding-codecs",
      "homepage": "https://github.com/bloc97/Anime4K",
      "description": "A High-Quality Real Time Upscaler for Anime Video.",
      "title": "bloc97/Anime4K",
      "tags": [
        "upscaling",
        "anime",
        "video-enhancement",
        "real-time",
        "image-processing"
      ]
    },
    {
      "category": "android",
      "homepage": "https://github.com/google/ExoPlayer",
      "description": "ExoPlayer is an application level media player for Android.",
      "title": "google/ExoPlayer",
      "tags": [
        "android",
        "media player",
        "mobile",
        "video playback",
        "streaming"
      ]
    },
    {
      "category": "android",
      "homepage": "https://code.videolan.org/videolan/vlc-android",
      "description": "VLC for Android, Android TV and ChromeOS.",
      "title": "videolan/vlc-android",
      "tags": [
        "mobile",
        "video player",
        "open source",
        "android",
        "chromecast"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://medium.com/plexlabs/xml-code-good-times-rsg-application-b963f0cec01b",
      "description": "Written by John Zolezzi \u2014 April 6th 2018",
      "title": "XML + Code + Good times = RSG Application",
      "tags": [
        "xml",
        "tutorial",
        "application",
        "code-example"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://bitbucket.org/multicoreware/x265_git/wiki/Home",
      "title": "multicoreware / x265 / wiki / Home \u2014 Bitbucket",
      "description": "A tool or resource for open-source-encoder-projects.",
      "tags": [
        "encoder",
        "x265",
        "hevc",
        "h265",
        "open-source",
        "video encoding"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://gitlab.com/nvidia/container-images/samples/blob/master/cuda/ubuntu16.04/ffmpeg-gpu/Dockerfile",
      "description": "Sample Dockerfiles for Docker Hub images",
      "title": "cuda/ubuntu16.04/ffmpeg-gpu/Dockerfile \u00b7 master \u00b7 nvidia / container-images / samples",
      "tags": [
        "docker",
        "ffmpeg",
        "gpu",
        "ubuntu",
        "container",
        "encoding"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/jkarthic-akamai/ABR-Broadcaster",
      "description": "A real time encoder for Adaptive Bitrate Broadcast - jkarthic-akamai/ABR-Broadcaster",
      "title": "jkarthic-akamai/ABR-Broadcaster",
      "tags": [
        "encoder",
        "ABR",
        "real-time",
        "bitrate",
        "streaming"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/federicocalendino/pysub-parser",
      "description": "Utility to extract the text and timestamps of a subtitle file (.srt, .ssa, .sub, .txt). - federicocalendino/pysub-parser",
      "title": "federicocalendino/pysub-parser",
      "tags": [
        "subtitle",
        "parser",
        "text-extraction",
        "timestamps",
        "srt",
        "ssa",
        "sub"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://github.com/cessen/subs_extract",
      "description": "Extracts per-sentence subtitles + audio from a subtitle file + video file. - cessen/subs_extract",
      "title": "cessen/subs_extract",
      "tags": [
        "subtitles",
        "audio extraction",
        "media processing",
        "subtitle tools"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/apm1467/videocr",
      "description": "Extract hardcoded subtitles from videos using machine learning - apm1467/videocr",
      "title": "apm1467/videocr",
      "tags": [
        "subtitles",
        "machine-learning",
        "video-processing",
        "ocr"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://github.com/statsbiblioteket/tv-subtitle-extraction",
      "description": "System for extraction of subtitles from TV broadcasts. - statsbiblioteket/tv-subtitle-extraction",
      "title": "statsbiblioteket/tv-subtitle-extraction",
      "tags": [
        "subtitles",
        "extraction",
        "tv-broadcast",
        "media-processing"
      ]
    },
    {
      "category": "audio-subtitles",
      "homepage": "https://github.com/shawnsky/extract-subtitles",
      "description": "Extract Subtitles From Video",
      "title": "shawnsky/extract-subtitles",
      "tags": [
        "subtitles",
        "extraction",
        "video-processing",
        "media-tools"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/jnorton001/pycaption-cli",
      "description": "A command line interface for the pycaption module. - jnorton001/pycaption-cli",
      "title": "jnorton001/pycaption-cli",
      "tags": [
        "subtitles",
        "captions",
        "cli",
        "python",
        "video-processing"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://medium.com/netflix-techblog/vmaf-the-journey-continues-44b51ee9ed12",
      "description": "by Zhi Li, Christos Bampis, Julie Novak, Anne Aaron, Kyle Swanson, Anush Moorthy and Jan De Cock",
      "title": "VMAF: The Journey Continues",
      "tags": [
        "video quality",
        "metrics",
        "assessment",
        "netflix",
        "machine learning"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://medium.com/netflix-techblog/the-netflix-imf-workflow-f45dd72ed700?source=userActivityShare-94bccb50d11-1568773157&_branch_match_id=702692448596112473",
      "description": "interesting architectural implications",
      "title": "The Netflix IMF Workflow",
      "tags": [
        "netflix",
        "workflow",
        "infrastructure",
        "content-delivery",
        "architecture"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://github.com/mar10/wsgidav",
      "description": "A generic and extendable WebDAV server based on WSGI - mar10/wsgidav",
      "title": "mar10/wsgidav",
      "tags": [
        "webdav",
        "wsgi",
        "server",
        "file-sharing",
        "protocol"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/shrimpgo/video-downloader",
      "description": "Helper to download HLS videos.",
      "title": "shrimpgo/video-downloader",
      "tags": [
        "downloader",
        "hls",
        "video-streaming",
        "utility"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/Eyevinn/hls-download",
      "description": "Download HLS and convert to MP4.",
      "title": "Eyevinn/hls-download",
      "tags": [
        "hls",
        "download",
        "conversion",
        "mp4",
        "streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/osklil/hls-fetch",
      "description": "Download and decrypt videos served by the HTTP Live Streaming (HLS) protocol. - osklil/hls-fetch",
      "title": "osklil/hls-fetch",
      "tags": [
        "hls",
        "video-download",
        "streaming-protocol",
        "decryption"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://github.com/Comcast/scte35-js",
      "description": "A SCTE 35 Parser for JavaScript.",
      "title": "Comcast/scte35-js",
      "tags": [
        "scte35",
        "javascript",
        "parsing",
        "transport",
        "signaling"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/Comcast/caption-inspector",
      "description": "Caption Inspector is a reference decoder for Closed Captions (CEA-608 and CEA-708). - Comcast/caption-inspector",
      "title": "Comcast/caption-inspector",
      "tags": [
        "captions",
        "closed-captions",
        "decoder",
        "accessibility",
        "video-processing"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://github.com/Dash-Industry-Forum/media-tools",
      "description": "A collection of tools for analyzing, handling, and creating media and media containers - Dash-Industry-Forum/media-tools",
      "title": "Dash-Industry-Forum/media-tools",
      "tags": [
        "media",
        "tools",
        "analysis",
        "containers",
        "development"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Dash-Industry-Forum/dash-live-source-simulator",
      "description": "DASH live source simulator providing reference live content. - Dash-Industry-Forum/dash-live-source-simulator",
      "title": "Dash-Industry-Forum/dash-live-source-simulator",
      "tags": [
        "live streaming",
        "DASH",
        "simulator",
        "reference implementation"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/Dash-Industry-Forum/cea608.js",
      "description": "A JavaScript project designed to extract CEA-608 captions. - Dash-Industry-Forum/cea608.js",
      "title": "Dash-Industry-Forum/cea608.js",
      "tags": [
        "captions",
        "javascript",
        "cea-608",
        "subtitle-extraction",
        "media-processing"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://medium.com/netflix-techblog/toward-a-practical-perceptual-video-quality-metric-653f208b9652",
      "description": "measuring video quality accurately at scale",
      "title": "Toward A Practical Perceptual Video Quality Metric",
      "tags": [
        "video quality",
        "metrics",
        "performance",
        "perceptual evaluation",
        "quality of experience"
      ]
    },
    {
      "category": "specs-standards",
      "homepage": "https://medium.com/netflix-techblog/imf-a-prescription-for-versionitis-e0b4c1865c20",
      "description": "the emerging Interoperable Master Format standard",
      "title": "IMF: A Prescription for Versionitis",
      "tags": [
        "standards",
        "IMF",
        "video format",
        "interoperability",
        "technical specification"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/ruffle-rs/ruffle",
      "description": "A Flash Player emulator written in Rust.",
      "title": "ruffle-rs/ruffle",
      "tags": [
        "emulator",
        "player",
        "legacy",
        "rust",
        "flash"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/videolan/LibVLCSharp",
      "description": "Cross-platform .NET/Mono bindings for LibVLC",
      "title": "videolan/libvlcsharp",
      "tags": [
        "cross-platform",
        ".NET",
        "player",
        "library",
        "binding",
        "video playback"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/adrg/libvlc-go",
      "description": "Go bindings for libVLC and high-level media player interface.",
      "title": "adrg/libvlc-go",
      "tags": [
        "go",
        "libvlc",
        "media-player",
        "bindings",
        "playback"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/DSRCorporation/imf-conversion",
      "description": "NF IMF media conversion utility allows to handle flat file creation from a specified CPL within the IMF package - DSRCorporation/imf-conversion",
      "title": "DSRCorporation/imf-conversion",
      "tags": [
        "IMF",
        "media conversion",
        "utility",
        "encoding",
        "video processing"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://stackoverflow.com/questions/3169910/can-ffmpeg-extract-closed-caption-data",
      "description": "I am currently using ffmpeg to convert videos in various formats to flv files. One request has also come up and that is to get closed caption info out o the file as well. Does anyone have any exper...",
      "title": "Can ffmpeg extract closed caption data",
      "tags": [
        "ffmpeg",
        "closed captions",
        "video conversion",
        "media extraction"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/active-video/subtitles",
      "description": "AV Platform MPEG DASH subtitles.",
      "title": "active-video/subtitles",
      "tags": [
        "subtitles",
        "captions",
        "MPEG DASH",
        "AV platform",
        "media tools"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/mahbubcseju/MPEG-DASH-Downloader",
      "description": "Contribute to mahbubcseju/MPEG-DASH-Downloader development by creating an account on GitHub.",
      "title": "mahbubcseju/MPEG-DASH-Downloader",
      "tags": [
        "MPEG-DASH",
        "downloader",
        "adaptive streaming",
        "video streaming"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/shengbinmeng/dash-drm",
      "description": "Demos of MPEG-DASH and DRM.",
      "title": "shengbinmeng/dash-drm",
      "tags": [
        "MPEG-DASH",
        "DRM",
        "adaptive streaming",
        "demo"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/yuhuili-lab/Tide",
      "description": "Simple m3u8 and MPEG-DASH MPD video downloader using libcurl - yuhuili-lab/Tide",
      "title": "yuhuili-lab/Tide",
      "tags": [
        "downloader",
        "libcurl",
        "m3u8",
        "DASH",
        "streaming",
        "video-download"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/aminyazdanpanah/python-ffmpeg-video-streaming",
      "description": "\ud83d\udcfc Package media content for online streaming(DASH and HLS) using FFmpeg - aminyazdanpanah/python-ffmpeg-video-streaming",
      "title": "aminyazdanpanah/python-ffmpeg-video-streaming",
      "tags": [
        "ffmpeg",
        "python",
        "streaming",
        "encoding",
        "dash",
        "hls"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Dash-Industry-Forum/DASH-IF-Conformance",
      "description": "This repository provides the source code for MPEG-DASH/DASH-IF Conformance Software/Validator. It has been extended according to further standards, such as CMAF, DVB-DASH, HbbTV, and CTA WAVE. - Da...",
      "title": "Dash-Industry-Forum/DASH-IF-Conformance",
      "tags": [
        "validator",
        "conformance",
        "MPEG-DASH",
        "standards",
        "CMAF",
        "DVB-DASH",
        "HbbTV"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/bitmovin/libdash",
      "description": "MPEG-DASH Access Library - Official ISO/IEC MPEG-DASH Reference Implementation - bitmovin/libdash",
      "title": "bitmovin/libdash",
      "tags": [
        "dash",
        "adaptive-streaming",
        "protocol",
        "library",
        "mpeg"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/realeyes-media/alpine-node-video-multitool",
      "description": "Contribute to realeyes-media/alpine-node-video-multitool development by creating an account on GitHub.",
      "title": "realeyes-media/alpine-node-video-multitool",
      "tags": [
        "docker",
        "alpine",
        "node",
        "video-processing",
        "multitool",
        "encoding"
      ]
    },
    {
      "category": "specs-standards",
      "homepage": "https://dashif.org/docs/DASH-IF-IOP-v4.3.pdf",
      "title": "Guidelines for Implementation: DASH-IF Interoperability Points",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "DASH",
        "standards",
        "implementation",
        "interoperability",
        "streaming protocols"
      ]
    },
    {
      "category": "general-tools",
      "homepage": "https://github.com/videojs/aes-decrypter",
      "description": "Contribute to videojs/aes-decrypter development by creating an account on GitHub.",
      "title": "videojs/aes-decrypter",
      "tags": [
        "decryption",
        "security",
        "aes",
        "video-js",
        "encryption"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API",
      "description": "Web Video Text Tracks Format (WebVTT) is a format for displaying timed text tracks (such as subtitles or captions) using the track element.",
      "title": "Web Video Text Tracks Format (WebVTT)",
      "tags": [
        "subtitles",
        "captions",
        "text tracks",
        "web video",
        "HTML5"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://sites.google.com/site/linuxencoding/x264-ffmpeg-mapping",
      "title": "x264 FFmpeg Options Guide - Linux Encoding",
      "description": "A tool or resource for encoding-transcoding-guides.",
      "tags": [
        "encoding",
        "linux",
        "x264",
        "transcoding",
        "guide"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/Eyevinn/hls-origin-scripts",
      "description": "Scripts to manipulate HLS manifests at origin or edge server - Eyevinn/hls-origin-scripts",
      "title": "Eyevinn/hls-origin-scripts",
      "tags": [
        "hls",
        "manifest",
        "streaming",
        "origin",
        "edge",
        "server"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://github.com/Eyevinn/channel-engine",
      "description": "OTT TV Channel Engine.",
      "title": "Eyevinn/channel-engine",
      "tags": [
        "OTT",
        "channel",
        "streaming",
        "server",
        "infrastructure"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/Eyevinn/av1-player",
      "description": "Eyevinn AV1 player.",
      "title": "Eyevinn/av1-player",
      "tags": [
        "player",
        "AV1",
        "web player",
        "video playback"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://www.brendanlong.com/the-structure-of-an-mpeg-dash-mpd.html",
      "description": "The MPEG-DASH Media Presentation Description (MPD) is an XML document containing information about media segments, their relationships and information necessary to choose between them, and other metadata that may be needed by clients. In this post, I describe the most important pieces of the MPD, starting from the top level (Periods) and going to the bottom (Segments).",
      "title": "The structure of an MPEG-DASH MPD",
      "tags": [
        "MPEG-DASH",
        "adaptive streaming",
        "XML",
        "media segments",
        "streaming metadata"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/videojs/videojs-contrib-dash",
      "description": "Video.js plugin for supporting the MPEG-DASH playback through a video.js player - videojs/videojs-contrib-dash",
      "title": "videojs/videojs-contrib-dash",
      "tags": [
        "dash",
        "adaptive-streaming",
        "video-player",
        "javascript",
        "streaming-protocol"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/iheartradio/open-m3u8",
      "description": "Open Source m3u8 Parser.",
      "title": "iheartradio/open-m3u8",
      "tags": [
        "m3u8",
        "parser",
        "HLS",
        "streaming",
        "open-source"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://github.com/Comcast/gots",
      "description": "MPEG Transport Stream handling in Go.",
      "title": "Comcast/gots",
      "tags": [
        "transport",
        "mpeg",
        "go",
        "streaming",
        "protocol"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://medium.com/faun/this-is-how-i-reduced-my-cloudfront-bills-by-80-a7b0dfb24128",
      "description": "If you are using S3 and CloudFront to host your content and noticed that your bills are increasing, read this!",
      "title": "This is How I Reduced My CloudFront Bills by 80%",
      "tags": [
        "cloud",
        "aws",
        "cloudfront",
        "cost-optimization",
        "infrastructure"
      ]
    },
    {
      "category": "cdn-integration",
      "homepage": "https://docs.fastly.com/en/guides/amazon-s3",
      "title": "Amazon S3 | Fastly Help Guides",
      "description": "A tool or resource for cdn-integration-distribution.",
      "tags": [
        "cdn",
        "cloud",
        "distribution",
        "content-delivery",
        "amazon-s3",
        "fastly"
      ]
    },
    {
      "category": "cloud-cdn",
      "homepage": "https://endertech.com/blog/edge-computing-fastly-cdn-varnish-vcl-authenticated-requests",
      "description": "A brief explanation of how to use Fastly CDN and Varnish with authenticated requests to offload static file serving from the origin and edge caching.",
      "title": "Edge Computing with Fastly CDN and Varnish VCL for Authenticated Requests - Endertech",
      "tags": [
        "cdn",
        "edge computing",
        "caching",
        "fastly",
        "varnish",
        "authentication"
      ]
    },
    {
      "category": "cloud-cdn",
      "homepage": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/live-streaming.html",
      "description": "To use AWS Media Services with CloudFront to deliver live content to a global audience, follow the guidance included in this section.",
      "title": "AWS CloudFront for Live Streaming",
      "tags": [
        "aws",
        "cloudfront",
        "live streaming",
        "content delivery",
        "media services"
      ]
    },
    {
      "category": "cloud-cdn",
      "homepage": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html",
      "description": "You can set up CloudFront with origin failover for scenarios that require high availability. To get started, create an origin group in which you designate a primary origin for CloudFront plus a second origin that CloudFront automatically switches to when the primary origin returns specific HTTP status code failure responses.",
      "title": "AWS CloudFront Live failover",
      "tags": [
        "aws",
        "cloudfront",
        "cdn",
        "failover",
        "high-availability"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://www.3playmedia.com/resources/popular-topics/closed-captioning/",
      "title": "The ultimate guide to CCs",
      "description": "A tool or resource for subtitle-caption-tools.",
      "tags": [
        "subtitles",
        "captions",
        "accessibility",
        "media-tools"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/sandflow/imscJS/",
      "description": "Renders IMSC/TTML/SMPTE-TT/EBU-TT-D subtitles and captions to HTML",
      "title": "imscJS: IMSC/TTML/SMPTE-TT/EBU-TT-D renderer",
      "tags": [
        "subtitles",
        "captions",
        "rendering",
        "HTML",
        "TTML",
        "IMSC"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/sandflow/imscHRM",
      "description": "Validator for the IMSC Hypothetical Render Model (HRM), which constrains TTML document complexity",
      "title": "IMSC HRM validator",
      "tags": [
        "subtitles",
        "validation",
        "IMSC",
        "TTML",
        "rendering",
        "captions"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/sandflow/ttconv",
      "description": "Converts EBU STL, IMSC/TTML/SMPTE-TT/EBU-TT-D and 608/SCC into IMSC, WebVTT and SRT",
      "title": "ttconv: subtitle/caption format converter",
      "tags": [
        "subtitles",
        "captions",
        "format conversion",
        "accessibility",
        "video processing"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://apps.sandflow.com/imscV/",
      "title": "IMSC validator",
      "description": "A tool or resource for subtitle-caption-tools.",
      "tags": [
        "subtitles",
        "captions",
        "validation",
        "IMSC",
        "media-tools"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://www.w3.org/TR/ttml-imsc1.1/",
      "title": "IMSC Specification",
      "description": "A tool or resource for closed-captioning-subtitling-standards.",
      "tags": [
        "subtitles",
        "closed-captioning",
        "standards",
        "specification",
        "accessibility"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "http://ebu.github.io/ebu-tt-live-toolkit/",
      "title": "EBU-TT Live Interoperability Toolkit",
      "description": "A tool or resource for closed-captioning-subtitling-standards.",
      "tags": [
        "subtitles",
        "captions",
        "standards",
        "EBU-TT",
        "accessibility"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/w3c/IMSC-1.0.1_Text_TestContent/",
      "title": "IMSC 1.0.1 Text test content",
      "description": "A tool or resource for closed-captioning-subtitling-standards.",
      "tags": [
        "subtitles",
        "closed-captioning",
        "standards",
        "text",
        "IMSC"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/w3c/IMSC-1.1_Text_TestContent/",
      "title": "IMSC 1.1 Text test content",
      "description": "A tool or resource for closed-captioning-subtitling-standards.",
      "tags": [
        "subtitles",
        "closed-captioning",
        "IMSC",
        "standards",
        "text processing"
      ]
    },
    {
      "category": "subtitles-captions",
      "homepage": "https://github.com/w3c/IMSC-1.1_Image_TestContent/",
      "title": "IMSC 1.1 Image test content",
      "description": "A tool or resource for closed-captioning-subtitling-standards.",
      "tags": [
        "subtitles",
        "closed-captions",
        "standards",
        "IMSC",
        "accessibility"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://streaminglearningcenter.com/blogs/collection-of-vmaf-resources.html",
      "description": "A colleague asked for some resources relating to VMAF. Rather than answer in an email I thought I would create a post around it. Some of these are from Netflix, most from me (Jan Ozer). I\u2019ve broken the items into three groups; Computing VMAF, Using VMAF, and About VMAF. I hope you find this collection useful.\u2026",
      "title": "Collection of VMAF Resources",
      "tags": [
        "vmaf",
        "video quality",
        "netflix",
        "tutorial",
        "resource collection"
      ]
    },
    {
      "category": "standards-industry",
      "homepage": "https://tech.ebu.ch/docs/tech/tech3324.pdf",
      "title": "EBU Evaluations of Multichannel Audio Codecs",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "audio",
        "codec",
        "standards",
        "broadcasting",
        "evaluation"
      ]
    },
    {
      "category": "quality-testing",
      "homepage": "https://medium.com/@eyevinntechnology/video-quality-assessment-34abd35f96c0?source=userActivityShare-94bccb50d11-1560983815&_branch_match_id=670021582869771680",
      "description": "In Eyevinn\u2019s initiative to share our knowledge around quality we continue with addressing video quality assessment; from both a subjective\u2026",
      "title": "Video Quality Assessment",
      "tags": [
        "video quality",
        "assessment",
        "QoE",
        "metrics",
        "streaming performance"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://medium.com/@eyevinntechnology/securing-ott-content-drm-1af2c08fdd31?source=userActivityShare-94bccb50d11-1560983518&_branch_match_id=670020366479331042",
      "description": "Written by: Boris Asadanin, Streaming Media Consultant and Partner at Eyevinn Technology",
      "title": "Securing OTT Content\u200a\u2014\u200aDRM",
      "tags": [
        "digital rights management",
        "content security",
        "OTT",
        "streaming protection",
        "licensing"
      ]
    },
    {
      "category": "ffmpeg",
      "homepage": "https://medium.com/@eyevinntechnology/loop-file-and-generate-multiple-video-bitrates-muxed-in-mpeg-ts-with-ffmpeg-85658d0b74bb?source=userActivityShare-94bccb50d11-1560983383&_branch_match_id=670019768959110835",
      "description": "In a previous post I described how an MPEG-TS multicast stream can be generated with ffmpeg by looping an MP4 file. In this post I will\u2026",
      "title": "Loop file and generate multiple video bitrates muxed in MPEG-TS with ffmpeg",
      "tags": [
        "ffmpeg",
        "video encoding",
        "bitrate",
        "MPEG-TS",
        "multicast",
        "transcoding"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://medium.com/@eyevinntechnology/ott-content-delivery-cdn-alternatives-cafe75dab71d?source=userActivityShare-94bccb50d11-1560983135&_branch_match_id=670018733519578135",
      "description": "Introduction",
      "title": "OTT Content Delivery\u2013 CDN Alternatives",
      "tags": [
        "CDN",
        "content delivery",
        "streaming infrastructure",
        "OTT",
        "network optimization"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://github.com/hybrik/hybrik-samples/blob/master/Feature%20Examples/Filters/ebu_r128_audio_normalization.json",
      "description": "Hybrik Samples.",
      "title": "hybrik/hybrik-samples",
      "tags": [
        "samples",
        "hybrik",
        "tutorial",
        "code-examples"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://docs.unified-streaming.com/documentation/package/multiple-keys.html",
      "description": "DRM with multiple keys for Unified Packager",
      "title": "Encryption & DRM with Multiple Keys \u2014 Unified Streaming",
      "tags": [
        "encryption",
        "digital rights management",
        "content protection",
        "security",
        "streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://devstreaming-cdn.apple.com/videos/wwdc/2016/510ndmh9wkcvzneegv2/510/510_validating_http_live_streams.pdf",
      "title": "510_validating_http_live_streams.",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "validation",
        "streaming",
        "http-live-streaming",
        "tools"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://devstreaming-cdn.apple.com/videos/wwdc/2019/507fk9wyls0np6piwk/507/507_hls_authoring_for_airplay_2_video.pdf",
      "title": "507_hls_authoring_for_airplay_2.",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "airplay",
        "streaming",
        "authoring",
        "tools"
      ]
    },
    {
      "category": "ios-tvos",
      "homepage": "https://developer.apple.com/documentation/avfoundation/airplay_2/integrating_airplay_for_long-form_video_apps",
      "title": "Integrating AirPlay for Long-Form Video Apps | Apple Developer Documentation",
      "description": "A tool or resource for mobile-players.",
      "tags": [
        "apple",
        "airplay",
        "mobile",
        "video",
        "streaming",
        "ios",
        "tvos"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://developer.apple.com/documentation/http_live_streaming/protocol_extension_for_low-latency_hls_preliminary_specification#3291001",
      "title": "Protocol Extension for Low-Latency HLS (Preliminary Specification) | Apple Developer Documentation",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "apple",
        "streaming",
        "protocol",
        "low-latency",
        "specification"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://developer.apple.com/videos/play/wwdc2019/502",
      "description": "Since its introduction in 2009, HTTP Live Streaming (HLS) has enabled the delivery of countless live and on\u2010demand audio and video...",
      "title": "Introducing Low-Latency HLS - WWDC 2019 - Videos - Apple Developer",
      "tags": [
        "apple",
        "streaming",
        "low-latency",
        "protocol",
        "wwdc"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/qi-shun-wang/HLSDownloader",
      "description": "Download Crypted HLS with server key and play video as local playing on iOS device. - qi-shun-wang/HLSDownloader",
      "title": "qi-shun-wang/HLSDownloader",
      "tags": [
        "hls",
        "ios",
        "video-download",
        "encryption",
        "streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/krad/morsel",
      "description": "\ud83d\udcc7 Swift library for creating HLS playlists and fragmented mp4 files.  Works on Linux and iOS. - krad/morsel",
      "title": "krad/morsel",
      "tags": [
        "swift",
        "library",
        "playlist",
        "mp4",
        "streaming",
        "cross-platform"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/fcanas/HLSCore",
      "description": "A collection of Swift packages for working with HLS - fcanas/HLSCore",
      "title": "fcanas/HLSCore",
      "tags": [
        "swift",
        "streaming",
        "adaptive-streaming",
        "mobile",
        "ios"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://medium.com/@eyevinntechnology/quality-of-experience-in-streaming-5c25355a4111?source=userActivityShare-94bccb50d11-1559724940&_branch_match_id=664741478927428385",
      "description": "In Eyevinn Technology\u2019s ambition to broader our sharing of knowledge we now expand this with addressing quality. In today\u2019s landscape of\u2026",
      "title": "Quality of Experience in Streaming",
      "tags": [
        "quality of experience",
        "streaming performance",
        "video analytics",
        "qoe"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://medium.com/canal-tech/how-video-streaming-works-on-the-web-an-introduction-7919739f7e1",
      "description": "Note: this article is an introduction to video streaming in JavaScript and is mostly targeted to web developers. A large part of the\u2026",
      "title": "How video streaming works on the web: An introduction",
      "tags": [
        "web development",
        "javascript",
        "streaming",
        "tutorial",
        "introduction"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://github.com/Eyevinn/adxchange-engine",
      "description": "Eyevinn Adxchange Engine is a microservice placed between the server-side ad-insertion component and the adserver or SSP - Eyevinn/adxchange-engine",
      "title": "Eyevinn/adxchange-engine",
      "tags": [
        "ad-insertion",
        "microservice",
        "advertising",
        "server-side",
        "monetization"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/Eyevinn/docker-2dash",
      "description": "A Docker container to pre-package MPEG DASH on demand content - Eyevinn/docker-2dash",
      "title": "Eyevinn/docker-2dash",
      "tags": [
        "docker",
        "dash",
        "packaging",
        "streaming",
        "mpeg"
      ]
    },
    {
      "category": "infrastructure-delivery",
      "homepage": "https://medium.com/@eyevinntechnology/ott-content-delivery-b43a35ef24f6",
      "description": "Background",
      "title": "OTT Content Delivery",
      "tags": [
        "OTT",
        "content delivery",
        "streaming infrastructure",
        "video distribution"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://devstreaming-cdn.apple.com/videos/wwdc/2017/515vy4sl7iu70/515/515_hls_authoring_update.pdf",
      "title": "515_hls_authoring_update",
      "description": "A tool or resource for hls-tools.",
      "tags": [
        "hls",
        "streaming",
        "authoring",
        "tools"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://www.linkedin.com/pulse/market-significance-apples-adopting-hevc-heres-what-i-jan-ozer",
      "description": "At the recent World Wide Developer's Conference (WWDC), Apple announced that the next versions of Safari, iOS, and tvOS will support HLS with HEVC encoded video. This puts Apple firmly in the HEVC camp, with the Alliance for Open Media camp (Amazon, Cisco, Intel, Google, Microsoft, Mozilla, Netflix,",
      "title": "The Market Significance of Apple's Adopting HEVC: Here's What I Think",
      "tags": [
        "codec",
        "apple",
        "HEVC",
        "H.265",
        "video compression"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://www.techspot.com/article/1131-hevc-h256-enconding-playback/",
      "description": "HEVC's main advantage over H.264 is that it offers roughly double the compression ratio for the same quality. This means that a video file encoded with HEVC can occupy half the space of its H.264 equivalent with no noticeable change in quality, or the same amount of space with improved quality.",
      "title": "Guide to HEVC/H.265 Encoding and Playback",
      "tags": [
        "codec",
        "compression",
        "encoding",
        "h265",
        "video technology"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://www.theoplayer.com/blog/content-protection-for-hls-with-aes-128-encryption",
      "description": "We will outline the most popular method for content protection with the HTTP Live Streaming (HLS) protocol: AES-128 content encryption.",
      "title": "Content Protection for HLS with AES-128 Encryption",
      "tags": [
        "encryption",
        "content protection",
        "AES-128",
        "streaming security"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://www.bento4.com/documentation/mp4dash/",
      "title": "mp4dash | Bento4",
      "description": "A tool or resource for dash-tools.",
      "tags": [
        "dash",
        "streaming",
        "adaptive-streaming",
        "mp4",
        "packaging"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://github.com/matmoi/create-DASH-HLS",
      "description": "A tutorial to generate fMp4 files compatible with dash and HLS - matmoi/create-DASH-HLS",
      "title": "matmoi/create-DASH-HLS",
      "tags": [
        "tutorial",
        "DASH",
        "HLS",
        "fMP4",
        "streaming",
        "encoding"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://www.youtube.com/watch?v=V6a1AW5xyAw&feature=youtu.be",
      "description": "Dr. Dan Grois, Benjamin Bross, Dr. Detlev Marpe and Karsten S\u00fchring HEVC/H.265 Video Coding Standart including the Range Extensions Scalable Extensions and M...",
      "title": "HEVC/H.265 Video Coding Standard: Part 2",
      "tags": [
        "codec",
        "video compression",
        "h.265",
        "technical specification",
        "video coding"
      ]
    },
    {
      "category": "hevc",
      "homepage": "https://www.youtube.com/watch?v=TLNkK5C1KN8&feature=youtu.be",
      "description": "Dr. Dan Grois, Benjamin Bross, Dr. Detlev Marpe and Karsten S\u00fchring HEVC/H.265 Video Coding Standart including the Range Extensions Scalable Extensions and M...",
      "title": "HEVC/H.265 Video Coding Standard: Part 1",
      "tags": [
        "codec",
        "video compression",
        "h.265",
        "range extensions",
        "scalable extensions"
      ]
    },
    {
      "category": "av1",
      "homepage": "https://medium.com/netflix-techblog/introducing-svt-av1-a-scalable-open-source-av1-framework-c726cce3103a",
      "description": "by Andrey Norkin, Joel Sole, Kyle Swanson, Mariana Afonso, Anush Moorthy, Anne Aaron",
      "title": "Introducing SVT-AV1: a scalable open-source AV1 framework",
      "tags": [
        "codec",
        "open-source",
        "video encoding",
        "AV1",
        "streaming technology"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/kokorin/Jaffree",
      "description": "Java ffmpeg and ffprobe command-line wrapper.",
      "title": "kokorin/Jaffree",
      "tags": [
        "ffmpeg",
        "java",
        "encoding",
        "wrapper",
        "command-line"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://github.com/realeyes-media/demo-encoder",
      "description": "A nodejs encoding system based on ffmpeg and configured to write HLS streaming files to S3 - realeyes-media/demo-encoder",
      "title": "realeyes-media/demo-encoder",
      "tags": [
        "nodejs",
        "ffmpeg",
        "hls",
        "encoding",
        "s3",
        "streaming"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://x265.readthedocs.io/en/master/",
      "title": "x265 Documentation \u2014 x265  documentation",
      "description": "A tool or resource for open-source-encoder-projects.",
      "tags": [
        "encoder",
        "x265",
        "hevc",
        "documentation",
        "open-source"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=122637&PageNum=2",
      "description": "Many who heard that Apple is adding support for HEVC playback in HTTP Live Streaming were left with more questions than answers. Here's what developers need to know.",
      "title": "HEVC in HLS: 10 Key Questions for Streaming Video Developers",
      "tags": [
        "HLS",
        "HEVC",
        "codec",
        "streaming",
        "apple",
        "developer"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://developer.apple.com/documentation/http_live_streaming/hls_authoring_specification_for_apple_devices",
      "title": "HLS Authoring Specification for Apple Devices | Apple Developer Documentation",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "apple",
        "streaming",
        "specification",
        "adaptive-streaming",
        "documentation"
      ]
    },
    {
      "category": "encoding-tools",
      "homepage": "https://streaminglearningcenter.com/wp-content/uploads/2018/05/Encoding-for-HEVC-SME-2018-Jan.pdf",
      "title": "Encoding-for-HEVC",
      "description": "A tool or resource for encoding-transcoding-guides.",
      "tags": [
        "encoding",
        "HEVC",
        "transcoding",
        "tool"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://media.xiph.org/",
      "title": "Xiph.org :: Test Media",
      "description": "A tool or resource for test-content-sample-streams.",
      "tags": [
        "testing",
        "sample-streams",
        "media-utility",
        "content-generation"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://github.com/videojs/m3u8-parser",
      "description": "An m3u8 parser.",
      "title": "videojs/m3u8-parser",
      "tags": [
        "m3u8",
        "parser",
        "HLS",
        "streaming",
        "playlist"
      ]
    },
    {
      "category": "dash",
      "homepage": "https://github.com/videojs/mpd-parser",
      "description": "Contribute to videojs/mpd-parser development by creating an account on GitHub.",
      "title": "videojs/mpd-parser",
      "tags": [
        "dash",
        "parser",
        "adaptive-streaming",
        "video-js"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://docs.google.com/presentation/d/1ZwqWcweR5SqeMBRmJjSukWaHbpdPy-EPYvJCS23_n3U/edit?usp=sharing",
      "description": "Low Latency Live Streaming Apple LLHLS / CMAF Kevin Staunton-Lambert Solutions Architect R&D (July 2019) @kevleyski www.switch.tv",
      "title": "Low Latency Live Streaming",
      "tags": [
        "HLS",
        "low latency",
        "CMAF",
        "streaming protocol",
        "live streaming"
      ]
    },
    {
      "category": "intro-learning",
      "homepage": "https://docs.google.com/presentation/d/1sonEk2neNVBcy8EzieUjWCNzj5SXN7dk-unkR_lpl8k/edit?usp=sharing",
      "description": "WebAssembly (Wasm) On the Edge Kevin Staunton-Lambert Solutions Architect R&D @kevleyski www.switch.tv Wasm)",
      "title": "WebAssembly (Wasm)",
      "tags": [
        "WebAssembly",
        "edge computing",
        "learning",
        "technology overview"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://docs.google.com/presentation/d/1NAqYWmFOwxJEacZCuPLdX0mRNRFPFgeRbsm22EaxerU/edit?usp=sharing",
      "description": "Using Tensorflow For Audience Measurement Kevin Staunton-Lambert Solutions Architect R&D @kevleyski www.switch.tv",
      "title": "Video Tensorflow",
      "tags": [
        "tensorflow",
        "machine learning",
        "audience measurement",
        "video analytics"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://docs.google.com/presentation/d/1yiVEOq2rvtFynP1tLdJj7pBWkAEiE9g8BMaoryxRVrk/edit?usp=sharing",
      "description": "VOD2Live Kevin Staunton-Lambert Solutions Architect R&D @kevleyski Wild Fire! How video engineers can help save lives www.switch.tv",
      "title": "WildFires",
      "tags": [
        "emergency",
        "public safety",
        "video technology",
        "case study",
        "solution architecture"
      ]
    },
    {
      "category": "adaptive-streaming",
      "homepage": "https://docs.google.com/presentation/d/1Ua76BBaZKtTmaZrlfM_eG0vwz0ZAqPIjreCSfB4qFQQ/edit?usp=sharing",
      "description": "VOD2Live Kevin Staunton-Lambert Solutions Architect R&D @kevleyski www.switch.tv",
      "title": "VOD2Live",
      "tags": [
        "vod",
        "live streaming",
        "content conversion",
        "adaptive bitrate",
        "streaming technology"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://www.switch.tv/mediahq/",
      "title": "switch media mediahq",
      "description": "A tool or resource for vod-streaming-servers.",
      "tags": [
        "vod",
        "streaming",
        "server",
        "media-management"
      ]
    },
    {
      "category": "ads-qoe",
      "homepage": "https://www.switch.tv/mediahq/adease/",
      "title": "switch media adease",
      "description": "A tool or resource for streaming-analytics-monitoring.",
      "tags": [
        "analytics",
        "monitoring",
        "streaming",
        "performance",
        "qoe"
      ]
    },
    {
      "category": "mobile-web-players",
      "homepage": "https://www.switch.tv/mediahq/universal-player/",
      "title": "switch media universal player",
      "description": "A tool or resource for frameworks-ui-components.",
      "tags": [
        "player",
        "ui-component",
        "universal",
        "web",
        "framework"
      ]
    },
    {
      "category": "streaming-servers",
      "homepage": "https://www.switch.tv/mediahq/live2vod/",
      "title": "switch media live2vod",
      "description": "A tool or resource for vod-streaming-servers.",
      "tags": [
        "vod",
        "streaming",
        "server",
        "live2vod",
        "media-conversion"
      ]
    },
    {
      "category": "mpeg-forums",
      "title": "MPEG home page",
      "homepage": "https://www.mpegstandards.org",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "standards",
        "industry",
        "MPEG",
        "specifications"
      ]
    },
    {
      "category": "specs-standards",
      "title": "MPEG point cloud compression",
      "homepage": "https://mpeg-pcc.org",
      "description": "A tool or resource for video-codec-specifications.",
      "tags": [
        "MPEG",
        "codec",
        "compression",
        "point cloud",
        "video specification"
      ]
    },
    {
      "category": "specs-standards",
      "title": "ISO Base Media File Format Reference Software",
      "homepage": "https://github.com/MPEGGroup/isobmff",
      "description": "A tool or resource for video-codec-specifications.",
      "tags": [
        "codec",
        "specification",
        "reference",
        "standards",
        "ISO"
      ]
    },
    {
      "category": "specs-standards",
      "title": "Official Registration Authority for the ISOBMFF family of standards",
      "homepage": "http://mp4ra.org/",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "standards",
        "specification",
        "ISOBMFF",
        "file format",
        "industry forum"
      ]
    },
    {
      "category": "specs-standards",
      "title": "MPEG High Efficiency Image File Format (HEIF)",
      "homepage": "https://nokiatech.github.io/heif/",
      "description": "A tool or resource for video-codec-specifications.",
      "tags": [
        "MPEG",
        "codec",
        "specification",
        "file format",
        "image compression"
      ]
    },
    {
      "category": "mpeg-forums",
      "title": "MPEG About",
      "homepage": "https://www.mpegstandards.org/about-mpeg/",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "standards",
        "MPEG",
        "industry-forum",
        "video-technology"
      ]
    },
    {
      "category": "mpeg-forums",
      "title": "MPEG Meetings",
      "homepage": "https://www.mpegstandards.org/meetings/",
      "description": "A tool or resource for industry-forums-standards-bodies.",
      "tags": [
        "standards",
        "industry",
        "MPEG",
        "meetings",
        "specification"
      ]
    },
    {
      "category": "subtitles-captions",
      "description": "Read, write and segment WebVTT caption files in Python.",
      "homepage": "https://github.com/glut23/webvtt-py",
      "title": "glut23/webvtt-py",
      "tags": [
        "captions",
        "WebVTT",
        "python",
        "subtitle-processing"
      ]
    },
    {
      "category": "subtitles-captions",
      "description": "Parse WebVTT files, segments and generates HLS playlists for them.",
      "homepage": "https://github.com/osk/node-webvtt",
      "title": "osk/node-webvtt",
      "tags": [
        "subtitles",
        "captions",
        "WebVTT",
        "HLS",
        "parsing",
        "playlist-generation"
      ]
    },
    {
      "category": "subtitles-captions",
      "description": "WebVTT Ruby parser and segmenter.",
      "homepage": "https://github.com/opencoconut/webvtt-ruby",
      "title": "opencoconut/webvtt-ruby",
      "tags": [
        "subtitles",
        "captions",
        "webvtt",
        "ruby",
        "parsing",
        "text-tracks"
      ]
    },
    {
      "category": "learning-resources",
      "description": "This talk aims to shed light on colorspaces - what they are, how and why they work, why we should care about handling edge cases properly. Starting with hist...",
      "homepage": "https://www.youtube.com/watch?v=XMnvY7a4-As&feature=share",
      "title": "Vittorio Giovara - Color Me Intrigued: A Jaunt Through Color Technology in Video",
      "tags": [
        "color",
        "colorspace",
        "video technology",
        "technical explanation",
        "tutorial"
      ]
    },
    {
      "category": "vendors-hdr",
      "description": "Article explaining hlg vs pq in depth.",
      "homepage": "https://www.displaydaily.com/article/display-daily/hlg-vs-pq-systems-for-hdr-television",
      "title": "HLG vs PQ Systems for HDR Television",
      "tags": [
        "HDR",
        "television",
        "video technology",
        "color standards"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "Hands on tutorial of using ffmpeg to do hdr encoding",
      "homepage": "https://developers.google.com/media/vp9/hdr-encoding",
      "title": "Encode HDR with VP9",
      "tags": [
        "ffmpeg",
        "encoding",
        "hdr",
        "vp9",
        "tutorial"
      ]
    },
    {
      "category": "media-tools",
      "description": "QuickTime file parameter editor for modifying transfer function, colour primary and matrix characteristics.",
      "homepage": "https://github.com/bbc/qtff-parameter-editor",
      "title": "bbc/qtff-parameter-editor",
      "tags": [
        "quicktime",
        "file-editor",
        "color-grading",
        "video-parameters",
        "media-tools"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "How to use luts with ffmpeg for converting between differnt hdr encodes",
      "homepage": "https://downloads.bbc.co.uk/rd/pubs/papers/HDR/BBC_HDRTV_Use_of_LUTs_FFmpeg.pdf",
      "title": "Use of Look-Up Tables (LUTs) in FFmpeg",
      "tags": [
        "ffmpeg",
        "lut",
        "hdr",
        "encoding",
        "video processing"
      ]
    },
    {
      "category": "encoding-codecs",
      "description": "BBC video encoding R&D home page",
      "homepage": "https://www.bbc.co.uk/rd/projects/video-coding",
      "title": "Video Coding - BBC R&D",
      "tags": [
        "research",
        "encoding",
        "BBC",
        "video technology",
        "codec development"
      ]
    },
    {
      "category": "hdr-guidelines",
      "description": "FAQ regarding HDR by BBC R&D",
      "homepage": "https://downloads.bbc.co.uk/rd/pubs/papers/HDR/BBC_HDRTV_FAQ.pdf",
      "title": "Frequently Asked Questions on High Dynamic Range and Hybrid Log-Gamma",
      "tags": [
        "HDR",
        "HLG",
        "BBC",
        "video technology",
        "technical documentation"
      ]
    },
    {
      "category": "ffmpeg",
      "description": "A script to build a static binary of FFmpeg optimised for libvpx (HDR 10bit) encoding.",
      "homepage": "https://github.com/id3as/ffmpeg-libvpx-HDR-static",
      "title": "id3as/ffmpeg-libvpx-HDR-static",
      "tags": [
        "ffmpeg",
        "static-build",
        "libvpx",
        "HDR",
        "encoding",
        "10-bit"
      ]
    },
    {
      "category": "vendors-hdr",
      "description": "BBC R&D HDR project page.",
      "homepage": "https://www.bbc.co.uk/rd/projects/high-dynamic-range",
      "title": "High Dynamic Range Television and Hybrid Log-Gamma - BBC R&D",
      "tags": [
        "HDR",
        "BBC",
        "television",
        "hybrid log-gamma",
        "video technology"
      ]
    },
    {
      "category": "community-events",
      "description": "VideoLAN events",
      "homepage": "https://www.videolan.org/videolan/events",
      "title": "Community events of the VideoLAN non-profit organization",
      "tags": [
        "videolan",
        "nonprofit",
        "community",
        "events",
        "open source"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://github.com/IENT/YUView",
      "description": "YUView is a QT based, cross-platform YUV player with an advanced analytic toolset.",
      "title": "IENT/YUView",
      "tags": [
        "video player",
        "YUV",
        "cross-platform",
        "analysis",
        "Qt"
      ]
    },
    {
      "category": "rist",
      "homepage": "https://www.rist.tv/",
      "description": "The RIST forum manage the Reliable Internet Stream Transport (RIST), for transporting live video over unmanaged networks.",
      "title": "RIST Forum",
      "tags": [
        "transport",
        "protocol",
        "live streaming",
        "network reliability"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://code.videolan.org/rist/librist",
      "description": "A library that can be used to easily add the RIST protocol to your application.",
      "title": "librist",
      "tags": [
        "rist",
        "protocol",
        "streaming",
        "transport",
        "library"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://www.srtalliance.org/",
      "description": "Home page for the SRT protocol",
      "title": "SRT Alliance",
      "tags": [
        "SRT",
        "protocol",
        "streaming",
        "transport"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://github.com/Haivision/srt",
      "title": "SRT Open Source project",
      "description": "A tool or resource for rtmprtsphttp-protocol-servers.",
      "tags": [
        "SRT",
        "protocol",
        "streaming",
        "rtmp",
        "rtsp",
        "http"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://obsproject.com/wiki/Streaming-With-SRT-Protocol",
      "title": "Streaming With SRT Protocol in OBS",
      "description": "A tool or resource for rtmprtsphttp-protocol-servers.",
      "tags": [
        "SRT",
        "streaming protocol",
        "OBS",
        "RTMP",
        "video transport"
      ]
    },
    {
      "category": "transport-protocols",
      "homepage": "https://srtlab.github.io/srt-cookbook/",
      "title": "SRT Cookbook",
      "description": "More in-depth technical documentaion on the SRT protocol and library.",
      "tags": [
        "SRT",
        "protocol",
        "documentation",
        "technical"
      ]
    },
    {
      "category": "protocols-transport",
      "homepage": "https://www.wowza.com/blog/rtmp-streaming-real-time-messaging-protocol",
      "title": "The Real-Time Messaging Protocol Explained",
      "description": "A tool or resource for adaptive-streaming-standards.",
      "tags": [
        "rtmp",
        "messaging",
        "protocol",
        "streaming",
        "transport"
      ]
    },
    {
      "category": "tutorials-case-studies",
      "homepage": "https://opensource.com/article/19/1/basic-live-video-streaming-server",
      "title": "Create your own video streaming server with Linux",
      "description": "Using Nginx to create a streaming server using RTMP and nginx",
      "tags": [
        "nginx",
        "rtmp",
        "linux",
        "streaming server",
        "tutorial"
      ]
    },
    {
      "category": "drm",
      "homepage": "https://ottverse.com/hitchhikers-guide-to-drm-2/",
      "title": "The Hitchhiker's Guide to DRM",
      "description": "A gentle guide to the world of Digital Rights Management. It includes a technology overview of AES, EME, CDM, CENC, Keys, and then explores popular DRM technologies such as Google Widevine, Apple FairPlay, Microsoft PlayReady, and finally, Multi-DRM.",
      "tags": [
        "digital rights management",
        "encryption",
        "security",
        "AES",
        "EME",
        "CDM",
        "multi-DRM"
      ]
    },
    {
      "description": "[vc_row][vc_column][vc_column_text]This is a follow-up to my World\u2019s Smallest H.264 Encoder post. I\u2019ve received several emails asking about precise details of things in two entities in the H.264 bitstream: the Sequence Parameter Set (SPS) and the Picture Parameter Set (PPS). Both entities contain information that an H.264 decoder needs to decode the video data, for example,\u2026",
      "title": "The H.264 Sequence Parameter Set",
      "homepage": "https://www.cardinalpeak.com/the-h-264-sequence-parameter-set",
      "category": "encoding-codecs",
      "tags": [
        "h264",
        "codec",
        "video encoding",
        "parameter set",
        "bitstream"
      ]
    },
    {
      "description": "This article is to introduce H.264 and provide a overview of NAL Unit. It also explains NALU header byte which contains the basic information of a NALU.",
      "title": "Introduction to H.264: (1) NAL Unit | Yumi Chan's Blog",
      "homepage": "https://yumichan.net/video-processing/video-compression/introduction-to-h264-nal-unit/",
      "category": "learning-resources",
      "tags": [
        "h264",
        "codec",
        "tutorial",
        "technical explanation",
        "video compression"
      ]
    },
    {
      "description": "",
      "title": "Overview of the H.264/AVC video coding standard - Circuits and Systems for Video Technology, IEEE Transactions on",
      "homepage": "http://ip.hhi.de/imagecom_G1/assets/pdfs/csvt_overview_0305.pdf",
      "category": "specs-standards",
      "tags": [
        "h264",
        "codec",
        "video standard",
        "technical specification",
        "academic research"
      ]
    },
    {
      "description": "NALU, Annex B, and Start Codes",
      "title": "Video and containers",
      "homepage": "http://neurocline.github.io/dev/2016/07/28/video-and-containers.html",
      "category": "specs-standards",
      "tags": [
        "video standards",
        "container formats",
        "encoding",
        "NALU",
        "Annex B",
        "start codes"
      ]
    },
    {
      "description": "[ECCV 2020] Flow-edge Guided Video Completion . ",
      "title": "vt-vl-lab/FGVC",
      "homepage": "https://github.com/vt-vl-lab/FGVC",
      "category": "media-tools",
      "tags": [
        "video processing",
        "computer vision",
        "machine learning",
        "video completion",
        "ECCV"
      ]
    },
    {
      "description": "A Python wrapper around the MediaInfo library. Contribute to sbraz/pymediainfo development by creating an account on GitHub.",
      "title": "sbraz/pymediainfo: A Python wrapper around the MediaInfo library",
      "homepage": "https://github.com/sbraz/pymediainfo",
      "category": "media-tools",
      "tags": [
        "python",
        "library",
        "media-info",
        "metadata",
        "video-analysis"
      ]
    },
    {
      "description": "Let's build a Netflix. ",
      "title": "nickdesaulniers/netfix",
      "homepage": "https://github.com/nickdesaulniers/netfix",
      "category": "tutorials-case-studies",
      "tags": [
        "netflix",
        "streaming",
        "tutorial",
        "learning project",
        "video platform"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.amazon.com/dp/0134866215/",
      "title": "Video Compression Handbook",
      "description": "2018-07-03 (2nd Edition). Beach, Andy; Owen, Aaron.",
      "tags": [
        "video compression",
        "handbook",
        "technical guide",
        "learning"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.elsevier.com/books/communicating-pictures/bull/978-0-12-405906-1",
      "title": "Communicating Pictures",
      "description": "2014-06-20 (1st Edition). Bull, David.",
      "tags": [
        "book",
        "publication",
        "visual communication",
        "learning"
      ]
    },
    {
      "category": "intro-learning",
      "homepage": "https://tech.ebu.ch/publicaions/circles-of-confusion",
      "title": "Circles of Confusion",
      "description": "2009-01-01. Roberts, Alan.",
      "tags": [
        "reference",
        "historical",
        "learning",
        "video-technology"
      ]
    },
    {
      "category": "players-clients",
      "homepage": "https://mfkl.gumroad.com/l/libvlc-good-parts",
      "title": "The Good Parts of LibVLC",
      "description": "2022-09-15. Finkel, Martin.",
      "tags": [
        "libvlc",
        "video player",
        "client-side",
        "media library"
      ]
    },
    {
      "category": "learning-resources",
      "homepage": "https://www.amazon.com/Fundamentals-Multimedia-Texts-Computer-Science/dp/303062126X/",
      "title": "Fundamentals of Multimedia",
      "description": "2022-02-17 (3rd Edition). Ze-Nian Li (Author), Mark S. Drew (Author), Jiangchuan Liu.",
      "tags": [
        "textbook",
        "multimedia",
        "education",
        "video technology",
        "learning"
      ]
    },
    {
      "description": "The repo for https://stream.new. ",
      "title": "muxinc/stream.new",
      "homepage": "https://github.com/muxinc/stream.new",
      "category": "tutorials-case-studies",
      "tags": [
        "streaming",
        "platform",
        "mux",
        "case-study",
        "web-service"
      ]
    },
    {
      "description": "AutoSub is a CLI application to generate subtitle file (.srt) for any video file using Mozilla DeepSpeech - abhirooptalasila/AutoSub",
      "title": "abhirooptalasila/AutoSub",
      "homepage": "https://github.com/abhirooptalasila/AutoSub",
      "category": "audio-subtitles",
      "tags": [
        "subtitles",
        "captions",
        "CLI",
        "speech-to-text",
        "DeepSpeech"
      ]
    },
    {
      "description": "Television broadcast automation system. ",
      "title": "jaskie/PlayoutAutomation",
      "homepage": "https://github.com/jaskie/PlayoutAutomation",
      "category": "infrastructure-delivery",
      "tags": [
        "broadcast",
        "automation",
        "television",
        "playout",
        "server",
        "streaming"
      ]
    },
    {
      "description": "Code for the paper \"Jukebox: A Generative Model for Music\" - openai/jukebox",
      "title": "openai/jukebox",
      "homepage": "https://github.com/openai/jukebox",
      "category": "media-tools",
      "tags": [
        "ai",
        "music-generation",
        "machine-learning",
        "audio-processing"
      ]
    },
    {
      "description": "Testing framework for decoders conformance. ",
      "title": "fluendo/fluster",
      "homepage": "https://github.com/fluendo/fluster",
      "category": "quality-testing",
      "tags": [
        "testing",
        "decoder",
        "conformance",
        "framework",
        "video technology"
      ]
    },
    {
      "description": "Download HLS videos as MP4 (WebVTT for caption download optional) - egg-bread/hls-to-mp4",
      "title": "egg-bread/hls-to-mp4",
      "homepage": "https://github.com/egg-bread/hls-to-mp4",
      "category": "encoding-tools",
      "tags": [
        "hls",
        "mp4",
        "conversion",
        "download",
        "video-processing",
        "ffmpeg"
      ]
    },
    {
      "description": "A CLI m3u8-downloader program to parse .m3u8 playlist file and download mpeg2-ts video files, concat them and convert it to mp4 using FFMPEG - excalibur-kvrv/m3u8-dl",
      "title": "excalibur-kvrv/m3u8-dl",
      "homepage": "https://github.com/excalibur-kvrv/m3u8-dl",
      "category": "encoding-tools",
      "tags": [
        "m3u8",
        "downloader",
        "ffmpeg",
        "video-conversion",
        "cli-tool"
      ]
    },
    {
      "description": "\u57fa\u4e8ePython\u7684m3u8\u4e0b\u8f7d\u5668. ",
      "title": "huzhenjie/m3u8_downloader",
      "homepage": "https://github.com/huzhenjie/m3u8_downloader",
      "category": "adaptive-streaming",
      "tags": [
        "m3u8",
        "downloader",
        "HLS",
        "Python",
        "streaming"
      ]
    },
    {
      "description": "\u23ef Video player, support for caching, preload, fullscreen transition and custom control view. \u89c6\u9891\u64ad\u653e\u5668\uff0c\u652f\u6301\u8fb9\u4e0b\u8fb9\u64ad\u3001\u9884\u52a0\u8f7d\u3001\u5168\u5c4f\u8f6c\u573a\u548c\u81ea\u5b9a\u4e49\u63a7\u5236\u5c42 - wxxsw/GSPlayer",
      "title": "wxxsw/GSPlayer",
      "homepage": "https://github.com/wxxsw/GSPlayer",
      "category": "mobile-web-players",
      "tags": [
        "video player",
        "mobile",
        "iOS",
        "caching",
        "preload",
        "fullscreen",
        "custom controls"
      ]
    },
    {
      "description": "An advanced media player library, simple and reliable - SRGSSR/srgmediaplayer-apple",
      "title": "SRGSSR/srgmediaplayer-apple",
      "homepage": "https://github.com/SRGSSR/srgmediaplayer-apple",
      "category": "ios-tvos",
      "tags": [
        "apple",
        "media player",
        "ios",
        "tvos",
        "library",
        "streaming"
      ]
    },
    {
      "description": "Python script to easily compute VMAF using FFmpeg. It allows to deinterlace, scale and sync Ref and Distorted video automatically - gdavila/easyVmaf",
      "title": "gdavila/easyVmaf",
      "homepage": "https://github.com/gdavila/easyVmaf",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "vmaf",
        "video-processing",
        "python",
        "encoding"
      ]
    },
    {
      "description": "FFMPEG wrapper for Python. ",
      "title": "imageio/imageio-ffmpeg",
      "homepage": "https://github.com/imageio/imageio-ffmpeg",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "python",
        "wrapper",
        "encoding",
        "video-processing"
      ]
    },
    {
      "description": "A user-friendly Video Converter based on FFMPEG and writen in Python/PyQt5. - videomorph-dev/videomorph",
      "title": "videomorph-dev/videomorph",
      "homepage": "https://github.com/videomorph-dev/videomorph",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "python",
        "video-converter",
        "transcoding",
        "pyqt5"
      ]
    },
    {
      "description": "Web for Visual Quality Assessment. ",
      "title": "MarcAntoine-Arnaud/wisual",
      "homepage": "https://github.com/MarcAntoine-Arnaud/wisual",
      "category": "quality-testing",
      "tags": [
        "quality assessment",
        "web",
        "visual quality",
        "testing",
        "evaluation"
      ]
    },
    {
      "description": "Wifibroadcast is a project aimed at the live transmission of HD video (and other) data using wifi radios. One prominent use case is to transmit camera images for a first person view (FPV) of remote\u2026",
      "title": "Wifibroadcast \u2013 Analog-like transmission of live video data",
      "homepage": "https://befinitiv.wordpress.com/wifibroadcast-analog-like-transmission-of-live-video-data/",
      "category": "protocols-transport",
      "tags": [
        "wifi",
        "live-streaming",
        "transmission",
        "first-person-view",
        "wireless-video"
      ]
    },
    {
      "description": "ts2mpa is a simple tool to extract MPEG Audio from a MPEG-2 Transport Stream. - njh/ts2mpa",
      "title": "njh/ts2mpa",
      "homepage": "https://github.com/njh/ts2mpa",
      "category": "media-tools",
      "tags": [
        "audio",
        "extraction",
        "transport-stream",
        "mpeg",
        "media-tool"
      ]
    },
    {
      "description": "dvbshout takes an MPEG transport stream from a DVB card, extracts audio channels from stream, and sends the audio to an Icecast / Shoutcast server and/or a RTP multicast packet stream. - njh/dvbshout",
      "title": "njh/dvbshout",
      "homepage": "https://github.com/njh/dvbshout",
      "category": "media-tools",
      "tags": [
        "audio",
        "streaming",
        "dvb",
        "icecast",
        "rtp",
        "transport-stream"
      ]
    },
    {
      "description": "DVBlast - Open Source fast DVB/ASI network streamer!",
      "title": "DVBlast - Open Source fast DVB/ASI network streamer! - VideoLAN",
      "homepage": "http://www.videolan.org/projects/dvblast.html",
      "category": "streaming-servers",
      "tags": [
        "dvb",
        "asi",
        "network streaming",
        "open-source",
        "videolan"
      ]
    },
    {
      "description": "Download DVB Inspector for free. DVB transport stream analyzer written in java. DVB Inspector is a java program to analyze captured DVB-streams. It is not a real time tool that can interact with PC-TV DVB hardware directly.",
      "title": "DVB Inspector",
      "homepage": "https://sourceforge.net/projects/dvbinspector/",
      "category": "media-tools",
      "tags": [
        "dvb",
        "stream analyzer",
        "java",
        "transport stream",
        "video inspection"
      ]
    },
    {
      "description": "Broadcast to IP conversion for Wifi indoor coverage - ebu/dtt2ip",
      "title": "ebu/dtt2ip",
      "homepage": "https://github.com/ebu/dtt2ip",
      "category": "infrastructure-delivery",
      "tags": [
        "broadcast",
        "IP conversion",
        "wifi",
        "indoor coverage",
        "network infrastructure"
      ]
    },
    {
      "description": "HbbPlayer is HbbTV application which can playback media by using url of media as parameter. It conforms to W3C and HbbTV specification. - Samsung/HbbPlayer",
      "title": "Samsung/HbbPlayer",
      "homepage": "https://github.com/Samsung/HbbPlayer",
      "category": "smart-tv",
      "tags": [
        "smart tv",
        "hbbtv",
        "samsung",
        "media player",
        "tv application"
      ]
    },
    {
      "description": "TV Application Layer. ",
      "title": "bbc/tal",
      "homepage": "https://github.com/bbc/tal",
      "category": "players-clients",
      "tags": [
        "framework",
        "tv",
        "application",
        "player",
        "client-side"
      ]
    },
    {
      "description": "The Content Manager is a visual production tool which is able to generate on the fly visualisation for DAB slideshow and RadioVIS. .NET framework based, it is developed in C# and is distributed und...",
      "title": "ebu/content-manager",
      "homepage": "https://github.com/ebu/content-manager",
      "category": "media-tools",
      "tags": [
        "production",
        "visualization",
        ".NET",
        "C#",
        "radio",
        "slideshow"
      ]
    },
    {
      "description": "EBU on-demand test engine. ",
      "title": "ebu/test-engine-ondemand",
      "homepage": "https://github.com/ebu/test-engine-ondemand",
      "category": "quality-testing",
      "tags": [
        "testing",
        "test-engine",
        "quality-assessment",
        "ebu"
      ]
    },
    {
      "description": "Small tools and scripts for the EBU test engine platform. - ebu/test-engine-live-tools",
      "title": "ebu/test-engine-live-tools",
      "homepage": "https://github.com/ebu/test-engine-live-tools",
      "category": "quality-testing",
      "tags": [
        "testing",
        "tools",
        "scripts",
        "platform",
        "quality-assurance"
      ]
    },
    {
      "description": "A curated list of amazingly awesome open source resources related to broadcast technologies - ebu/awesome-broadcasting",
      "title": "ebu/awesome-broadcasting",
      "homepage": "https://github.com/ebu/awesome-broadcasting",
      "category": "learning-resources",
      "tags": [
        "awesome-list",
        "broadcasting",
        "open-source",
        "resources",
        "education"
      ]
    },
    {
      "description": "Android music and video player. Uses ExoPlayer 2 and MediaPlayer for lower APIs and makes using ExoMediaPlayer easier. If you need advanced options such as handling Chromecast it is delivered by Ex...",
      "title": "mkaflowski/HybridMediaPlayer",
      "homepage": "https://github.com/mkaflowski/HybridMediaPlayer",
      "category": "android",
      "tags": [
        "android",
        "media-player",
        "exoplayer",
        "mobile-video",
        "video-playback"
      ]
    },
    {
      "description": "",
      "title": "VQEG/streamsim",
      "homepage": "https://github.com/VQEG/streamsim",
      "category": "quality-testing",
      "tags": [
        "quality",
        "testing",
        "simulation",
        "performance",
        "streaming",
        "metrics"
      ]
    },
    {
      "description": "Node.js bindings to ffmpeg command, exposing stream based API - phaux/node-ffmpeg-stream",
      "title": "phaux/node-ffmpeg-stream",
      "homepage": "https://github.com/phaux/node-ffmpeg-stream",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "nodejs",
        "video-processing",
        "streaming",
        "encoding-tools"
      ]
    },
    {
      "description": "A video processing framework with simplicity in mind - vapoursynth/vapoursynth",
      "title": "vapoursynth/vapoursynth",
      "homepage": "https://github.com/vapoursynth/vapoursynth",
      "category": "encoding-tools",
      "tags": [
        "video processing",
        "framework",
        "encoding",
        "video editing",
        "post-processing"
      ]
    },
    {
      "description": "I am using python to do some basic image processing, and want to extend it to process a video frame by frame. I get the video as a blob from a server - .webm encoded - and have it in python as a b...",
      "title": "How to decode a video (memory file / byte string) and step through it frame by frame in python?",
      "homepage": "https://stackoverflow.com/questions/60558412/how-to-decode-a-video-memory-file-byte-string-and-step-through-it-frame-by-f",
      "category": "tutorials-case-studies",
      "tags": [
        "python",
        "video-processing",
        "frame-extraction",
        "tutorial",
        "webm"
      ]
    },
    {
      "description": "Streamlink is a CLI utility which pipes video streams from various services into a video player - streamlink/streamlink",
      "title": "streamlink/streamlink",
      "homepage": "https://github.com/streamlink/streamlink",
      "category": "media-tools",
      "tags": [
        "cli",
        "streaming",
        "video-processing",
        "utility",
        "player-integration"
      ]
    },
    {
      "description": "automatic video supercuts with python. ",
      "title": "antiboredom/videogrep",
      "homepage": "https://github.com/antiboredom/videogrep",
      "category": "media-tools",
      "tags": [
        "video editing",
        "python",
        "automation",
        "media processing"
      ]
    },
    {
      "description": "",
      "title": "Dolby Stream Validator",
      "homepage": "https://ott.dolby.com/OnDelKits_dev/StreamValidator/Start_Here.html",
      "category": "quality-testing",
      "tags": [
        "validation",
        "stream-testing",
        "dolby",
        "quality-control",
        "streaming-validation"
      ]
    },
    {
      "description": "Helper script for cross compiling some media tools for windows, like customizable ffmpeg.exe (with or without non-free components, etc), and some other bonuses like mplayer, mp4box, mxf, etc. - rdp...",
      "title": "rdp/ffmpeg-windows-build-helpers",
      "homepage": "https://github.com/rdp/ffmpeg-windows-build-helpers",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "cross-compilation",
        "windows",
        "media-tools",
        "build-helper"
      ]
    },
    {
      "description": "tsMuxer is a transport stream muxer for remuxing/muxing elementary streams, EVO/VOB/MPG, MKV/MKA, MP4/MOV, TS, M2TS to TS to M2TS. Supported video codecs H.264/AVC, H.265/HEVC, VC-1, MPEG2. Support...",
      "title": "justdan96/tsMuxer",
      "homepage": "https://github.com/justdan96/tsMuxer",
      "category": "encoding-tools",
      "tags": [
        "muxer",
        "remux",
        "video-encoding",
        "codec-conversion",
        "stream-processing"
      ]
    },
    {
      "description": "The FFV1 lossless video codec specification. ",
      "title": "FFmpeg/FFV1",
      "homepage": "https://github.com/FFmpeg/FFV1",
      "category": "codecs",
      "tags": [
        "codec",
        "lossless",
        "FFmpeg",
        "video encoding"
      ]
    },
    {
      "description": "A python interface for FFmpeg using asyncio. ",
      "title": "jonghwanhyeon/python-ffmpeg",
      "homepage": "https://github.com/jonghwanhyeon/python-ffmpeg",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "python",
        "asyncio",
        "video-processing",
        "encoding-library"
      ]
    },
    {
      "description": "A Python application that uses Batch to process media files in parallel with the ffmpeg open-source tool. - Azure-Samples/batch-python-ffmpeg-tutorial",
      "title": "Azure-Samples/batch-python-ffmpeg-tutorial",
      "homepage": "https://github.com/Azure-Samples/batch-python-ffmpeg-tutorial",
      "category": "tutorials-case-studies",
      "tags": [
        "tutorial",
        "ffmpeg",
        "azure",
        "batch processing",
        "media encoding",
        "python"
      ]
    },
    {
      "description": "Pure Python FFmpeg-based live video / audio streaming to YouTube, Facebook, Periscope, Twitch, and more - scivision/PyLivestream",
      "title": "scivision/PyLivestream",
      "homepage": "https://github.com/scivision/PyLivestream",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "python",
        "streaming",
        "live-streaming",
        "encoding"
      ]
    },
    {
      "description": "Build and run Docker containers leveraging NVIDIA GPUs - NVIDIA/nvidia-docker",
      "title": "NVIDIA/nvidia-docker",
      "homepage": "https://github.com/NVIDIA/nvidia-docker",
      "category": "cloud-platforms",
      "tags": [
        "docker",
        "gpu",
        "cloud",
        "containerization",
        "infrastructure"
      ]
    },
    {
      "description": "Self hosted streaming media server. https://docs.streama-project.com/ - streamaserver/streama",
      "title": "streamaserver/streama",
      "homepage": "https://github.com/streamaserver/streama",
      "category": "streaming-servers",
      "tags": [
        "media server",
        "self-hosted",
        "streaming",
        "video hosting"
      ]
    },
    {
      "description": "The gateway to a super high-definition future is ever-nearing",
      "title": "HDMI 2.1: features, specs and news about the latest HDMI standard",
      "homepage": "https://www.whathifi.com/advice/what-hdmi-21-everything-you-need-to-know",
      "category": "specs-standards",
      "tags": [
        "hdmi",
        "video standard",
        "specification",
        "high-definition",
        "technology overview"
      ]
    },
    {
      "description": "",
      "title": "BOLA: Near-Optimal Bitrate Adaptation for Online Videos",
      "homepage": "https://arxiv.org/pdf/1601.06748.pdf",
      "category": "adaptive-streaming",
      "tags": [
        "bitrate",
        "adaptation",
        "streaming",
        "performance",
        "optimization"
      ]
    },
    {
      "description": "Design of scheduling and rate-adaptation algorithms for adaptive HTTP streaming - Stephan Hesse",
      "title": "Design of scheduling and rate-adaptation algorithms for adaptive HTTP streaming \u00b7 dispar.at Blog",
      "homepage": "https://dispar.at/blog/2017/07/08/design-of-scheduling-and-rate-adaptation-algorithms-for-adaptive-http-streaming/",
      "category": "adaptive-streaming",
      "tags": [
        "HTTP streaming",
        "rate adaptation",
        "algorithm design",
        "streaming optimization"
      ]
    },
    {
      "description": "by Mariana Afonso, Anush Moorthy, Liwei Guo, Lishan Zhu, Anne Aaron",
      "title": "Improving our video encodes for legacy devices",
      "homepage": "https://link.medium.com/T7S5MS6IT8",
      "category": "encoding-codecs",
      "tags": [
        "encoding",
        "legacy devices",
        "video optimization",
        "device compatibility"
      ]
    },
    {
      "description": "Billions of videos are viewed across the internet every day, but video on Pinterest is unique. On Pinterest, you\u2019ve always been able to save videos from around the web, and in 2013, we made it\u2026",
      "title": "Building native video Pins",
      "homepage": "https://medium.com/pinterest-engineering/building-native-video-pins-7ff89ad3ec33",
      "category": "tutorials-case-studies",
      "tags": [
        "video pins",
        "platform development",
        "content strategy",
        "mobile video"
      ]
    },
    {
      "description": "Hardware Accelerated VP9 Player in macOS 11.0 Big Sur beta 4+ - rinsuki/HWAcceleratedVP9Player",
      "title": "rinsuki/HWAcceleratedVP9Player",
      "homepage": "https://github.com/rinsuki/HWAcceleratedVP9Player",
      "category": "players-clients",
      "tags": [
        "macOS",
        "VP9",
        "hardware acceleration",
        "video player",
        "Big Sur"
      ]
    },
    {
      "description": "GUI Handler for AV1 Encoders (aomenc, rav1e & svt-av1) - Alkl58/NotEnoughAV1Encodes",
      "title": "Alkl58/NotEnoughAV1Encodes",
      "homepage": "https://github.com/Alkl58/NotEnoughAV1Encodes",
      "category": "encoding-tools",
      "tags": [
        "AV1",
        "encoder",
        "GUI",
        "video processing",
        "transcoding"
      ]
    },
    {
      "description": "The smart city reference pipeline shows how to integrate various media building blocks, with analytics powered by the OpenVINO\u2122 Toolkit, for traffic or stadium sensing, analytics and management tas...",
      "title": "OpenVisualCloud/Smart-City-Sample",
      "homepage": "https://github.com/OpenVisualCloud/Smart-City-Sample",
      "category": "infrastructure-delivery",
      "tags": [
        "smart city",
        "analytics",
        "infrastructure",
        "OpenVINO",
        "video processing"
      ]
    },
    {
      "description": "Current draft (HTML): https://aomediacodec.github.io/av1-rtp-spec/ - AOMediaCodec/av1-rtp-spec",
      "title": "AOMediaCodec/av1-rtp-spec",
      "homepage": "https://github.com/AOMediaCodec/av1-rtp-spec",
      "category": "protocols-transport",
      "tags": [
        "RTP",
        "AV1",
        "transport",
        "codec",
        "specification"
      ]
    },
    {
      "description": "The fastest and safest AV1 encoder. ",
      "title": "xiph/rav1e",
      "homepage": "https://github.com/xiph/rav1e",
      "category": "encoding-codecs",
      "tags": [
        "encoder",
        "AV1",
        "codec",
        "video compression"
      ]
    },
    {
      "description": "dav1d is the fastest AV1 decoder on all platforms.",
      "title": "videolan/dav1d",
      "homepage": "https://code.videolan.org/videolan/dav1d",
      "category": "codecs",
      "tags": [
        "av1",
        "decoder",
        "codec",
        "video",
        "performance"
      ]
    },
    {
      "description": "",
      "title": "intel/vaapi-fits",
      "homepage": "https://github.com/intel/vaapi-fits",
      "category": "quality-testing",
      "tags": [
        "testing",
        "video",
        "hardware-acceleration",
        "intel",
        "validation",
        "quality-assurance"
      ]
    },
    {
      "description": "Full-featured static FFmpeg build helper. ",
      "title": "pyke369/sffmpeg",
      "homepage": "https://github.com/pyke369/sffmpeg",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "build",
        "static",
        "encoding",
        "video processing"
      ]
    },
    {
      "description": "What if you could save time, power consumption and therefore money, while still keeping a decent quality for your converted video ?",
      "title": "Hardware-Assisted Video Transcoding At Dailymotion",
      "homepage": "https://link.medium.com/jfUev36Zs8",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "hardware acceleration",
        "video optimization",
        "efficiency"
      ]
    },
    {
      "description": "",
      "title": "intel/gmmlib",
      "homepage": "https://github.com/intel/gmmlib",
      "category": "encoding-codecs",
      "tags": [
        "intel",
        "graphics",
        "memory",
        "codec",
        "library",
        "low-level"
      ]
    },
    {
      "description": "",
      "title": "intel/media-driver",
      "homepage": "https://github.com/intel/media-driver",
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "hardware",
        "encoding",
        "intel",
        "driver",
        "video processing"
      ]
    },
    {
      "description": "Libva is an implementation for VA-API (Video Acceleration API) - intel/libva",
      "title": "intel/libva",
      "homepage": "https://github.com/intel/libva",
      "category": "encoding-codecs",
      "tags": [
        "video acceleration",
        "codec",
        "hardware encoding",
        "intel",
        "api"
      ]
    },
    {
      "description": "This gist will generate an Intel QSV-enabled FFmpeg build using the open source Intel Media SDK. Testbed used: Ubuntu 18.04LTS. A fallback is also provided for the intel vaapi driver where needed. ...",
      "title": "This gist will generate an Intel QSV-enabled FFmpeg build using the open source Intel Media SDK. Testbed used: Ubuntu 18.04LTS. A fallback is also provided for the intel vaapi driver where needed.",
      "homepage": "https://gist.github.com/SeanMollet/0eed16e80630ab67532890a9d42132af",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "encoding",
        "intel",
        "media-sdk",
        "ubuntu"
      ]
    },
    {
      "description": "VA-API user mode driver for Intel GEN Graphics family - intel/intel-vaapi-driver",
      "title": "intel/intel-vaapi-driver",
      "homepage": "https://github.com/intel/intel-vaapi-driver",
      "category": "encoding-codecs",
      "tags": [
        "intel",
        "vaapi",
        "graphics",
        "driver",
        "hardware-acceleration",
        "video-encoding"
      ]
    },
    {
      "description": "This repository contains a collection of FFmpeg* patches and samples to enable CNN model based video analytics capabilities (such as object detection, classification, recognition) in FFmpeg* framew...",
      "title": "VCDP/FFmpeg-patch",
      "homepage": "https://github.com/VCDP/FFmpeg-patch",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "video-analytics",
        "cnn",
        "object-detection",
        "machine-learning"
      ]
    },
    {
      "description": "Python library to work with SCTE standards. ",
      "title": "jamesfining/scte",
      "homepage": "https://github.com/jamesfining/scte",
      "category": "standards-industry",
      "tags": [
        "scte",
        "standards",
        "python",
        "library",
        "specification"
      ]
    },
    {
      "description": "",
      "title": "Best Practices for End-to-End Workflow Monitoring | Streaming Video Alliance",
      "homepage": "https://www.streamingvideoalliance.org/project/best-practices-for-end-to-end-workflow-monitoring/",
      "category": "tutorials-case-studies",
      "tags": [
        "workflow",
        "monitoring",
        "best practices",
        "streaming",
        "alliance"
      ]
    },
    {
      "description": "Live TS segmenter and HLS manifest creation in Go. ",
      "title": "jordicenzano/go-ts-segmenter",
      "homepage": "https://github.com/jordicenzano/go-ts-segmenter",
      "category": "hls",
      "tags": [
        "hls",
        "segmenter",
        "streaming",
        "go",
        "manifest",
        "adaptive-streaming"
      ]
    },
    {
      "description": "",
      "title": "Byte Down: Making Netflix\u2019s Data Infrastructure Cost-Effective",
      "homepage": "https://netflixtechblog.com/byte-down-making-netflixs-data-infrastructure-cost-effective-fee7b3235032",
      "category": "infrastructure-delivery",
      "tags": [
        "cloud infrastructure",
        "data optimization",
        "streaming architecture",
        "cost management"
      ]
    },
    {
      "description": ":camera: Generate thumbnail sprites from videos. ",
      "title": "flavioribeiro/video-thumbnail-generator",
      "homepage": "https://github.com/flavioribeiro/video-thumbnail-generator",
      "category": "media-tools",
      "tags": [
        "thumbnail",
        "video processing",
        "sprite generation",
        "media utility"
      ]
    },
    {
      "description": "[vc_row margin_top=\u201d30\u2033][vc_column][vc_column_text]I began testing AV1 early this week. Briefly, my tests involve 16 ten-second clips in four genres (movies, sports, animations, gaming) and an \u201cother\u201d category (music video, nature video). I\u2019ve completed the first set of tests with FFmpeg 4.3, benchmarking x264, x265, and the latest version of the Alliance for Open Media AV1 codec,\u2026",
      "title": "Promising Initial Results with AV1 Testing - Streaming Learning Center",
      "homepage": "https://streaminglearningcenter.com/blogs/promising-initial-results-with-av1-testing.html",
      "category": "tutorials-case-studies",
      "tags": [
        "AV1",
        "codec",
        "FFmpeg",
        "benchmarking",
        "video encoding",
        "testing"
      ]
    },
    {
      "description": "Free educational webinars, videos and other resources focused on the Broadcast Industry",
      "title": "Video: HLS and DASH Multi-Codec Encoding & Packaging",
      "homepage": "https://thebroadcastknowledge.com/2020/07/10/video-hls-and-dash-multi-codec-encoding-packaging/",
      "category": "learning-resources",
      "tags": [
        "webinars",
        "education",
        "broadcast",
        "tutorial",
        "free resources"
      ]
    },
    {
      "description": "The ad-insertion reference pipeline shows how to integrate various media building blocks, with analytics powered by the OpenVINO\u2122 Toolkit, for intelligent server-side ad insertion. - OpenVisualClou...",
      "title": "OpenVisualCloud/Ad-Insertion-Sample",
      "homepage": "https://github.com/OpenVisualCloud/Ad-Insertion-Sample",
      "category": "ads-qoe",
      "tags": [
        "advertising",
        "analytics",
        "ad-insertion",
        "server-side",
        "OpenVINO"
      ]
    },
    {
      "description": "Media transcoding is a key function for live video broadcasting, streaming, and video on demand use cases in a CDN network. The CDN Transcode sample (not a finished product) provides a reference pi...",
      "title": "OpenVisualCloud/CDN-Transcode-Sample",
      "homepage": "https://github.com/OpenVisualCloud/CDN-Transcode-Sample",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "CDN",
        "encoding",
        "video processing",
        "media transformation"
      ]
    },
    {
      "description": "OpenFaaS transcode pipeline. ",
      "title": "cpitkin/openfaas-transcode",
      "homepage": "https://github.com/cpitkin/openfaas-transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "serverless",
        "openfaas",
        "ffmpeg",
        "video processing"
      ]
    },
    {
      "description": "A collection of video players with vaguely simple GUIs for video engineers. - GeneticGenesis/phils-players",
      "title": "GeneticGenesis/phils-players",
      "homepage": "https://github.com/GeneticGenesis/phils-players",
      "category": "players-clients",
      "tags": [
        "video player",
        "GUI",
        "custom player",
        "engineering tool"
      ]
    },
    {
      "description": "A Go library for generating MPEG-DASH manifests. ",
      "title": "zencoder/go-dash",
      "homepage": "https://github.com/zencoder/go-dash",
      "category": "dash",
      "tags": [
        "library",
        "go",
        "manifest",
        "adaptive-streaming",
        "mpeg-dash"
      ]
    },
    {
      "description": "All source codes I've provided on stackoverflow as an answer, usually under tag ms-media-foundation. Mediafoundation, audio, video, 3D, decoder, encoder. - mofo7777/Stackoverflow",
      "title": "mofo7777/Stackoverflow",
      "homepage": "https://github.com/mofo7777/Stackoverflow",
      "category": "encoding-codecs",
      "tags": [
        "media-foundation",
        "decoder",
        "encoder",
        "audio",
        "video",
        "3D"
      ]
    },
    {
      "description": "python transcode server. ",
      "title": "cwinging/transcode",
      "homepage": "https://github.com/cwinging/transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "python",
        "server",
        "encoding",
        "video processing"
      ]
    },
    {
      "description": "",
      "title": "bbxnet/transcode",
      "homepage": "https://github.com/bbxnet/transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video processing",
        "encoding",
        "ffmpeg-related"
      ]
    },
    {
      "description": "\ud83d\udcfa a Youtube-like (without censorship and features you don&#39;t need!) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and R...",
      "title": "prologic/tube",
      "homepage": "https://github.com/prologic/tube",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "go",
        "h265",
        "video-sharing",
        "encoding"
      ]
    },
    {
      "description": "ffmpeg H264 H265 HEVC MPEG Video Trans-code Image-Matrix Collage - GeoHaber/Video-Transcode",
      "title": "GeoHaber/Video-Transcode",
      "homepage": "https://github.com/GeoHaber/Video-Transcode",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "video-conversion",
        "h264",
        "h265",
        "hevc",
        "codec-conversion"
      ]
    },
    {
      "description": "React component for HLS player. ",
      "title": "foxford/react-hls",
      "homepage": "https://github.com/foxford/react-hls",
      "category": "web-players",
      "tags": [
        "react",
        "hls",
        "web",
        "player",
        "javascript"
      ]
    },
    {
      "description": "The HTML5 video player for AngularJS. ",
      "title": "videogular/videogular",
      "homepage": "https://github.com/videogular/videogular",
      "category": "web-players",
      "tags": [
        "angular",
        "html5",
        "video player",
        "web development"
      ]
    },
    {
      "description": "Out of box solution for RTSP - HLS live stream transcoding. Makes RTSP easy to play in browsers. - Roverr/rtsp-stream",
      "title": "Roverr/rtsp-stream",
      "homepage": "https://github.com/Roverr/rtsp-stream",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "rtsp",
        "hls",
        "streaming",
        "encoding"
      ]
    },
    {
      "description": "HTML5 &lt;audio&gt; or &lt;video&gt; player with support for MP4, WebM, and MP3 as well as HLS, Dash, YouTube, Facebook, SoundCloud and others with a common HTML5 MediaElement API, ...",
      "title": "mediaelement/mediaelement",
      "homepage": "https://github.com/mediaelement/mediaelement",
      "category": "web-players",
      "tags": [
        "HTML5",
        "video player",
        "cross-browser",
        "web player",
        "media element"
      ]
    },
    {
      "description": "A set of command lines to debug video streaming files like mp4 (MPEG-4 Part 14), ts (MPEG-2 Part 1), fmp4 in Dash, HLS, or MSS, with or without DRM. - leandromoreira/video-containers-debugging-tools",
      "title": "leandromoreira/video-containers-debugging-tools",
      "homepage": "https://github.com/leandromoreira/video-containers-debugging-tools",
      "category": "media-tools",
      "tags": [
        "debugging",
        "video-containers",
        "mp4",
        "ts",
        "fmp4",
        "DASH",
        "HLS",
        "MSS",
        "DRM"
      ]
    },
    {
      "description": "mp4 file analyser written in Python. ",
      "title": "essential61/mp4analyser",
      "homepage": "https://github.com/essential61/mp4analyser",
      "category": "media-tools",
      "tags": [
        "mp4",
        "file-analysis",
        "python",
        "media-tool",
        "video-parsing"
      ]
    },
    {
      "description": "Python module for handling audio metadata. ",
      "title": "quodlibet/mutagen",
      "homepage": "https://github.com/quodlibet/mutagen",
      "category": "media-tools",
      "tags": [
        "audio",
        "metadata",
        "python",
        "library",
        "media-processing"
      ]
    },
    {
      "description": "RTSP/RTP/RTMP/FLV/HLS/MPEG-TS/MPEG-PS/MPEG-DASH/MP4/fMP4 - ireader/media-server",
      "title": "ireader/media-server",
      "homepage": "https://github.com/ireader/media-server",
      "category": "streaming-servers",
      "tags": [
        "rtsp",
        "rtmp",
        "hls",
        "mpeg-ts",
        "media-server",
        "streaming-protocols"
      ]
    },
    {
      "description": "Red5 Server core. ",
      "title": "Red5/red5-server",
      "homepage": "https://github.com/Red5/red5-server",
      "category": "streaming-servers",
      "tags": [
        "streaming",
        "server",
        "rtmp",
        "java",
        "open-source"
      ]
    },
    {
      "description": "Shaka Player in a C++ Framework. ",
      "title": "google/shaka-player-embedded",
      "homepage": "https://github.com/google/shaka-player-embedded",
      "category": "players-clients",
      "tags": [
        "player",
        "embedded",
        "c++",
        "javascript",
        "adaptive streaming"
      ]
    },
    {
      "description": "Raw browser/feature support data from caniuse.com. ",
      "title": "Fyrd/caniuse",
      "homepage": "https://github.com/Fyrd/caniuse",
      "category": "intro-learning",
      "tags": [
        "browser",
        "compatibility",
        "web-standards",
        "learning",
        "feature-support"
      ]
    },
    {
      "description": "At the end of last month, MPEG co-founder Leonardo Chiariglione announced the 'MPEG is closed.' That's not quite true, but it is undergoing a reorganization. So what does that mean for the organization and the new codec standards it is bringing out this year?",
      "title": "MPEG: What Happened?",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=141678",
      "category": "mpeg-forums",
      "tags": [
        "MPEG",
        "standards",
        "codec",
        "organization",
        "industry"
      ]
    },
    {
      "description": "A simple VMAP / VAST proxy. ",
      "title": "Eyevinn/vmapproxy",
      "homepage": "https://github.com/Eyevinn/vmapproxy",
      "category": "ads-qoe",
      "tags": [
        "advertising",
        "ad-proxy",
        "vast",
        "vmap",
        "ad-tech"
      ]
    },
    {
      "description": "Free open-source CEA608 / CEA708 closed-caption encoder/decoder - szatmary/libcaption",
      "title": "szatmary/libcaption",
      "homepage": "https://github.com/szatmary/libcaption",
      "category": "subtitles-captions",
      "tags": [
        "closed-captions",
        "caption-encoding",
        "caption-decoding",
        "accessibility",
        "video-subtitles"
      ]
    },
    {
      "description": "Introduction",
      "title": "3 Cases from a Video Expert: Encoding Basics",
      "homepage": "https://link.medium.com/z6IDbLDWO7",
      "category": "tutorials-case-studies",
      "tags": [
        "encoding",
        "tutorial",
        "video technology",
        "learning"
      ]
    },
    {
      "description": "By: Jeff Gong, Software Engineer, jeffgon@twitch.tv Sahil Dhanju, Software Engineer Intern Chih-Chiang Lu, Senior Software Engineer\u2026",
      "title": "Live Video Transmuxing/Transcoding: FFmpeg vs TwitchTranscoder, Part I",
      "homepage": "https://link.medium.com/iws08p9VO7",
      "category": "tutorials-case-studies",
      "tags": [
        "ffmpeg",
        "transcoding",
        "live video",
        "performance comparison",
        "twitch"
      ]
    },
    {
      "description": "By: Jeff Gong, Software Engineer, jeffgon@twitch.tv Sahil Dhanju, Software Engineer Intern Chih-Chiang Lu, Senior Software Engineer\u2026",
      "title": "Live Video Transmuxing/Transcoding: FFmpeg vs TwitchTranscoder, Part II",
      "homepage": "https://link.medium.com/EYVMBQ3VO7",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "live streaming",
        "video processing",
        "twitch"
      ]
    },
    {
      "description": "Transcoding video is a very resource intensive process. It can take many minutes to process a small, 30-second clip, or even hours to p...",
      "title": "Scalable, Parallel Video Transcoding on Ubuntu",
      "homepage": "https://blog.dustinkirkland.com/2014/07/scalable-parallel-video-transcoding-on.html",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "ubuntu",
        "parallel processing",
        "performance",
        "ffmpeg"
      ]
    },
    {
      "description": "",
      "title": "DASH IF Test Assets Database",
      "homepage": "https://testassets.dashif.org/#testcase/details/58a5ddaa7459f8cb201b8a6d",
      "category": "dash",
      "tags": [
        "dash",
        "streaming",
        "test assets",
        "protocol",
        "adaptive streaming"
      ]
    },
    {
      "description": "",
      "title": "DASH IF Test Assets Database",
      "homepage": "https://testassets.dashif.org/#testvector/groupedList",
      "category": "dash",
      "tags": [
        "dash",
        "adaptive streaming",
        "test assets",
        "protocol",
        "streaming standards"
      ]
    },
    {
      "description": "An open source modular Audio/Visual subjective evaluation test interface - Telecommunication-Telemedia-Assessment/AVRate",
      "title": "Telecommunication-Telemedia-Assessment/AVRate",
      "homepage": "https://github.com/Telecommunication-Telemedia-Assessment/AVRate",
      "category": "quality-testing",
      "tags": [
        "testing",
        "evaluation",
        "audio",
        "visual",
        "interface",
        "research"
      ]
    },
    {
      "description": "Providing the video quality research community with a wide variety of software tools and guidance in order to facilitate research.",
      "title": "VQEG Tools and Subjective Labs Setup",
      "homepage": "https://vqeg.github.io/software-tools/",
      "category": "quality-testing",
      "tags": [
        "research",
        "video quality",
        "tools",
        "subjective testing",
        "labs"
      ]
    },
    {
      "description": "VQEG's Software and Tools Website. ",
      "title": "VQEG/software-tools",
      "homepage": "https://github.com/VQEG/software-tools",
      "category": "standards-industry",
      "tags": [
        "standards",
        "video quality",
        "specification",
        "research",
        "tools"
      ]
    },
    {
      "description": "",
      "title": "Video Quality Experts Group (VQEG)",
      "homepage": "https://www.its.bldrdoc.gov/vqeg/vqeg-home.aspx",
      "category": "standards-industry",
      "tags": [
        "standards",
        "quality",
        "video-assessment",
        "industry-group",
        "specification"
      ]
    },
    {
      "description": "You can build your own live platform just wiring up some open source tools, this is a demo video of https://github.com/jordicenzano/lhls-simple-live-platform",
      "title": "lhls-simple-live-platform",
      "homepage": "https://slides.com/jordicenzano/deck-973aed",
      "category": "tutorials-case-studies",
      "tags": [
        "live streaming",
        "tutorial",
        "open source",
        "platform development",
        "lhls"
      ]
    },
    {
      "description": "A free commercial detector. ",
      "title": "erikkaashoek/Comskip",
      "homepage": "https://github.com/erikkaashoek/Comskip",
      "category": "media-tools",
      "tags": [
        "commercial detection",
        "video processing",
        "media utility",
        "video editing"
      ]
    },
    {
      "description": "Description of the AV1 decoder model.",
      "title": "AV1 decoder model",
      "homepage": "https://norkin.org/research/av1_decoder_model/",
      "category": "av1",
      "tags": [
        "codec",
        "decoder",
        "video compression",
        "AV1"
      ]
    },
    {
      "description": "So, I received an email from an acquaintance that read, \u201cI was curious if there is actually any benefit to a \u201cthreads=\u201d type custom command in x264. Specifically many streamers are buying 8 core/16 thread CPUs to encode as a standalone client capturing information from a video capture device.\u201d I had an article on FFmpeg\u2026",
      "title": "FFmpeg Threads Command: How it Affects Quality and Performance",
      "homepage": "https://streaminglearningcenter.com/blogs/ffmpeg-command-threads-how-it-affects-quality-and-performance.html",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "encoding",
        "performance",
        "threads",
        "x264"
      ]
    },
    {
      "description": "Although the traditional sports world has come to a standstill due to the coronavirus pandemic, many major esports properties are soldiering on, hosting compe",
      "title": "Riot Games Keeps League of Legends Esports Rolling With Fully Cloud-Based Virtualized Workflow",
      "homepage": "https://www.sportsvideo.org/2020/03/27/riot-games-keeps-league-of-legends-esports-rolling-with-fully-cloud-based-virtualized-production-workflow/",
      "category": "cloud-platforms",
      "tags": [
        "cloud",
        "esports",
        "virtualization",
        "workflow",
        "remote production"
      ]
    },
    {
      "description": "",
      "title": "dev-labs-bg/swift-video-generator",
      "homepage": "https://github.com/dev-labs-bg/swift-video-generator",
      "category": "encoding-tools",
      "tags": [
        "swift",
        "video-generator",
        "encoding",
        "tool",
        "development"
      ]
    },
    {
      "description": "QCTools (Quality Control Tools for Video Preservation) is a free and open source software tool that helps users analyze and understand their digitized video files through use of audiovisual analytics and filtering. QCTools is funded by the National Endowment for the Humanities and the Knight Foundation, and is developed by the Bay Area Video Coalition.",
      "title": "QCTools Documentation",
      "homepage": "http://bavc.github.io/qctools/",
      "category": "media-tools",
      "tags": [
        "video analysis",
        "preservation",
        "quality control",
        "tools",
        "open source"
      ]
    },
    {
      "description": "A guide to cables and connectors used for audiovisual tech - amiaopensource/cable-bible",
      "title": "amiaopensource/cable-bible",
      "homepage": "https://github.com/amiaopensource/cable-bible",
      "category": "intro-learning",
      "tags": [
        "cables",
        "connectors",
        "audiovisual",
        "reference",
        "documentation"
      ]
    },
    {
      "description": "Create and execute FFmpeg commands. ",
      "title": "ColorlabMD/FFCommand_Engine",
      "homepage": "https://github.com/ColorlabMD/FFCommand_Engine",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "command",
        "video processing",
        "encoding",
        "tool"
      ]
    },
    {
      "description": "",
      "title": "ffmpeg tutorial",
      "homepage": "http://www.dranger.com/ffmpeg/",
      "category": "tutorials-case-studies",
      "tags": [
        "ffmpeg",
        "tutorial",
        "video processing",
        "encoding",
        "learning"
      ]
    },
    {
      "description": "A fluent API to FFMPEG (http://www.ffmpeg.org). ",
      "title": "fluent-ffmpeg/node-fluent-ffmpeg",
      "homepage": "https://github.com/fluent-ffmpeg/node-fluent-ffmpeg",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "nodejs",
        "video-processing",
        "encoding",
        "library"
      ]
    },
    {
      "description": "This application transcode a video that you send on all formats what you want and diferent resolutions. - cash2one/VideoTranscoding-Backend",
      "title": "cash2one/VideoTranscoding-Backend",
      "homepage": "https://github.com/cash2one/VideoTranscoding-Backend",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video conversion",
        "backend",
        "format conversion",
        "resolution"
      ]
    },
    {
      "description": "Transcodes audio & video files to text, supports MP3, M4A, WAV, MP4, MKV, AVI, MPG & MPEG. No Online API's. Python 3 - shinobizero/audio_transcriber",
      "title": "shinobizero/audio_transcriber",
      "homepage": "https://github.com/shinobizero/audio_transcriber",
      "category": "audio-subtitles",
      "tags": [
        "audio",
        "transcription",
        "python",
        "text-extraction",
        "media-processing"
      ]
    },
    {
      "description": "Gui for ffmpeg to simplify transcoding and embeding audio / subtitles in mkv videos - mugiseyebrows/mugi-ffmpeg",
      "title": "mugiseyebrows/mugi-ffmpeg",
      "homepage": "https://github.com/mugiseyebrows/mugi-ffmpeg",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "gui",
        "video-processing",
        "mkv"
      ]
    },
    {
      "description": "Transcode video files using FFMPEG and python3. ",
      "title": "zolinux/MediaArchiver",
      "homepage": "https://github.com/zolinux/MediaArchiver",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "python",
        "video-processing"
      ]
    },
    {
      "description": "A docker-based video converter that uses VAAPI-compatible hardware for transcoding - git-developer/vaapi-video-converter",
      "title": "git-developer/vaapi-video-converter",
      "homepage": "https://github.com/git-developer/vaapi-video-converter",
      "category": "encoding-tools",
      "tags": [
        "docker",
        "vaapi",
        "hardware-encoding",
        "transcoding",
        "converter"
      ]
    },
    {
      "description": "Transcoding video usando ffmpeg. ",
      "title": "LordCrainer/transcoding_ffmpeg",
      "homepage": "https://github.com/LordCrainer/transcoding_ffmpeg",
      "category": "ffmpeg",
      "tags": [
        "transcoding",
        "video processing",
        "ffmpeg",
        "encoding"
      ]
    },
    {
      "description": "video transcode based on ffmpeg, support H264/HEVC and more. - sambios/ffmpeg_transcoder",
      "title": "sambios/ffmpeg_transcoder",
      "homepage": "https://github.com/sambios/ffmpeg_transcoder",
      "category": "ffmpeg",
      "tags": [
        "transcoding",
        "video processing",
        "h264",
        "hevc",
        "ffmpeg"
      ]
    },
    {
      "description": "nodejs ffmpeg video transcode webui\uff0c\u57fa\u4e8enodejs\u7684\u4e91\u8f6c\u7801\u7cfb\u7edf https://www.efvcms.com - bookyo/express-ffmpeg",
      "title": "bookyo/express-ffmpeg",
      "homepage": "https://github.com/bookyo/express-ffmpeg",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "nodejs",
        "transcoding",
        "web-ui",
        "video-processing"
      ]
    },
    {
      "description": "FFMPEG Wasm Video Transcoder. ",
      "title": "Mozilla-Open-Lab-Etwas/Video-Transcoder",
      "homepage": "https://github.com/Mozilla-Open-Lab-Etwas/Video-Transcoder",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoder",
        "webassembly",
        "wasm",
        "encoding"
      ]
    },
    {
      "description": "Python based batch tools to transcode audio and video conveniently (leverages FFMpeg) - okorach/audio-video-tools",
      "title": "okorach/audio-video-tools",
      "homepage": "https://github.com/okorach/audio-video-tools",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "python",
        "batch processing",
        "media conversion"
      ]
    },
    {
      "description": "Making Streaming Video Better Streaming video is exploding in popularity. Consumers are watching more video online across a myriad of devices. But, the streaming experiences, across providers, can be wildly different from each other which ultimately hurts adoption. The problem is a lack of colla ...",
      "title": "Home | Streaming Video Alliance",
      "homepage": "https://www.streamingvideoalliance.org/",
      "category": "intro-learning",
      "tags": [
        "streaming",
        "education",
        "industry-overview",
        "collaboration",
        "video-technology"
      ]
    },
    {
      "description": "The ffmpeg program has numerous \u201cswitches\u201d that help to adjust and convert audio and video files. Some of them are not explained very well in the documentation, and many websites have c\u2026",
      "title": "Correcting for audio/video sync issues with the ffmpeg program\u2019s ITSOFFSET switch",
      "homepage": "https://wjwoodrow.wordpress.com/2013/02/04/correcting-for-audiovideo-sync-issues-with-the-ffmpeg-programs-itsoffset-switch/",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "audio sync",
        "video processing",
        "technical tutorial",
        "media synchronization"
      ]
    },
    {
      "description": "",
      "title": "aom - Git at Google",
      "homepage": "https://aomedia.googlesource.com/aom/",
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "open-source",
        "video-encoding",
        "av1",
        "google"
      ]
    },
    {
      "description": "Authored by Chirag Oswal, Solution Architect, AWS, and Vikas Tiwari, Solution Architect Manager, AWS Video has become the primary means of Information sharing and learning. Customers are investing in innovative solutions to tap into the e-learning and video space. Video content is their IP and needs to be protected and securely delivered. Online video is a [\u2026]",
      "title": "Creating a secure video-on-demand (VOD) platform using AWS",
      "homepage": "https://aws.amazon.com/blogs/media/creating-a-secure-video-on-demand-vod-platform-using-aws/",
      "category": "infrastructure-delivery",
      "tags": [
        "aws",
        "cloud",
        "vod",
        "security",
        "e-learning",
        "video platform"
      ]
    },
    {
      "description": "FFmpeg/FFprobe AWS Lambda layer. ",
      "title": "serverlesspub/ffmpeg-aws-lambda-layer",
      "homepage": "https://github.com/serverlesspub/ffmpeg-aws-lambda-layer",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "aws",
        "lambda",
        "encoding",
        "video-processing"
      ]
    },
    {
      "description": "A guide to building a transcoder using Exodus, FFmpeg, and AWS Lambda.",
      "title": "Running FFmpeg on AWS Lambda for 1.9% the cost of AWS Elastic Transcoder",
      "homepage": "https://intoli.com/blog/transcoding-on-aws-lambda/",
      "category": "tutorials-case-studies",
      "tags": [
        "ffmpeg",
        "aws",
        "lambda",
        "transcoding",
        "cost-optimization"
      ]
    },
    {
      "description": "Python module to read/write popular video caption formats - pbs/pycaption",
      "title": "pbs/pycaption",
      "homepage": "https://github.com/pbs/pycaption",
      "category": "subtitles-captions",
      "tags": [
        "captions",
        "python",
        "subtitle-processing",
        "accessibility"
      ]
    },
    {
      "description": "Simulate bitrate switching algorithms based on real data traces - pokey909/dash_adaptation_simulator",
      "title": "pokey909/dash_adaptation_simulator",
      "homepage": "https://github.com/pokey909/dash_adaptation_simulator",
      "category": "adaptive-streaming",
      "tags": [
        "dash",
        "bitrate",
        "adaptation",
        "simulator",
        "streaming-algorithm"
      ]
    },
    {
      "description": "A Django project that allows you to catalog and stream your videos (using FFmpeg to add subtitles and transcode). - davidbt/djmediastreamer",
      "title": "davidbt/djmediastreamer",
      "homepage": "https://github.com/davidbt/djmediastreamer",
      "category": "encoding-tools",
      "tags": [
        "django",
        "ffmpeg",
        "video-transcoding",
        "subtitle-processing",
        "media-streaming"
      ]
    },
    {
      "description": "AWS S3 + Lambda + Transcode. ",
      "title": "andressspinetti/video-transcoder",
      "homepage": "https://github.com/andressspinetti/video-transcoder",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "aws",
        "lambda",
        "s3",
        "encoding"
      ]
    },
    {
      "description": "bash script which will detect video new file in folder and transcode it to adaprive bitrate - SmurfManX/ffmpeg-nvidia-adaptive-vod-transcoder",
      "title": "SmurfManX/ffmpeg-nvidia-adaptive-vod-transcoder",
      "homepage": "https://github.com/SmurfManX/ffmpeg-nvidia-adaptive-vod-transcoder",
      "category": "ffmpeg",
      "tags": [
        "transcoding",
        "adaptive-bitrate",
        "nvidia",
        "gpu-acceleration",
        "bash-script"
      ]
    },
    {
      "description": "Video transcoding ffmpeg frontend in Python. ",
      "title": "mrpdaemon/mmf",
      "homepage": "https://github.com/mrpdaemon/mmf",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "python",
        "encoding",
        "video processing"
      ]
    },
    {
      "description": "A Swift wrapper around the transcode-video command - Ponyboy47/TranscodeVideo",
      "title": "Ponyboy47/TranscodeVideo",
      "homepage": "https://github.com/Ponyboy47/TranscodeVideo",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "swift",
        "video-processing",
        "encoding"
      ]
    },
    {
      "description": "Video Transcoding Tools. ",
      "title": "kees/transcode",
      "homepage": "https://github.com/kees/transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video tools",
        "encoding",
        "ffmpeg-related"
      ]
    },
    {
      "description": "Transcode video by ffmpeg with nvenc; normalize the volume; force dynamic range compression to the volume - quarkscript/media_works",
      "title": "quarkscript/media_works",
      "homepage": "https://github.com/quarkscript/media_works",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "nvenc",
        "volume-normalization",
        "video-processing"
      ]
    },
    {
      "description": "Transcode video files to the AV1 format using ffmpeg and libaom-av1. - luziferius/av1transcoder",
      "title": "luziferius/av1transcoder",
      "homepage": "https://github.com/luziferius/av1transcoder",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "av1",
        "encoding",
        "video conversion"
      ]
    },
    {
      "description": "a Python-based software to transcode videos and upload files to a remote server or S3-bucket - sw360cab/pyup-transcoder",
      "title": "sw360cab/pyup-transcoder",
      "homepage": "https://github.com/sw360cab/pyup-transcoder",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "python",
        "ffmpeg",
        "upload",
        "remote-server",
        "s3"
      ]
    },
    {
      "description": "Quickly transcode a source video to MP4, OGV, and WebM, with scale, bitrate, and screengrab options. - monking/transcode-web-video",
      "title": "monking/transcode-web-video",
      "homepage": "https://github.com/monking/transcode-web-video",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video conversion",
        "web video",
        "ffmpeg",
        "encoding"
      ]
    },
    {
      "description": "Distributed video transcoding. ",
      "title": "ericgriffin/fflock",
      "homepage": "https://github.com/ericgriffin/fflock",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "distributed",
        "video processing",
        "ffmpeg-related"
      ]
    },
    {
      "description": "Simple video transcoding application for Django Framework - just-work/django-video-transcoding",
      "title": "just-work/django-video-transcoding",
      "homepage": "https://github.com/just-work/django-video-transcoding",
      "category": "encoding-tools",
      "tags": [
        "django",
        "transcoding",
        "video processing",
        "python",
        "encoding"
      ]
    },
    {
      "description": "Video Transcoder for React Native. ",
      "title": "selsamman/react-native-transcode",
      "homepage": "https://github.com/selsamman/react-native-transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "react-native",
        "mobile",
        "video-processing",
        "encoding"
      ]
    },
    {
      "description": "Transcoding long (>1 hour) videos quickly and cost-effectively on GCP to adaptive HLS and MP4 mezzanine files. Up to 40x $ savings. - xyk2/cloud-transcoder",
      "title": "xyk2/cloud-transcoder",
      "homepage": "https://github.com/xyk2/cloud-transcoder",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "cloud",
        "GCP",
        "HLS",
        "MP4",
        "adaptive streaming"
      ]
    },
    {
      "description": "Unattended video transcoder to H265 and ACC codecs, in MKV containers. - amaurypm/transcode2H265",
      "title": "amaurypm/transcode2H265",
      "homepage": "https://github.com/amaurypm/transcode2H265",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "h265",
        "mkv",
        "ffmpeg",
        "codec-conversion"
      ]
    },
    {
      "description": "Python package containing many tools useful for converting video files to h264/h265 encoded MP4 or MKV files - kwodzicki/video_utils",
      "title": "kwodzicki/video_utils",
      "homepage": "https://github.com/kwodzicki/video_utils",
      "category": "encoding-tools",
      "tags": [
        "python",
        "video conversion",
        "h264",
        "h265",
        "encoding",
        "transcoding"
      ]
    },
    {
      "description": "Tools to batch transcode and process videos. ",
      "title": "bmhayward/Transcode",
      "homepage": "https://github.com/bmhayward/Transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "batch processing",
        "video tools",
        "ffmpeg"
      ]
    },
    {
      "description": "Offline video transcoder written in node.js. ",
      "title": "madebyhiro/codem-transcode",
      "homepage": "https://github.com/madebyhiro/codem-transcode",
      "category": "encoding-tools",
      "tags": [
        "transcoder",
        "node.js",
        "offline-encoding",
        "video-processing"
      ]
    },
    {
      "description": "Docker container to transcode videos in mounted volume to H265 using FFMPEG - Vilsol/Transcoder",
      "title": "Vilsol/Transcoder",
      "homepage": "https://github.com/Vilsol/Transcoder",
      "category": "encoding-tools",
      "tags": [
        "docker",
        "ffmpeg",
        "transcoding",
        "h265",
        "video-encoding"
      ]
    },
    {
      "description": "\ud83d\udcf9\ud83d\udd25 Transcode Google Cloud Storage video files with Node.js and FFmpeg - diego3g/gcloud-node-video-transcoding",
      "title": "diego3g/gcloud-node-video-transcoding",
      "homepage": "https://github.com/diego3g/gcloud-node-video-transcoding",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "nodejs",
        "google-cloud",
        "video-processing"
      ]
    },
    {
      "description": ":clapper: A self-hosted opensource LTI video provider - openfun/marsha",
      "title": "openfun/marsha",
      "homepage": "https://github.com/openfun/marsha",
      "category": "infrastructure-delivery",
      "tags": [
        "lti",
        "open-source",
        "video-hosting",
        "self-hosted",
        "education"
      ]
    },
    {
      "description": "Fantastic transcoder is a video transcoder which utilizes massively parallel compute to achieve ludicrous conversion speeds. - ClearSlide/Fantastic-Transcoder",
      "title": "ClearSlide/Fantastic-Transcoder",
      "homepage": "https://github.com/ClearSlide/Fantastic-Transcoder",
      "category": "encoding-tools",
      "tags": [
        "transcoder",
        "parallel-computing",
        "video-conversion",
        "high-performance"
      ]
    },
    {
      "description": "node.js video transcoding library. ",
      "title": "benvanik/node-transcoding",
      "homepage": "https://github.com/benvanik/node-transcoding",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "nodejs",
        "library",
        "video-processing"
      ]
    },
    {
      "description": "HLS\u3092\u4f7f\u3063\u3066\u307f\u305f\u3067\u3059\uff0e. ",
      "title": "tozastation/HLS-Streaming",
      "homepage": "https://github.com/tozastation/HLS-Streaming",
      "category": "hls",
      "tags": [
        "hls",
        "streaming",
        "adaptive-streaming",
        "japanese"
      ]
    },
    {
      "description": "Middleware for serving HTTP Live Streaming (HLS) compatible media streams. - t-mullen/hls-server",
      "title": "t-mullen/hls-server",
      "homepage": "https://github.com/t-mullen/hls-server",
      "category": "hls",
      "tags": [
        "middleware",
        "streaming",
        "server",
        "HLS",
        "media streaming"
      ]
    },
    {
      "description": "encoder with hls output based on gstreamer. ",
      "title": "i4tv/gstreamill",
      "homepage": "https://github.com/i4tv/gstreamill",
      "category": "encoding-tools",
      "tags": [
        "encoder",
        "gstreamer",
        "hls",
        "video encoding",
        "streaming"
      ]
    },
    {
      "description": "by Andrey Norkin, Joel Sole, Mariana Afonso, Kyle Swanson, Agata Opalach, Anush Moorthy, Anne Aaron",
      "title": "SVT-AV1: an open-source AV1 encoder and decoder",
      "homepage": "https://netflixtechblog.com/svt-av1-an-open-source-av1-encoder-and-decoder-ad295d9b5ca2",
      "category": "av1",
      "tags": [
        "codec",
        "open-source",
        "encoding",
        "decoding",
        "video compression"
      ]
    },
    {
      "description": "How to use CUDA GPU hardware encoding with ffmpeg to encode h264 and h264 HEVC movies in high quality and highspeed with our optimized parameter settings.",
      "title": "CUDA GPU Accelerated h264/h265/HEVC Video Encoding with ffmpeg",
      "homepage": "https://ntown.at/de/knowledgebase/cuda-gpu-accelerated-h264-h265-hevc-video-encoding-with-ffmpeg/",
      "category": "ffmpeg",
      "tags": [
        "cuda",
        "gpu",
        "hardware-encoding",
        "h264",
        "hevc",
        "ffmpeg",
        "video-encoding"
      ]
    },
    {
      "description": "I recently remembered this popular post from my old blog. Since that blog no longer exists, I thought I would repost it here. Since I wrote this post about a decade ago, many others of done a much better job describing this in detail. I highly recommend the following two videos by Alec Watson fro",
      "title": "About Frame Rates or Why 29.97?",
      "homepage": "http://theautomaticfilmmaker.com/blog/2009/2/23/about-frame-rates-or-why-2997.html",
      "category": "introduction",
      "tags": [
        "frame rates",
        "video technology",
        "technical explanation",
        "historical context"
      ]
    },
    {
      "description": "VQMT: Video Quality Measurement Tool. Fast implementations of the following objective image quality metrics: PSNR, SSIM, MS-SSIM, VIFp, PSNR-HVS and PSNR-HVS-M. - Rolinh/VQMT",
      "title": "Rolinh/VQMT",
      "homepage": "https://github.com/Rolinh/VQMT",
      "category": "quality-testing",
      "tags": [
        "quality measurement",
        "video metrics",
        "image quality",
        "performance testing",
        "objective evaluation"
      ]
    },
    {
      "description": "Browse The Most Popular 656 Video Open Source Projects",
      "title": "The Top 656 Video Open Source Projects",
      "homepage": "https://awesomeopensource.com/projects/video",
      "category": "learning-resources",
      "tags": [
        "open source",
        "video projects",
        "learning",
        "compilation",
        "technology"
      ]
    },
    {
      "description": "Convenient unified display of the most relevant technical and tag data for video and audio files. - MediaArea/MediaInfo",
      "title": "MediaArea/MediaInfo",
      "homepage": "https://github.com/MediaArea/MediaInfo",
      "category": "media-tools",
      "tags": [
        "metadata",
        "file analysis",
        "technical information",
        "video tools",
        "audio tools"
      ]
    },
    {
      "description": "Self hostable platform that aims to simplify the complexities of video delivery. Transcode and package your media for online streaming with simple API calls and sane defaults, or craft dynamic HLS playlists on the fly with bumpers, ads and filters.",
      "title": "matvp91/mixwave",
      "homepage": "https://github.com/matvp91/mixwave",
      "category": "infrastructure-delivery",
      "tags": [
        "self-hosted",
        "video delivery",
        "transcoding",
        "HLS",
        "streaming platform",
        "API"
      ]
    },
    {
      "description": "Tools to transcode, inspect and convert videos. ",
      "title": "donmelton/video_transcoding",
      "homepage": "https://github.com/donmelton/video_transcoding",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video conversion",
        "encoding",
        "tools"
      ]
    },
    {
      "description": "Other tools to transcode videos. ",
      "title": "donmelton/other_video_transcoding",
      "homepage": "https://github.com/donmelton/other_video_transcoding",
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "video processing",
        "ffmpeg",
        "encoding"
      ]
    },
    {
      "description": "Encrypted Media Extensions. ",
      "title": "w3c/encrypted-media",
      "homepage": "https://github.com/w3c/encrypted-media/",
      "category": "standards-industry",
      "tags": [
        "drm",
        "web standards",
        "media specification",
        "browser technology"
      ]
    },
    {
      "description": "Python script to download all Springer books released for free during the 2020 COVID-19 quarantine - alexgand/springer_free_books",
      "title": "alexgand/springer_free_books: Python script to download all Springer books released for free during the 2020 COVID-19 quarantine",
      "homepage": "https://github.com/alexgand/springer_free_books",
      "category": "learning-resources",
      "tags": [
        "python",
        "download",
        "books",
        "education",
        "script"
      ]
    },
    {
      "description": "",
      "title": "HowVideo.works",
      "homepage": "https://howvideo.works",
      "category": "intro-learning",
      "tags": [
        "video technology",
        "learning",
        "streaming",
        "education",
        "technical resources"
      ]
    },
    {
      "description": "A command-line tool for inspecting MPEG-TS files. Contribute to brendanlong/mpeg-ts-inspector development by creating an account on GitHub.",
      "title": "brendanlong/mpeg-ts-inspector: A command-line tool for inspecting MPEG-TS files",
      "homepage": "https://github.com/brendanlong/mpeg-ts-inspector",
      "category": "media-tools",
      "tags": [
        "inspection",
        "mpeg-ts",
        "command-line",
        "analysis",
        "media-tool"
      ]
    },
    {
      "description": "Vireo is a lightweight and versatile video processing library written in C++11 - twitter/vireo",
      "title": "twitter/vireo: Vireo is a lightweight and versatile video processing library written in C++11",
      "homepage": "https://github.com/twitter/vireo",
      "category": "encoding-tools",
      "tags": [
        "c++",
        "video-processing",
        "library",
        "encoding",
        "lightweight"
      ]
    },
    {
      "description": "Specification for Encapsulating Opus Audio in ISO-BMFF Container - webmproject/opus-dash",
      "title": "webmproject/opus-dash: Specification for Encapsulating Opus Audio in ISO-BMFF Container",
      "homepage": "https://github.com/webmproject/opus-dash",
      "category": "dash",
      "tags": [
        "opus",
        "audio",
        "container",
        "specification",
        "iso-bmff",
        "streaming"
      ]
    },
    {
      "description": "CCExtractor - Official version maintained by the core team - CCExtractor/ccextractor",
      "title": "CCExtractor/ccextractor: CCExtractor - Official version maintained by the core team",
      "homepage": "https://github.com/CCExtractor/ccextractor",
      "category": "subtitles-captions",
      "tags": [
        "subtitles",
        "captions",
        "extraction",
        "video-processing",
        "accessibility"
      ]
    },
    {
      "description": "avbroadcast - republish media streams for mass consumption - media-toolbox/avbroadcast",
      "title": "media-toolbox/avbroadcast: avbroadcast - republish media streams for mass consumption",
      "homepage": "https://github.com/media-toolbox/avbroadcast",
      "category": "media-tools",
      "tags": [
        "stream republishing",
        "media distribution",
        "stream management",
        "broadcast tools"
      ]
    },
    {
      "description": "",
      "title": "MPEG DASH Sample Content | Bento4",
      "homepage": "http://www.bento4.com/developers/dash/dash-sample-content",
      "category": "dash",
      "tags": [
        "adaptive streaming",
        "DASH",
        "sample content",
        "Bento4",
        "streaming protocol"
      ]
    },
    {
      "description": "Find the offset of an audio file within another audio file - bbc/audio-offset-finder",
      "title": "bbc/audio-offset-finder: Find the offset of an audio file within another audio file",
      "homepage": "https://github.com/bbc/audio-offset-finder",
      "category": "media-tools",
      "tags": [
        "audio",
        "offset",
        "media-analysis",
        "audio-processing",
        "utility"
      ]
    },
    {
      "description": "Cookbook of commonly used FFmpeg recipes with descriptions of how each command works and how to modify it to fit your needs",
      "title": "ffmprovisr",
      "homepage": "https://amiaopensource.github.io/ffmprovisr",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "tutorial",
        "video processing",
        "command-line",
        "encoding"
      ]
    },
    {
      "description": "Automatically compile and configure ffmpeg, Python 3.7.2(default), PyAV, OpenCV, Keras, Tensorflow(CPU Mode) and other relative environment. - sunhailin-Leo/AutoConfigShellScript",
      "title": "sunhailin-Leo/AutoConfigShellScript: Automatically compile and configure ffmpeg, Python 3.7.2(default), PyAV, OpenCV, Keras, Tensorflow(CPU Mode) and other relative environment.",
      "homepage": "https://github.com/sunhailin-Leo/AutoConfigShellScript",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "python",
        "configuration",
        "automation",
        "video-processing"
      ]
    },
    {
      "description": "Runs FFmpeg transcoding processes simultaneously and measures CPU performance - 2501world/transcoding-performance-trial",
      "title": "2501world/transcoding-performance-trial: Runs FFmpeg transcoding processes simultaneously and measures CPU performance",
      "homepage": "https://github.com/2501world/transcoding-performance-trial",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "performance",
        "cpu",
        "benchmark"
      ]
    },
    {
      "description": "\u5206\u5e03\u5f0fFFMpeg\u8f6c\u7801\u96c6\u7fa4\u3002A FFMpeg transcoding cluster runs in variable CPUs, including ARM, x86, and others which can run linux. You can use it to run a RaspberryPi cluster. - chn-lee-yumi/distributed_ffmpeg_...",
      "title": "chn-lee-yumi/distributed_ffmpeg_transcoding_cluster: \u5206\u5e03\u5f0fFFMpeg\u8f6c\u7801\u96c6\u7fa4\u3002A FFMpeg transcoding cluster runs in variable CPUs, including ARM, x86, and others which can run linux. You can use it to run a RaspberryPi cluster.",
      "homepage": "https://github.com/chn-lee-yumi/distributed_ffmpeg_transcoding_cluster",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "transcoding",
        "distributed",
        "encoding",
        "raspberry-pi",
        "cluster"
      ]
    },
    {
      "description": "",
      "title": "Saurabh702/ffmpeg-scale-benchmark",
      "homepage": "https://github.com/Saurabh702/ffmpeg-scale-benchmark",
      "category": "ffmpeg",
      "tags": [
        "performance",
        "benchmarking",
        "scaling",
        "video processing",
        "ffmpeg"
      ]
    },
    {
      "description": "FFmpeg transcoders benchmark. Contribute to AlvianPrasetya/transcoding development by creating an account on GitHub.",
      "title": "AlvianPrasetya/transcoding: FFmpeg transcoders benchmark",
      "homepage": "https://github.com/AlvianPrasetya/transcoding",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "transcoding",
        "benchmark",
        "encoding",
        "video processing"
      ]
    },
    {
      "description": "A comparison of ffmpeg, Shotdetect and PySceneDetect for shot transition detection - albanie/shot-detection-benchmarks",
      "title": "albanie/shot-detection-benchmarks: A comparison of ffmpeg, Shotdetect and PySceneDetect for shot transition detection",
      "homepage": "https://github.com/albanie/shot-detection-benchmarks",
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "shot detection",
        "video analysis",
        "benchmarking",
        "video processing"
      ]
    },
    {
      "description": "This repository is about video compression, and more specifically about the motion estimation block (ME block) of a video encoder. It is a research project for developing an efficient motion estima...",
      "title": "AK1194/Video-Compression-motion-estimation-block-video-encoder: This repository is about video compression, and more specifically about the motion estimation block (ME block) of a video encoder. It is a research project for developing an efficient motion",
      "homepage": "https://github.com/AK1194/Video-Compression-motion-estimation-block-video-encoder",
      "category": "encoding-codecs",
      "tags": [
        "video compression",
        "motion estimation",
        "encoder",
        "research",
        "video technology"
      ]
    },
    {
      "description": "Cross-platform command-line AV1 encode toolkit. Contribute to master-of-zen/Av1an development by creating an account on GitHub.",
      "title": "master-of-zen/Av1an: Cross-platform command-line AV1 encode toolkit",
      "homepage": "https://github.com/master-of-zen/Av1an",
      "category": "encoding-tools",
      "tags": [
        "av1",
        "encoding",
        "command-line",
        "toolkit",
        "cross-platform"
      ]
    },
    {
      "description": "A collection of FFmpeg commands taken from practice - mitio/useful-ffmpeg-commands",
      "title": "mitio/useful-ffmpeg-commands: A collection of FFmpeg commands taken from practice",
      "homepage": "https://github.com/mitio/useful-ffmpeg-commands",
      "category": "ffmpeg",
      "tags": [
        "ffmpeg",
        "video processing",
        "command collection",
        "encoding"
      ]
    },
    {
      "description": "GUI File Format Converter. Contribute to ilstam/FF-Multi-Converter development by creating an account on GitHub.",
      "title": "ilstam/FF-Multi-Converter: GUI File Format Converter",
      "homepage": "https://github.com/ilstam/FF-Multi-Converter",
      "category": "encoding-tools",
      "tags": [
        "file converter",
        "ffmpeg",
        "gui",
        "format conversion",
        "media tools"
      ]
    },
    {
      "description": "",
      "title": "H.264 profiles and levels | Inside & Outside MediaCoder",
      "homepage": "http://blog.mediacoderhq.com/h264-profiles-and-levels",
      "category": "encoding-codecs",
      "tags": [
        "h264",
        "codec",
        "video encoding",
        "profiles",
        "levels",
        "technical documentation"
      ]
    },
    {
      "description": "",
      "title": "Dash-Industry-Forum/Ingest",
      "homepage": "https://github.com/Dash-Industry-Forum/Ingest",
      "category": "dash",
      "tags": [
        "dash",
        "adaptive-streaming",
        "streaming-protocol",
        "ingest",
        "video-transport"
      ]
    },
    {
      "description": "MPEG DASH validator JS library. Contribute to Eyevinn/dash-validator-js development by creating an account on GitHub.",
      "title": "dash-validator-js/README.md at master \u00b7 Eyevinn/dash-validator-js",
      "homepage": "https://github.com/Eyevinn/dash-validator-js/",
      "category": "dash",
      "tags": [
        "validator",
        "javascript",
        "library",
        "streaming",
        "validation",
        "DASH"
      ]
    },
    {
      "description": "Learn about all our projects.",
      "title": "Shaka Packager \u2013 opensource.google",
      "homepage": "https://opensource.google/projects/shaka-packager",
      "category": "intro-learning",
      "tags": [
        "open-source",
        "google",
        "video packaging",
        "learning"
      ]
    },
    {
      "description": "",
      "title": "Samples players for dash.js",
      "homepage": "http://reference.dashif.org/dash.js/latest/samples/index.html",
      "category": "dash",
      "tags": [
        "dash.js",
        "adaptive streaming",
        "player",
        "javascript",
        "web players"
      ]
    },
    {
      "description": "GUI application to have closer look ISO 14496-12 and other MP4 files. - sannies/isoviewer",
      "title": "sannies/isoviewer: GUI application to have closer look ISO 14496-12 and other MP4 files.",
      "homepage": "https://github.com/sannies/isoviewer",
      "category": "media-tools",
      "tags": [
        "mp4",
        "file-analysis",
        "iso-14496-12",
        "media-inspection"
      ]
    },
    {
      "description": "A Java API to read, write and create MP4 files. Contribute to sannies/mp4parser development by creating an account on GitHub.",
      "title": "sannies/mp4parser: A Java API to read, write and create MP4 files",
      "homepage": "https://github.com/sannies/mp4parser",
      "category": "encoding-tools",
      "tags": [
        "mp4",
        "java",
        "file-parsing",
        "video-processing",
        "library"
      ]
    },
    {
      "description": "DASH fragmenter/segmenter and encrypter. Contribute to castlabs/dashencrypt development by creating an account on GitHub.",
      "title": "castlabs/dashencrypt: DASH fragmenter/segmenter and encrypter",
      "homepage": "https://github.com/castlabs/dashencrypt",
      "category": "dash",
      "tags": [
        "dash",
        "encryption",
        "segmentation",
        "fragmenter",
        "streaming"
      ]
    },
    {
      "description": "",
      "title": "Dash JavaScript Player",
      "homepage": "http://reference.dashif.org/dash.js/latest/samples/dash-if-reference-player/index.html",
      "category": "dash",
      "tags": [
        "javascript",
        "player",
        "adaptive streaming",
        "web player",
        "streaming protocol"
      ]
    },
    {
      "description": "Information technology \u2014 Dynamic adaptive streaming over HTTP (DASH) \u2014 Part 1: Media presentation description and segment formats",
      "title": "ISO - ISO/IEC 23009-1:2019 - Information technology \u2014 Dynamic adaptive streaming over HTTP (DASH) \u2014 Part 1: Media presentation description and segment formats",
      "homepage": "https://www.iso.org/standard/79329.html",
      "category": "specs-standards",
      "tags": [
        "ISO",
        "DASH",
        "streaming standard",
        "specification",
        "HTTP streaming"
      ]
    },
    {
      "description": "",
      "title": "Pssh box",
      "homepage": "https://raw.githubusercontent.com/google/shaka-packager/master/packager/tools/pssh/pssh-box.py",
      "category": "general-tools",
      "tags": [
        "security",
        "drm",
        "utility",
        "video-tools"
      ]
    },
    {
      "description": "CENC | The DRM Blog - Your New Official Source for Everything DRM",
      "title": "TheDRMBlog | CENC",
      "homepage": "https://go.buydrm.com/thedrmblog/topic/cenc",
      "category": "drm",
      "tags": [
        "drm",
        "content protection",
        "digital rights",
        "streaming security"
      ]
    },
    {
      "description": "",
      "title": "BuyDRM_KeyOS_PlatformOverview_FUUGO_062118",
      "homepage": "https://go.buydrm.com/hubfs/BuyDRM_KeyOS_Content_Protection_in_DASH_DASHIF_Workshop_Comcast_August2018-1.pdf",
      "category": "general-tools",
      "tags": [
        "drm",
        "platform",
        "security",
        "video streaming",
        "content protection"
      ]
    },
    {
      "description": "",
      "title": "DASH-IF-IOP-v3.2-diff-3.1.pdf",
      "homepage": "https://dashif.org/docs/DASH-IF-IOP-v3.2-diff-3.1.pdf",
      "category": "specs-standards",
      "tags": [
        "dash",
        "specification",
        "standards",
        "technical document",
        "interoperability"
      ]
    },
    {
      "description": "",
      "title": "Can I use... Support tables for HTML5, CSS3, etc",
      "homepage": "https://caniuse.com/#search=drm",
      "category": "intro-learning",
      "tags": [
        "web",
        "compatibility",
        "learning",
        "reference",
        "development"
      ]
    },
    {
      "description": "Base64 encoding schemes are used when binary data needs to be stored or transferred as textual data. Therefore 64 characters are chosen that are both members of a subset common to most encodings (ASCII), and also printable.",
      "title": "Binary to base64: Convert between bytes and base64 \u2014 Cryptii",
      "homepage": "https://cryptii.com/pipes/binary-to-base64",
      "category": "media-tools",
      "tags": [
        "encoding",
        "base64",
        "data-conversion",
        "cryptography"
      ]
    },
    {
      "description": "My Site",
      "title": "Digital Rights Management (multi - drm) \u2013 aameer.github.io",
      "homepage": "https://aameer.github.io/articles/digital-rights-management-multi-drm",
      "category": "drm",
      "tags": [
        "digital rights management",
        "multi-drm",
        "content protection",
        "security"
      ]
    },
    {
      "description": "A reference client implementation for the playback of MPEG DASH via Javascript and compliant browsers. - Dash-Industry-Forum/dash.js",
      "title": "Generate MPEG DASH content encrypted with MPEG CENC ClearKey \u00b7 Dash-Industry-Forum/dash.js Wiki",
      "homepage": "https://github.com/Dash-Industry-Forum/dash.js/wiki/Generate-MPEG-DASH-content-encrypted-with-MPEG-CENC-ClearKey",
      "category": "dash",
      "tags": [
        "dash.js",
        "javascript",
        "mpeg-dash",
        "encryption",
        "clearkey",
        "web-player"
      ]
    },
    {
      "description": "",
      "title": "DolbyLaboratories/dolby_vision_professional_decoder_plugin",
      "homepage": "https://github.com/DolbyLaboratories/dolby_vision_professional_decoder_plugin",
      "category": "encoding-codecs",
      "tags": [
        "dolby",
        "vision",
        "decoder",
        "professional",
        "codec",
        "plugin"
      ]
    },
    {
      "description": "Contribute to DolbyLaboratories/dolby-encoding-engine development by creating an account on GitHub.",
      "title": "dolby-encoding-engine/plugins at master \u00b7 DolbyLaboratories/dolby-encoding-engine",
      "homepage": "https://github.com/DolbyLaboratories/dolby-encoding-engine/tree/master/plugins",
      "category": "encoding-tools",
      "tags": [
        "encoding",
        "dolby",
        "plugins",
        "video processing",
        "encoding engine"
      ]
    },
    {
      "description": "pmd_tool is a command line utility that converts between different representations of SMPTE RDD49 metadata - DolbyLaboratories/pmd_tool",
      "title": "DolbyLaboratories/pmd_tool: pmd_tool is a command line utility that converts between different representations of SMPTE RDD49 metadata",
      "homepage": "https://github.com/DolbyLaboratories/pmd_tool",
      "category": "media-tools",
      "tags": [
        "metadata",
        "conversion",
        "command-line",
        "video-tools",
        "SMPTE"
      ]
    },
    {
      "description": "The Dolby MP4 streaming muxer (dlb_mp4base) is a software implementation of a muxer of fragmented or unfragmented ISO base media file format (mp4). It supports muxing of Dolby Digital (AC-3), Dolby...",
      "title": "DolbyLaboratories/dlb_mp4base: The Dolby MP4 streaming muxer (dlb_mp4base) is a software implementation of a muxer of fragmented or unfragmented ISO base media file format (mp4). It supports muxing of Dolby Digital (AC-3), Dolby Digital Plus (E-AC-3), and",
      "homepage": "https://github.com/DolbyLaboratories/dlb_mp4base",
      "category": "encoding-tools",
      "tags": [
        "muxer",
        "mp4",
        "dolby",
        "audio-encoding",
        "streaming"
      ]
    },
    {
      "description": "Dolby Atmos DBMD Wave Chunk Parser. Contribute to DolbyLaboratories/dbmd-atmos-parser development by creating an account on GitHub.",
      "title": "DolbyLaboratories/dbmd-atmos-parser: Dolby Atmos DBMD Wave Chunk Parser",
      "homepage": "https://github.com/DolbyLaboratories/dbmd-atmos-parser",
      "category": "audio",
      "tags": [
        "audio",
        "parser",
        "dolby",
        "atmos",
        "wave",
        "chunk"
      ]
    },
    {
      "description": "Audio Metadata Viewer. Contribute to DolbyLaboratories/AM-Viewer development by creating an account on GitHub.",
      "title": "DolbyLaboratories/AM-Viewer: Audio Metadata Viewer",
      "homepage": "https://github.com/DolbyLaboratories/AM-Viewer",
      "category": "media-tools",
      "tags": [
        "audio",
        "metadata",
        "viewer",
        "tools"
      ]
    },
    {
      "description": "The Dolby MP4 streaming demuxer (dlb_mp4demux) is a software implementation of a demuxer of fragmented or unfragmented ISO base media file format (mp4). It supports demuxing of Dolby Digital (AC-3)...",
      "title": "ShaoWeiguo/dlb_mp4demux: The Dolby MP4 streaming demuxer (dlb_mp4demux) is a software implementation of a demuxer of fragmented or unfragmented ISO base media file format (mp4). It supports demuxing of Dolby Digital (AC-3), Dolby Digital Plus (E-AC-3), an",
      "homepage": "https://github.com/ShaoWeiguo/dlb_mp4demux",
      "category": "encoding-codecs",
      "tags": [
        "demuxer",
        "mp4",
        "codec",
        "audio",
        "dolby",
        "streaming"
      ]
    },
    {
      "description": "The Dolby MP4 streaming demuxer (dlb_mp4demux) is a software implementation of a demuxer of fragmented or unfragmented ISO base media file format (mp4). It supports demuxing of Dolby Digital (AC-3)...",
      "title": "DolbyLaboratories/dlb_mp4demux: The Dolby MP4 streaming demuxer (dlb_mp4demux) is a software implementation of a demuxer of fragmented or unfragmented ISO base media file format (mp4). It supports demuxing of Dolby Digital (AC-3), Dolby Digital Plus (E-AC",
      "homepage": "https://github.com/DolbyLaboratories/dlb_mp4demux",
      "category": "encoding-codecs",
      "tags": [
        "demuxer",
        "mp4",
        "audio-codec",
        "dolby-digital",
        "streaming"
      ]
    },
    {
      "description": "As of the version of 2.6.0, ExoPlayer started supporting Widevine + HLS playback. WideVine is the one of the DRM schemes defined by Google\u2026",
      "title": "HLS with Widevine for Android - Taku Semba - Medium",
      "homepage": "https://medium.com/@takusemba/hls-with-widevine-for-android-de3f41027ed2",
      "category": "android",
      "tags": [
        "android",
        "HLS",
        "DRM",
        "Widevine",
        "ExoPlayer",
        "mobile streaming"
      ]
    },
    {
      "description": "Lock it down. If you're streaming proprietary or premium online video, it's time to take the step up to true digital rights management protection. Here's how to get started.",
      "title": "How to Protect Your Content With DRM",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=132289&pageNum=2",
      "category": "drm",
      "tags": [
        "digital rights management",
        "content protection",
        "video security",
        "streaming protection"
      ]
    },
    {
      "description": "",
      "title": "Microsoft Word - EZDRM Bento 4 Open Source.docx",
      "homepage": "https://www.ezdrm.com/Documentation/EZDRM%20Bento%204%20Open%20Source%20v1.0.pdf",
      "category": "drm",
      "tags": [
        "drm",
        "content protection",
        "licensing",
        "security"
      ]
    },
    {
      "description": "",
      "title": "Integrate BuyDRM for a Multi-DRM workflow",
      "homepage": "https://bitmovin.com/integrate-buydrm-multi-drm-system",
      "category": "drm",
      "tags": [
        "digital rights management",
        "content protection",
        "multi-drm",
        "video security",
        "licensing"
      ]
    },
    {
      "description": "What is \u201crate control\u201d? It\u2019s what a video encoder does when it decides how many bits to spend for a given frame. The goal of (lossy) video encoding is to sav...",
      "title": "Understanding Rate Control Modes (x264, x265, vpx)",
      "homepage": "https://slhck.info/video/2017/03/01/rate-control.html",
      "category": "encoding-codecs",
      "tags": [
        "rate control",
        "video encoding",
        "codec",
        "x264",
        "x265",
        "vpx",
        "bitrate"
      ]
    },
    {
      "description": "Web app for validating CPIX documents. Contribute to Axinom/cpix-validator development by creating an account on GitHub.",
      "title": "Axinom/cpix-validator: Web app for validating CPIX documents",
      "homepage": "https://github.com/Axinom/cpix-validator",
      "category": "standards-industry",
      "tags": [
        "cpix",
        "validator",
        "standards",
        "drm",
        "xml"
      ]
    },
    {
      "description": "Digital rights management, or you could just refer to it as DRM, is a way of controlling what users can do with some sort of digital\u2026",
      "title": "Play your own DRM content on ExoPlayer - Taku Semba - Medium",
      "homepage": "https://medium.com/@takusemba/play-your-own-drm-content-on-exoplayer-e8ed73d5864c",
      "category": "drm",
      "tags": [
        "android",
        "drm",
        "content protection",
        "exoplayer",
        "mobile video"
      ]
    },
    {
      "description": "In this installment of TheDRMBlog we take an in-depth look at Advanced Encryption Techniques.",
      "title": "Advanced Encryption Techniques: ContentProtection Tags for MPDs and PSSH Boxes for DASH.",
      "homepage": "https://go.buydrm.com/thedrmblog/advanced_encryption_techniques",
      "category": "drm",
      "tags": [
        "digital rights management",
        "encryption",
        "content protection",
        "DASH",
        "security"
      ]
    },
    {
      "description": "In this post we provide an in-depth first party overview of the complex integration between the KeyOS Platform and the Elemental Media Services via the SPEKE API.",
      "title": "Deploying KeyOS with AWS Elemental Media Services",
      "homepage": "https://go.buydrm.com/thedrmblog/deploying-keyos-with-aws-elemental-media-services",
      "category": "general-tools",
      "tags": [
        "drm",
        "aws",
        "media-services",
        "security",
        "integration"
      ]
    },
    {
      "description": "",
      "title": "linuxserver/docker-ffmpeg",
      "homepage": "https://github.com/linuxserver/docker-ffmpeg",
      "category": "ffmpeg",
      "tags": [
        "docker",
        "encoding",
        "video-processing",
        "ffmpeg",
        "linux"
      ]
    },
    {
      "description": "This is the second in a five-part series on how to cut your encoding and streaming costs. The first article was Saving on Encoding: Adjust Encoding Configuration to Increase Capacity. Article summary: Capped CRF encoding is a single-pass encoding method that can save encoding costs compared to two-pass VBR. Capped CRF is also a simple per-title\u2026",
      "title": "Saving on Encoding and Streaming: Deploy Capped CRF \u2013 Streaming Learning Center",
      "homepage": "https://streaminglearningcenter.com/blogs/saving-encoding-streaming-deploy-capped-crf.html",
      "category": "tutorials-case-studies",
      "tags": [
        "encoding",
        "cost-optimization",
        "tutorial",
        "streaming",
        "video processing"
      ]
    },
    {
      "description": "Tests for different rate control modes in x264. Contribute to slhck/rate-control-tests development by creating an account on GitHub.",
      "title": "slhck/rate-control-tests: Tests for different rate control modes in x264",
      "homepage": "https://github.com/slhck/rate-control-tests",
      "category": "encoding-codecs",
      "tags": [
        "x264",
        "encoding",
        "rate control",
        "video codec",
        "testing"
      ]
    },
    {
      "description": "What is the Constant Rate Factor?",
      "title": "CRF Guide (Constant Rate Factor in x264, x265 and libvpx)",
      "homepage": "https://slhck.info/video/2017/02/24/crf-guide.html",
      "category": "intro-learning",
      "tags": [
        "encoding",
        "tutorial",
        "x264",
        "x265",
        "libvpx",
        "video compression"
      ]
    },
    {
      "description": "The WAVE (Web Application Video Ecosystem) Project, hosted by the Consumer Technology Association (CTA)\u00ae, aims to improve how internet-delivered commercial video is handled on consumer electronics devices and to make it easier for content creators to distribute video to those devices.",
      "title": "CTA | WAVE Project",
      "homepage": "https://cta.tech/Resources/Standards/WAVE-Project",
      "category": "standards-industry",
      "tags": [
        "industry standard",
        "video ecosystem",
        "consumer electronics",
        "distribution"
      ]
    },
    {
      "description": "Multi-format stream test tool for the browser. Brings convenience to verifying, inspecting, and troubleshooting adaptive streams and video files. A common interface on top of Shaka Player, HLS.js, and Rx-Player.",
      "title": "Streamlab",
      "homepage": "https://vimond.github.io/streamlab/",
      "category": "players-clients",
      "tags": [
        "web-players",
        "testing",
        "stream-verification",
        "browser",
        "adaptive-streaming"
      ]
    },
    {
      "category": "hls",
      "homepage": "https://github.com/soldiermoth/hlsq",
      "title": "soldiermoth/hlsq",
      "description": "A CLI for adding some color to your HLS manifests along with some basic filtering",
      "tags": [
        "hls",
        "cli",
        "manifest",
        "streaming",
        "tool"
      ]
    },
    {
      "category": "media-tools",
      "homepage": "https://media-analyzer.pro",
      "description": "In-browser tool that helps to analyze the internal structure of MPEG-TS and MP4/MOV files",
      "title": "VTCLab Media Analyzer",
      "tags": [
        "file analysis",
        "MPEG-TS",
        "MP4",
        "MOV",
        "media inspection",
        "file structure"
      ]
    },
    {
      "category": "media-tools",
      "description": "Scan millions of files with ffmpeg and access the metadata as a SQLite database. Also, a CLI alternative to media browsers like Plex or Jellyfin",
      "title": "xk media library",
      "homepage": "https://github.com/chapmanjacobd/library",
      "tags": [
        "ffmpeg",
        "metadata",
        "sqlite",
        "media-library",
        "cli-tool"
      ]
    },
    {
      "title": "Akamai Stream Validator",
      "homepage": "https://players.akamai.com/stream-validator",
      "category": "quality-testing",
      "description": "Akamai's Stream Validator is a tool designed to verify the integrity and compliance of streaming media, ensuring optimal playback across devices.",
      "tags": [
        "validation",
        "stream testing",
        "media compliance",
        "playback verification"
      ]
    },
    {
      "title": "Dolby Stream Validator",
      "homepage": "https://ott.dolby.com/OnDel_tools/validator/Start_Here.html",
      "category": "quality-testing",
      "description": "Dolby's Stream Validator assesses streaming content for Dolby audio and video standards, ensuring high-quality media delivery.",
      "tags": [
        "validation",
        "quality-of-experience",
        "audio-standards",
        "video-standards",
        "stream-validation"
      ]
    },
    {
      "title": "Unified Streaming Validator",
      "homepage": "https://validator.unified-streaming.com/",
      "category": "quality-testing",
      "description": "Unified Streaming's Validator checks the compliance and quality of streaming content, supporting various streaming protocols.",
      "tags": [
        "validation",
        "streaming",
        "quality",
        "protocol",
        "compliance"
      ]
    },
    {
      "title": "Bitmovin Test Stream",
      "homepage": "https://bitmovin.com/demos/stream-test",
      "category": "mobile-web-players",
      "description": "Bitmovin's Test Player allows users to experience their HTML5 video player demo, showcasing adaptive streaming capabilities.",
      "tags": [
        "html5",
        "player",
        "adaptive streaming",
        "web player",
        "demo"
      ]
    },
    {
      "title": "Eyevinn Stream Corruptor",
      "homepage": "https://github.com/Eyevinn/streaming-onboarding/blob/master/Stream-Corruptor.md",
      "category": "quality-testing",
      "description": "Eyevinn's Stream Corruptor is a tool designed to intentionally corrupt streaming media, useful for testing error resilience in players.",
      "tags": [
        "testing",
        "error-resilience",
        "player-validation",
        "media-quality"
      ]
    },
    {
      "title": "Apple HLS Tools",
      "homepage": "https://developer.apple.com/documentation/http-live-streaming/using-apple-s-http-live-streaming-hls-tools",
      "category": "hls",
      "description": "Apple's HLS Tools assist developers in creating and validating HTTP Live Streaming (HLS) content for Apple devices.",
      "tags": [
        "apple",
        "streaming",
        "tools",
        "validation",
        "development"
      ]
    },
    {
      "title": "Apple Reference Streams",
      "homepage": "https://developer.apple.com/streaming/examples/",
      "category": "hls",
      "description": "Apple provides example streams demonstrating the features of HTTP Live Streaming (HLS) for testing and development purposes.",
      "tags": [
        "HLS",
        "streaming",
        "reference",
        "development",
        "Apple"
      ]
    },
    {
      "title": "Eyevinn Streaming Samples",
      "homepage": "https://github.com/eyevinn/http-streaming-samples",
      "category": "tutorials-case-studies",
      "description": "A collection of HTTP streaming samples curated by Eyevinn, available for testing and development.",
      "tags": [
        "samples",
        "http-streaming",
        "development",
        "testing"
      ]
    },
    {
      "title": "Mux HLS Streams",
      "homepage": "https://test-streams.mux.dev/",
      "category": "hls",
      "description": "Mux offers a set of test HLS streams, primarily used by hls.js and hosted by Mux, for testing and development.",
      "tags": [
        "hls",
        "streaming",
        "test-streams",
        "development",
        "mux"
      ]
    },
    {
      "title": "Axinom DRM Decoders",
      "homepage": "https://tools.axinom.com/",
      "category": "drm",
      "description": "Axinom offers DRM tools for encoding and decoding, ensuring secure streaming media delivery.",
      "tags": [
        "digital rights management",
        "security",
        "streaming",
        "media protection",
        "content licensing"
      ]
    },
    {
      "title": "Akamai Players",
      "homepage": "https://players.akamai.com/players",
      "category": "players-clients",
      "description": "Akamai provides a suite of media players optimized for high-quality streaming across various devices.",
      "tags": [
        "media players",
        "streaming",
        "cross-platform",
        "device optimization"
      ]
    },
    {
      "title": "GPAC MP4Box",
      "homepage": "https://github.com/gpac/gpac/wiki/mp4box",
      "category": "encoding-tools",
      "description": "MP4Box is a multimedia packager from the GPAC framework, used for encoding and packaging media files.",
      "tags": [
        "packaging",
        "multimedia",
        "encoding",
        "mp4",
        "gpac"
      ]
    },
    {
      "title": "Dashif Conformance",
      "homepage": "https://conformance.dashif.org/",
      "category": "dash",
      "description": "The DASH Industry Forum provides a conformance tool to validate MPEG-DASH content against the DASH standard.",
      "tags": [
        "MPEG-DASH",
        "conformance",
        "validation",
        "streaming standard"
      ]
    },
    {
      "title": "Dashif Content Protection List",
      "homepage": "https://dashif.org/identifiers/content_protection/",
      "category": "specs-standards",
      "description": "A list of content protection schemes recognized by the DASH Industry Forum for securing DASH streaming content.",
      "tags": [
        "content protection",
        "DASH",
        "standards",
        "security",
        "streaming specifications"
      ]
    },
    {
      "title": "MPEG DASH - ISO/IEC 23009-01",
      "homepage": "https://www.iso.org/standard/83314.html",
      "category": "dash",
      "description": "Defines both the metadata structure and associated media format(s)",
      "tags": [
        "adaptive streaming",
        "MPEG",
        "ISO standard",
        "HTTP streaming",
        "video protocol"
      ]
    },
    {
      "title": "Apple HLS - IETF RFC8216",
      "homepage": "https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis",
      "category": "hls",
      "description": "Defines both the metadata structure and some client/server requirements",
      "tags": [
        "protocol",
        "streaming",
        "specification",
        "adaptive-streaming",
        "rfc"
      ]
    },
    {
      "title": "MPEG ISOBMFF 'MP4' - ISO/IEC 14496-12",
      "homepage": "https://www.iso.org/standard/83102.html",
      "category": "specs-standards",
      "description": "Defines the file format and structure",
      "tags": [
        "MPEG",
        "file format",
        "ISO",
        "standard",
        "specification",
        "MP4"
      ]
    },
    {
      "title": "MPEG Common media application format (CMAF) for segmented media - ISO/IEC 23000-19",
      "homepage": "https://www.iso.org/standard/85623.html",
      "category": "specs-standards",
      "description": "Defines the file format and structure",
      "tags": [
        "MPEG",
        "ISO",
        "file format",
        "media standard",
        "specification"
      ]
    },
    {
      "title": "MPEG Event message track format for the ISO base media file format - ISO/IEC 23001-18",
      "homepage": "https://www.iso.org/standard/82529.html",
      "category": "specs-standards",
      "description": "Defines the file format and structure",
      "tags": [
        "MPEG",
        "ISO",
        "file format",
        "specification",
        "media standard"
      ]
    },
    {
      "title": "AVC/h264 Video Coding Standard - ISO/IEC 14496-10",
      "homepage": "https://www.iso.org/standard/83529.html",
      "category": "codecs",
      "description": "Defines the compressed video format for AVC/h264",
      "tags": [
        "h264",
        "codec",
        "video compression",
        "ISO standard",
        "technical specification"
      ]
    },
    {
      "title": "HEVC/h265 Video Coding Standard - ISO/IEC 23008-2",
      "homepage": "https://www.iso.org/standard/85457.html",
      "category": "hevc",
      "description": "Defines the compressed video format HEVC/h265",
      "tags": [
        "codec",
        "video compression",
        "h265",
        "iso standard",
        "video encoding"
      ]
    },
    {
      "title": "AAC Audio Coding Standard - ISO/IEC 14496-3",
      "homepage": "https://www.iso.org/standard/76383.html",
      "category": "audio",
      "description": "Defines the compressed audio format AAC",
      "tags": [
        "audio",
        "codec",
        "compression",
        "ISO",
        "standards",
        "audio encoding"
      ]
    },
    {
      "title": "MPEG-H Audio a Next Generation Audio (NGA) codec - ISO/IEC 23008-3",
      "homepage": "https://www.iso.org/standard/83525.html",
      "category": "specs-standards",
      "description": "Defines the compressed audio format MPEG-H Audio a Next Generation Audio (NGA) codec",
      "tags": [
        "audio",
        "codec",
        "MPEG",
        "ISO",
        "standard",
        "compression"
      ]
    },
    {
      "title": "AVC/HEVC in ISOBMFF - ISO/IEC 14496-15",
      "homepage": "https://www.iso.org/standard/83336.html",
      "category": "official-specs",
      "description": "Defines the carriage of AVC/HEVC in ISOBMFF",
      "tags": [
        "codec",
        "AVC",
        "HEVC",
        "ISO",
        "specification",
        "standards"
      ]
    },
    {
      "title": "TTML/WebVTT Coding of audio-visual objects - ISO/IEC 14496-30",
      "homepage": "https://www.iso.org/standard/75394.html",
      "category": "subtitles-captions",
      "description": "Defines formatting for text tracks webvtt or ttml",
      "tags": [
        "subtitles",
        "captions",
        "ttml",
        "webvtt",
        "text-tracks",
        "iso-standard"
      ]
    },
    {
      "title": "Common Encryption - ISO/IEC 23001-7",
      "homepage": "https://iso.org/standard/84637.html",
      "category": "specs-standards",
      "description": "Defines encryption of media supported for receiving devices",
      "tags": [
        "encryption",
        "security",
        "standards",
        "ISO",
        "specification"
      ]
    },
    {
      "title": "BBC R&D Adaptive Bitrate Test Media",
      "homepage": "http://rdmedia.bbc.co.uk/",
      "category": "dash",
      "description": "The BBC Research & Development department offers MPEG-DASH test media for developers and researchers.",
      "tags": [
        "MPEG-DASH",
        "adaptive streaming",
        "test media",
        "BBC",
        "research"
      ]
    },
    {
      "title": "Dash IF Test Assets Database",
      "homepage": "https://testassets.dashif.org/#testvector/list",
      "category": "dash",
      "description": "A database of test assets provided by the DASH Industry Forum for validating DASH implementations.",
      "tags": [
        "dash",
        "test assets",
        "validation",
        "industry forum",
        "implementation"
      ]
    },
    {
      "title": "Dash Sequences GPAC Wiki",
      "homepage": "https://github.com/gpac/gpac/wiki/dash-sequences",
      "category": "dash",
      "description": "The GPAC Wiki provides DASH sequences for conformance testing and validation.",
      "tags": [
        "dash",
        "conformance",
        "testing",
        "validation",
        "streaming"
      ]
    },
    {
      "title": "MPEG DASH Sample Content Bento4",
      "homepage": "http://www.bento4.com/developers/dash/dash-sample-content/",
      "category": "dash",
      "description": "Bento4 offers MPEG-DASH sample content for developers to test and validate their DASH implementations.",
      "tags": [
        "MPEG-DASH",
        "sample content",
        "developer tools",
        "streaming validation"
      ]
    },
    {
      "title": "M2amedia SCTE35 Dump for MPEGTS",
      "homepage": "https://github.com/m2amedia/scte35dump",
      "category": "media-tools",
      "description": "M2A Media's tool for extracting SCTE-35 markers from MPEG-TS streams.",
      "tags": [
        "scte35",
        "mpeg-ts",
        "marker extraction",
        "stream processing"
      ]
    },
    {
      "title": "Middleman SCTE35 104 Parser",
      "homepage": "https://tools.middleman.tv/scte35-parser",
      "category": "media-tools",
      "description": "A web-based tool to parse and decode SCTE-35 markers for ad insertion and broadcast signaling analysis.",
      "tags": [
        "ad-insertion",
        "broadcast",
        "parsing",
        "signaling",
        "SCTE-35",
        "web-tool"
      ]
    },
    {
      "title": "ThreeFive SCTE35",
      "homepage": "https://github.com/futzu/scte-35_threefive",
      "category": "media-tools",
      "description": "An SCTE-35 parser and decoder for analyzing ad markers in MPEG-TS streams, designed for broadcast workflows.",
      "tags": [
        "SCTE-35",
        "ad-markers",
        "broadcast",
        "stream-parsing",
        "MPEG-TS"
      ]
    },
    {
      "title": "Chrome Media Internals",
      "homepage": "https://developer.chrome.com/docs/devtools/media-panel/",
      "category": "media-tools",
      "description": "A built-in Chrome tool that provides detailed logs and diagnostics for media playback and streaming issues.",
      "tags": [
        "diagnostics",
        "debugging",
        "media-playback",
        "browser-tools",
        "chrome"
      ]
    },
    {
      "title": "Man in the Middle Proxy",
      "homepage": "https://github.com/mitmproxy/mitmproxy",
      "category": "protocols-transport",
      "description": "An interactive HTTPS proxy that allows inspection, modification, and debugging of network traffic, useful for video streaming analysis.",
      "tags": [
        "proxy",
        "network",
        "debugging",
        "traffic-analysis",
        "https"
      ]
    },
    {
      "title": "Unified Streaming Demos",
      "homepage": "https://demo.unified-streaming.com/",
      "category": "tutorials-case-studies",
      "description": "A showcase of Unified Streaming's capabilities, including adaptive streaming formats and DRM-protected playback.",
      "tags": [
        "adaptive streaming",
        "DRM",
        "demo",
        "streaming showcase"
      ]
    },
    {
      "title": "Unified Streaming Features Page",
      "homepage": "https://demo.unified-streaming.com/k8s/features/stable/#!/mpd",
      "category": "tutorials-case-studies",
      "description": "A demonstration of Unified Streaming's feature set, including on-the-fly packaging and multi-format support.",
      "tags": [
        "streaming",
        "packaging",
        "multi-format",
        "case study",
        "feature demonstration"
      ]
    },
    {
      "title": "Clappr",
      "homepage": "https://github.com/clappr/clappr",
      "description": "An open source HTML5 video player that supports custom plugins and playback of various formats.",
      "tags": [
        "html5",
        "video player",
        "javascript",
        "web",
        "open source",
        "plugin support"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "ReactPlayer",
      "homepage": "https://github.com/cookpete/react-player",
      "description": "A React component for playing a variety of URLs, including YouTube, Vimeo, SoundCloud, and many more.",
      "tags": [
        "react",
        "web player",
        "javascript",
        "video playback",
        "cross-platform"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "Video Speed Controller (Chrome Extension)",
      "homepage": "https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk",
      "description": "A popular browser extension that allows users to speed up or slow down video playback on any website with HTML5 video.",
      "tags": [
        "browser-extension",
        "video-control",
        "playback-speed",
        "web-player",
        "html5-video"
      ],
      "categories": [
        "browser-extensions"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "Kodi",
      "homepage": "https://kodi.tv/",
      "description": "A free and open source media center software that plays videos, music, and more across multiple platforms (formerly XBMC).",
      "tags": [
        "media player",
        "cross-platform",
        "open source",
        "video playback",
        "media center"
      ],
      "categories": [
        "set-top-box-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "React Native Video",
      "homepage": "https://github.com/react-native-video/react-native-video",
      "description": "A React Native component for video playback that supports both iOS and Android using native player APIs.",
      "tags": [
        "mobile",
        "react",
        "native",
        "cross-platform",
        "video player",
        "iOS",
        "Android"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "Aegisub",
      "homepage": "http://www.aegisub.org/",
      "description": "A free, cross-platform open source tool for creating and modifying subtitles (advanced subtitle editor supporting ASS/SSA formats).",
      "tags": [
        "subtitle",
        "editor",
        "open-source",
        "cross-platform",
        "text-processing"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "Subtitle Edit",
      "homepage": "https://github.com/SubtitleEdit/subtitleedit",
      "description": "A free, open source subtitle editor that supports over 200 subtitle formats, with tools for sync, translation, and conversion.",
      "tags": [
        "subtitle",
        "editor",
        "translation",
        "conversion",
        "open-source"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "LosslessCut",
      "homepage": "https://github.com/mifi/lossless-cut",
      "description": "A cross-platform GUI tool for lossless trimming and cutting of video and audio files using FFmpeg, without quality loss.",
      "tags": [
        "ffmpeg",
        "video-editing",
        "lossless-cutting",
        "cross-platform",
        "media-processing"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Avidemux",
      "homepage": "http://avidemux.sourceforge.net/",
      "description": "A simple, free video editor for cutting, filtering, and encoding tasks, supporting many file types and codecs.",
      "tags": [
        "video editor",
        "encoding",
        "free tool",
        "codec support",
        "video processing"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "HandBrake",
      "homepage": "https://handbrake.fr/",
      "description": "A popular open source video transcoder that converts video from nearly any format to a selection of modern, widely supported codecs.",
      "tags": [
        "transcoder",
        "open source",
        "video conversion",
        "codec"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Shutter Encoder",
      "homepage": "https://www.shutterencoder.com/en/",
      "description": "A free video converter based on FFmpeg that offers a user-friendly interface for transcoding, repackaging, and editing media files.",
      "tags": [
        "ffmpeg",
        "video converter",
        "transcoding",
        "media editing"
      ],
      "categories": [
        "ffmpeg-based-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "StaxRip",
      "homepage": "https://github.com/staxrip/staxrip",
      "description": "A versatile video encoding GUI for Windows, utilizing a variety of open source tools (AviSynth/VapourSynth, x264/x265, etc.) for advanced encoding workflows.",
      "tags": [
        "encoding",
        "windows",
        "x264",
        "x265",
        "avisynth",
        "vapoursynth",
        "gui"
      ],
      "categories": [
        "ffmpeg-based-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "FFmpegKit",
      "homepage": "https://github.com/tanersener/ffmpeg-kit",
      "description": "A complete, cross-platform wrapper for FFmpeg, providing ready-to-use binaries and libraries for Android, iOS, Linux, Windows, and more.",
      "tags": [
        "ffmpeg",
        "encoding",
        "cross-platform",
        "libraries",
        "video processing"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "PyFFmpeg",
      "homepage": "https://pypi.org/project/pyffmpeg/",
      "description": "A Python wrapper for FFmpeg, allowing the composition and execution of FFmpeg commands through a fluent Python interface.",
      "tags": [
        "python",
        "ffmpeg",
        "video-processing",
        "encoding",
        "wrapper"
      ],
      "categories": [
        "command-line-utilities-wrappers"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "ffmpeg-go",
      "homepage": "https://github.com/u2takey/ffmpeg-go",
      "description": "A Golang binding for FFmpeg that enables developers to generate and run FFmpeg commands programmatically in Go.",
      "tags": [
        "ffmpeg",
        "golang",
        "encoding",
        "video-processing",
        "library"
      ],
      "categories": [
        "command-line-utilities-wrappers"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "go-astisub",
      "homepage": "https://github.com/asticode/go-astisub",
      "description": "A Golang library for manipulating subtitles (supports formats like SRT, WebVTT, SSA/ASS, etc.), useful for automated subtitle processing.",
      "tags": [
        "subtitle",
        "library",
        "golang",
        "processing",
        "SRT",
        "WebVTT",
        "SSA",
        "ASS"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "go-astits",
      "homepage": "https://github.com/asticode/go-astits",
      "description": "A Golang library for parsing and demuxing MPEG Transport Stream (.ts) files natively, enabling inspection and processing of TS files.",
      "tags": [
        "golang",
        "transport-stream",
        "demuxing",
        "parsing",
        "video-infrastructure"
      ],
      "categories": [
        "metadata-extraction-management"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "go-astiav",
      "homepage": "https://github.com/asticode/go-astiav",
      "description": "A comprehensive Go binding for FFmpeg's libav* libraries, facilitating the building of media applications in Go with FFmpeg's capabilities.",
      "tags": [
        "ffmpeg",
        "encoding",
        "go",
        "library",
        "media-processing"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "go-mpd",
      "homepage": "https://github.com/zencoder/go-dash",
      "description": "A Golang library for parsing and generating MPEG-DASH MPD manifest files, useful for building and manipulating DASH streaming manifests.",
      "tags": [
        "golang",
        "library",
        "manifest",
        "streaming",
        "adaptive-streaming",
        "mpd"
      ],
      "categories": [
        "dash-manifest-tools"
      ],
      "category": "dash"
    },
    {
      "title": "GMF (Go Media Framework)",
      "homepage": "https://github.com/3d0c/gmf",
      "description": "A Go binding for FFmpeg that simplifies working with multimedia in Go, providing high-level access to FFmpeg's decoding and encoding functionality.",
      "tags": [
        "ffmpeg",
        "go",
        "multimedia",
        "encoding",
        "decoding",
        "library"
      ],
      "categories": [
        "command-line-utilities-wrappers"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "goav",
      "homepage": "https://github.com/giorgisio/goav",
      "description": "Go bindings for FFmpeg's libav* libraries. It allows developers to leverage FFmpeg's powerful audio and video processing features in Go applications.",
      "tags": [
        "ffmpeg",
        "encoding",
        "go",
        "libav",
        "video-processing"
      ],
      "categories": [
        "command-line-utilities-wrappers"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "gortsplib",
      "homepage": "https://github.com/aler9/gortsplib",
      "description": "A pure Go RTSP server and client library that supports handling RTSP streams without external dependencies, ideal for building streaming servers or proxies.",
      "tags": [
        "rtsp",
        "streaming",
        "server",
        "client",
        "go",
        "library",
        "transport"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "mp4ff",
      "homepage": "https://github.com/edgeware/mp4ff",
      "description": "A Golang library and set of tools for parsing and writing MP4 (ISO BMFF) files, including support for fragmented MP4 and progressive MP4.",
      "tags": [
        "mp4",
        "golang",
        "file-parsing",
        "media-library",
        "video-tools"
      ],
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "v4l (Go Video4Linux)",
      "homepage": "https://pkg.go.dev/github.com/korandiz/v4l",
      "description": "A Go library providing bindings to Video4Linux2 (V4L2) APIs, enabling video capture and camera control in Linux from Go applications.",
      "tags": [
        "linux",
        "video4linux",
        "camera",
        "capture",
        "go",
        "library",
        "device-control"
      ],
      "categories": [
        "hardware-codecs-acceleration"
      ],
      "category": "media-tools"
    },
    {
      "title": "Untrunc",
      "homepage": "https://github.com/ponchio/untrunc",
      "description": "A tool to recover and repair corrupted video files (e.g., missing headers) by reconstructing them using a reference file of the same format.",
      "tags": [
        "video-recovery",
        "file-repair",
        "media-utility",
        "video-restoration"
      ],
      "categories": [
        "repair-recovery-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Natron",
      "homepage": "https://natron.fr/",
      "description": "A free and open source node-based compositing software, similar to After Effects or Nuke, for visual effects and motion graphics.",
      "tags": [
        "compositing",
        "visual-effects",
        "motion-graphics",
        "post-production"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "QCTools",
      "homepage": "https://mediaarea.net/QCTools",
      "description": "Quality Control Tools for Video Preservation \u2013 an open source toolset (by BAVC) to analyze digitized video files, with visualizations for signal quality issues.",
      "tags": [
        "video preservation",
        "quality control",
        "analysis",
        "visualization",
        "open source"
      ],
      "categories": [
        "quality-analysis-metrics"
      ],
      "category": "media-tools"
    },
    {
      "title": "WebTorrent",
      "homepage": "https://webtorrent.io/",
      "description": "A streaming torrent client for the web. WebTorrent uses WebRTC for peer-to-peer transport and allows in-browser video streaming from torrents without plugins.",
      "tags": [
        "WebRTC",
        "peer-to-peer",
        "streaming",
        "torrent",
        "web-transport"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "PeerTube",
      "homepage": "https://joinpeertube.org/",
      "description": "A decentralized video sharing platform powered by ActivityPub and peer-to-peer (BitTorrent) directly in the browser, as a federated alternative to centralized sites.",
      "tags": [
        "decentralized",
        "peer-to-peer",
        "federation",
        "video sharing",
        "distributed infrastructure"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Owncast",
      "homepage": "https://owncast.online/",
      "description": "A self-hosted live video streaming server with a built-in chat. Owncast enables anyone to set up a live stream akin to Twitch, but on their own infrastructure.",
      "tags": [
        "self-hosted",
        "live streaming",
        "server",
        "open-source",
        "chat integration"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "MistServer",
      "homepage": "https://mistserver.org/",
      "description": "An open source streaming media server that supports multiple protocols (HLS, RTMP, WebRTC, etc.). It focuses on easy setup and compatibility with any device.",
      "tags": [
        "open source",
        "media server",
        "streaming",
        "multi-protocol",
        "HLS",
        "RTMP",
        "WebRTC"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "OvenMediaEngine",
      "homepage": "https://github.com/AirenSoft/OvenMediaEngine",
      "description": "A real-time streaming server with sub-second latency support. OvenMediaEngine offers WebRTC and Low Latency DASH/HLS for interactive live streaming.",
      "tags": [
        "streaming server",
        "WebRTC",
        "low-latency",
        "DASH",
        "HLS",
        "real-time streaming"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "Janus WebRTC Server",
      "homepage": "https://github.com/meetecho/janus-gateway",
      "description": "An open source WebRTC server (SFU and gateway) that allows the creation of videoconferencing, streaming, and other real-time multimedia applications.",
      "tags": [
        "WebRTC",
        "server",
        "real-time",
        "multimedia",
        "video conferencing",
        "gateway"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "mediasoup",
      "homepage": "https://mediasoup.org/",
      "description": "A modern WebRTC SFU (Selective Forwarding Unit) for Node.js that enables building multi-party video conferencing and streaming applications with low latency.",
      "tags": [
        "webrtc",
        "real-time",
        "transport",
        "video-conferencing",
        "node.js"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "Livepeer",
      "homepage": "https://livepeer.org/",
      "description": "A decentralized live video streaming platform and network built on blockchain. Livepeer provides an open source protocol for scalable, affordable live streaming.",
      "tags": [
        "blockchain",
        "decentralized",
        "streaming infrastructure",
        "live streaming",
        "protocol"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "MediaCMS",
      "homepage": "https://mediacms.io/",
      "description": "An open source video and media CMS for building a YouTube-like platform. It supports uploading, transcoding, and managing video content with a modern UI.",
      "tags": [
        "cms",
        "video-platform",
        "content-management",
        "transcoding",
        "video-hosting"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "DASH Industry Forum (DASH-IF)",
      "homepage": "https://dashif.org/",
      "description": "An industry consortium that promotes MPEG-DASH. The DASH-IF provides guidelines, reference players, and test vectors to ensure interoperability of DASH streaming.",
      "tags": [
        "DASH",
        "streaming",
        "industry consortium",
        "standards",
        "interoperability"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "dash"
    },
    {
      "title": "Moving Picture Experts Group (MPEG)",
      "homepage": "https://mpeg.chiariglione.org/",
      "description": "The official forum that develops international standards for compression, decompression, processing and coded representation of moving pictures, audio, and their combination (e.g., MPEG-2, MPEG-4, DASH).",
      "tags": [
        "standards",
        "compression",
        "video-standards",
        "international-standards",
        "multimedia"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "mpeg-forums"
    },
    {
      "title": "Alliance for Open Media (AOMedia)",
      "homepage": "https://aomedia.org/",
      "description": "An industry consortium that develops open, royalty-free media formats. AOMedia created the AV1 video codec and works on related audio/image formats and tools.",
      "tags": [
        "codec",
        "AV1",
        "open source",
        "video compression",
        "royalty-free"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Streaming Video Alliance (SVA)",
      "homepage": "https://www.svta.org/",
      "description": "A global technical association that publishes best practices, specifications, and guidelines to address challenges in streaming video (e.g., open caching, QoE, ad tech).",
      "tags": [
        "standards",
        "industry-association",
        "best-practices",
        "specifications",
        "streaming-guidelines"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "standards-industry"
    },
    {
      "title": "Society of Motion Picture and Television Engineers (SMPTE)",
      "homepage": "https://www.smpte.org/",
      "description": "An organization that develops and maintains standards for cinema and broadcast, including many video formats (e.g., SMPTE ST 2110 for IP video, HDR formats, etc.).",
      "tags": [
        "standards",
        "specification",
        "video-format",
        "professional-organization",
        "technical-standards"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "specs-standards"
    },
    {
      "title": "FCC Closed Captioning Guidelines",
      "homepage": "https://www.fcc.gov/consumers/guides/closed-captioning",
      "description": "US Federal Communications Commission guidelines on closed captioning requirements for video programming, covering quality, accuracy, and legal obligations.",
      "tags": [
        "accessibility",
        "legal",
        "standards",
        "captions",
        "regulations"
      ],
      "categories": [
        "regulatory-compliance-resources"
      ],
      "category": "standards-industry"
    },
    {
      "title": "Widevine DRM Documentation (Google)",
      "homepage": "https://developers.google.com/widevine",
      "description": "Official documentation for Google Widevine DRM, detailing integration of content protection on various platforms and browsers using Widevine Modular DRM.",
      "tags": [
        "digital rights management",
        "content protection",
        "google",
        "widevine",
        "security"
      ],
      "categories": [
        "widevine-fairplay-playready-integrations"
      ],
      "category": "drm"
    },
    {
      "title": "FairPlay Streaming Developer Guide (Apple)",
      "homepage": "https://developer.apple.com/documentation/fairplaystreaming",
      "description": "Apple's official documentation for FairPlay Streaming (FPS), explaining how to encrypt HLS streams and deliver keys securely to Apple devices.",
      "tags": [
        "apple",
        "documentation",
        "drm",
        "streaming",
        "security"
      ],
      "categories": [
        "widevine-fairplay-playready-integrations"
      ],
      "category": "vendor-docs"
    },
    {
      "title": "Microsoft PlayReady Documentation",
      "homepage": "https://learn.microsoft.com/playready/",
      "description": "Microsoft's documentation for PlayReady DRM, including whitepapers and implementation guidance for integrating PlayReady content protection.",
      "tags": [
        "microsoft",
        "content protection",
        "digital rights management",
        "playready",
        "documentation"
      ],
      "categories": [
        "widevine-fairplay-playready-integrations"
      ],
      "category": "drm"
    },
    {
      "title": "Encrypted Media Extensions (W3C Recommendation)",
      "homepage": "https://www.w3.org/TR/encrypted-media/",
      "description": "The W3C specification for Encrypted Media Extensions (EME), which defines a browser API for playback of encrypted content using content decryption modules (CDMs).",
      "tags": [
        "drm",
        "web standards",
        "encryption",
        "browser api",
        "content protection"
      ],
      "categories": [
        "drm-content-protection-standards"
      ],
      "category": "specs-standards"
    },
    {
      "title": "Media Source Extensions (W3C Recommendation)",
      "homepage": "https://www.w3.org/TR/media-source/",
      "description": "The W3C specification for Media Source Extensions (MSE), an API that allows JavaScript to feed media to the HTML5 video or audio tag for adaptive streaming.",
      "tags": [
        "w3c",
        "specification",
        "adaptive streaming",
        "html5",
        "api",
        "web standard"
      ],
      "categories": [
        "adaptive-streaming-standards"
      ],
      "category": "specs-standards"
    },
    {
      "title": "Web Video Text Tracks Format (WebVTT)",
      "homepage": "https://www.w3.org/TR/webvtt1/",
      "description": "The W3C recommendation for WebVTT, a text format for captioning and subtitling web video. It defines the syntax for caption files used in HTML5 video.",
      "tags": [
        "subtitles",
        "captions",
        "HTML5",
        "web video",
        "text tracks"
      ],
      "categories": [
        "closed-captioning-subtitling-standards"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "RFC 8216: HTTP Live Streaming (HLS)",
      "homepage": "https://datatracker.ietf.org/doc/html/rfc8216",
      "description": "The IETF RFC that specifies HTTP Live Streaming (HLS), defining the playlist format (M3U8) and media segment structure for Apple's streaming protocol.",
      "tags": [
        "streaming",
        "protocol",
        "specification",
        "apple",
        "rfc",
        "m3u8"
      ],
      "categories": [
        "adaptive-streaming-standards"
      ],
      "category": "hls"
    },
    {
      "title": "ISO/IEC 23009-1:2019 (MPEG-DASH)",
      "homepage": "https://www.iso.org/standard/75440.html",
      "description": "The ISO/IEC standard for Dynamic Adaptive Streaming over HTTP (DASH). It defines the MPD manifest format and segment formats for adaptive bitrate streaming.",
      "tags": [
        "adaptive streaming",
        "ISO standard",
        "HTTP streaming",
        "manifest",
        "bitrate adaptation"
      ],
      "categories": [
        "adaptive-streaming-standards"
      ],
      "category": "dash"
    },
    {
      "title": "Versatile Video Coding (H.266/VVC) Overview \u2013 Fraunhofer HHI",
      "homepage": "https://www.hhi.fraunhofer.de/en/departments/vca/research-groups/image-video-coding/research-topics/vvc.html",
      "description": "Information on the H.266/VVC video codec from Fraunhofer HHI. VVC is the next-generation video coding standard offering about 50% bitrate savings over HEVC.",
      "tags": [
        "codec",
        "VVC",
        "H.266",
        "compression",
        "bitrate reduction"
      ],
      "categories": [
        "video-codec-specifications"
      ],
      "category": "codecs"
    },
    {
      "title": "AV1 Bitstream & Decoding Specification (1.0.0 with Errata 1)",
      "homepage": "https://aomediacodec.github.io/av1-spec/av1-spec.pdf",
      "description": "The official bitstream and decoding process specification for the AOMedia Video 1 (AV1) codec. Defines how AV1 video is encoded bit-by-bit and decoded.",
      "tags": [
        "codec",
        "specification",
        "AV1",
        "technical standard",
        "video encoding"
      ],
      "categories": [
        "video-codec-specifications"
      ],
      "category": "official-specs"
    },
    {
      "title": "Cisco OpenH264",
      "homepage": "https://github.com/cisco/openh264",
      "description": "An open source H.264 (AVC) encoder and decoder library by Cisco, provided under a license that allows free use (Cisco covers MPEG LA licensing for binaries).",
      "tags": [
        "h264",
        "codec",
        "encoder",
        "decoder",
        "open source"
      ],
      "categories": [
        "software-codecs"
      ],
      "category": "codecs"
    },
    {
      "title": "x264 (H.264/AVC Encoder)",
      "homepage": "https://code.videolan.org/videolan/x264",
      "description": "The most widely used open source H.264/AVC video encoder, known for its high quality and efficiency across many profiles and presets.",
      "tags": [
        "h264",
        "encoder",
        "video-codec",
        "open-source",
        "video-compression"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "x265 (H.265/HEVC Encoder)",
      "homepage": "https://x265.org/",
      "description": "A high-performance open source H.265/HEVC encoder. x265 is used to create HEVC video streams and is known for being very configurable to balance quality/speed.",
      "tags": [
        "encoder",
        "HEVC",
        "H.265",
        "video compression",
        "open source"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "SVT-AV1",
      "homepage": "https://github.com/AOMediaCodec/SVT-AV1",
      "description": "An open-source AV1 encoder and decoder from the Scalable Video Technology project. SVT-AV1 is optimized for performance and multi-threading, enabling faster AV1 encoding.",
      "tags": [
        "codec",
        "open-source",
        "encoding",
        "performance",
        "multi-threading"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "av1"
    },
    {
      "title": "VVenC (Fraunhofer Versatile Video Encoder)",
      "homepage": "https://github.com/fraunhoferhhi/vvenc",
      "description": "An open source H.266/VVC encoder implementation by Fraunhofer HHI, designed to be fast and efficient while supporting all features of the VVC standard.",
      "tags": [
        "encoder",
        "VVC",
        "H.266",
        "codec",
        "open-source",
        "Fraunhofer"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Turing Codec (Open H.265 Encoder)",
      "homepage": "https://turingcodec.org/",
      "description": "An open source H.265/HEVC encoder designed for speed and efficiency in video compression, focusing on fast encoding of high-quality video content.",
      "tags": [
        "h265",
        "hevc",
        "encoder",
        "video compression",
        "open source"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "libvpx (VP8/VP9 Codec Library)",
      "homepage": "https://github.com/webmproject/libvpx",
      "description": "The reference implementation of VP8 and VP9 video codecs (WebM Project). libvpx provides encoding and decoding for VP8/VP9, which are open and royalty-free codecs.",
      "tags": [
        "codec",
        "VP8",
        "VP9",
        "WebM",
        "open-source",
        "royalty-free"
      ],
      "categories": [
        "software-codecs"
      ],
      "category": "codecs"
    },
    {
      "title": "Secure Reliable Transport (SRT)",
      "homepage": "https://github.com/Haivision/srt",
      "description": "An open source video transport protocol that optimizes streaming performance over unpredictable networks. SRT provides low-latency, resilient live streaming (created by Haivision).",
      "tags": [
        "protocol",
        "streaming",
        "transport",
        "network",
        "low-latency"
      ],
      "categories": [
        "low-latency-streaming-tools"
      ],
      "category": "srt"
    },
    {
      "title": "Pensieve (Adaptive Bitrate AI Algorithm)",
      "homepage": "https://github.com/hongzimao/pensieve",
      "description": "A research system that uses reinforcement learning to generate adaptive bitrate (ABR) algorithms. Pensieve learned an ABR algorithm that can outperform traditional heuristics under certain conditions.",
      "tags": [
        "ABR",
        "machine learning",
        "reinforcement learning",
        "streaming algorithm",
        "video optimization"
      ],
      "categories": [
        "adaptive-bitrate-algorithms-tools"
      ],
      "category": "adaptive-streaming"
    },
    {
      "title": "Puffer (Stanford Live Streaming Research)",
      "homepage": "https://puffer.stanford.edu/",
      "description": "A free live TV streaming research study by Stanford University that uses volunteer viewers to train and evaluate new adaptive streaming algorithms in real-world conditions.",
      "tags": [
        "research",
        "live streaming",
        "algorithm",
        "stanford",
        "adaptive bitrate"
      ],
      "categories": [
        "adaptive-bitrate-algorithms-tools"
      ],
      "category": "adaptive-streaming"
    },
    {
      "title": "PySceneDetect",
      "homepage": "https://github.com/Breakthrough/PySceneDetect",
      "description": "An open source Python tool for automatic scene cut detection in videos. It can split video content into scenes by detecting fades, cuts, and other transitions.",
      "tags": [
        "scene detection",
        "video processing",
        "python",
        "video analysis",
        "video editing"
      ],
      "categories": [
        "scene-detection-segmentation"
      ],
      "category": "media-tools"
    },
    {
      "title": "OpenCV",
      "homepage": "https://opencv.org/",
      "description": "An open source computer vision and machine learning library with extensive support for image and video analysis. Often used for video processing tasks like object detection, tracking, and filtering.",
      "tags": [
        "computer vision",
        "video processing",
        "object detection",
        "machine learning",
        "image analysis"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "libebur128",
      "homepage": "https://github.com/jiixyj/libebur128",
      "description": "An open source C library implementing the EBU R128 loudness standard. It can be used to measure and normalize audio loudness (LUFS) for broadcast compliance.",
      "tags": [
        "audio",
        "loudness",
        "broadcast",
        "standards",
        "normalization",
        "LUFS"
      ],
      "categories": [
        "audio-analysis-processing"
      ],
      "category": "audio"
    },
    {
      "title": "NVIDIA Video Codec SDK",
      "homepage": "https://developer.nvidia.com/nvidia-video-codec-sdk",
      "description": "NVIDIA's official SDK for hardware-accelerated video encoding and decoding (NVENC/NVDEC). Provides APIs to leverage GPU acceleration for H.264, HEVC, and AV1 codecs.",
      "tags": [
        "gpu",
        "hardware-acceleration",
        "codec",
        "encoding",
        "decoding",
        "nvenc",
        "nvdec"
      ],
      "categories": [
        "hardware-accelerated-transcoding"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Intel oneAPI Video Processing Library (oneVPL)",
      "homepage": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onevpl.html",
      "description": "Intel's oneAPI Video Processing Library, the successor to Intel Media SDK. It offers a unified API for GPU-accelerated video encode/decode and processing (Quick Sync Video and other accelerators).",
      "tags": [
        "gpu",
        "encoding",
        "video processing",
        "intel",
        "sdk",
        "acceleration"
      ],
      "categories": [
        "hardware-accelerated-transcoding"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "AMD Advanced Media Framework (AMF SDK)",
      "homepage": "https://gpuopen.com/video-encode-decode/",
      "description": "AMD's SDK for GPU-based video encoding and decoding. The AMF SDK allows developers to utilize AMD hardware (VCE/VCN) for accelerating video encode/decode tasks.",
      "tags": [
        "gpu",
        "encoding",
        "decoding",
        "hardware-acceleration",
        "sdk"
      ],
      "categories": [
        "hardware-accelerated-transcoding"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "TSDuck",
      "homepage": "https://tsduck.io/",
      "description": "An open source toolkit for MPEG transport streams. TSDuck provides a rich set of command-line utilities and a C++ library for analyzing, editing, generating, and broadcasting MPEG TS streams.",
      "tags": [
        "transport stream",
        "MPEG",
        "streaming",
        "toolkit",
        "command-line",
        "analysis"
      ],
      "categories": [
        "logging-debugging-tools"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "yt-dlp",
      "homepage": "https://github.com/yt-dlp/yt-dlp",
      "description": "A command-line program to download videos from YouTube and many other video platforms. It's a fork of youtube-dl with additional features and fixes, widely used for video retrieval.",
      "tags": [
        "download",
        "video-retrieval",
        "command-line",
        "youtube",
        "video-tools"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "Auto-Editor",
      "homepage": "https://github.com/WyattBlue/auto-editor",
      "description": "An automatic video editor written in Python that can remove silence, jump cuts, and more without manual editing. It processes video/audio to create a faster-paced output automatically.",
      "tags": [
        "python",
        "video-editing",
        "automation",
        "video-processing",
        "ffmpeg-like"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "video-dev Slack",
      "homepage": "https://slack.video-dev.org/",
      "description": "An online Slack community where video streaming developers and engineers discuss topics like HLS, DASH, players, encoding, and other streaming media technologies.",
      "tags": [
        "slack",
        "community",
        "networking",
        "video-engineering",
        "discussion-forum"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "community-groups"
    },
    {
      "title": "Reddit r/videostreaming",
      "homepage": "https://www.reddit.com/r/videostreaming/",
      "description": "A subreddit dedicated to video streaming technology. Community members share knowledge, ask questions, and discuss streaming protocols, encoding settings, and tools.",
      "tags": [
        "community",
        "forum",
        "discussion",
        "streaming",
        "technology"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "online-forums"
    },
    {
      "title": "Stack Exchange \u2013 Video Production",
      "homepage": "https://video.stackexchange.com/",
      "description": "A Q&A community for video production and post-production. Topics often include editing, codecs, formats, and troubleshooting video workflows (knowledge base format).",
      "tags": [
        "education",
        "community",
        "video production",
        "knowledge base",
        "troubleshooting",
        "editing",
        "codecs",
        "formats"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Netflix TechBlog \u2013 Official Blog",
      "homepage": "https://netflixtechblog.com/",
      "description": "Netflix's engineering blog often covers innovations in video encoding, quality metrics, and streaming architecture that Netflix has developed and open-sourced.",
      "tags": [
        "engineering",
        "video-technology",
        "streaming",
        "encoding",
        "open-source"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "YouTube Engineering and Developers Blog",
      "homepage": "https://youtube-eng.googleblog.com/",
      "description": "Google\u2019s official YouTube Engineering blog, sharing updates and insights into the technology behind YouTube, including streaming optimizations and new features.",
      "tags": [
        "engineering",
        "tutorial",
        "technology",
        "streaming",
        "youtube",
        "google"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "BBC R&D Blog (Research & Development)",
      "homepage": "https://www.bbc.co.uk/rd/blog",
      "description": "The BBC Research & Development blog where broadcast technology advancements are discussed. Includes articles on new video compression techniques, streaming trials, and standards.",
      "tags": [
        "research",
        "technology",
        "broadcasting",
        "video compression",
        "streaming",
        "standards"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Bitmovin Tech Blog",
      "homepage": "https://bitmovin.com/blog/",
      "description": "Bitmovin\u2019s blog features articles on video streaming, codec comparisons, encoding techniques, and industry trends in OTT delivery (by a provider of streaming encoding/player solutions).",
      "tags": [
        "video streaming",
        "encoding",
        "codec",
        "OTT",
        "tutorial",
        "technology"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "SMPTE Virtual Course \u2013 Essentials of Video Compression",
      "homepage": "https://education.smpte.org/courses/course-v1:SMPTE+VC101+2019/about",
      "description": "A course by SMPTE covering the fundamentals of video compression technology, standards, and workflows. Provides a comprehensive background for professionals.",
      "tags": [
        "video compression",
        "course",
        "professional training",
        "technology education"
      ],
      "categories": [
        "books-courses"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Codec Licensing and Web Video Streaming \u2013 StreamingMedia",
      "homepage": "https://www.streamingmedia.com/Articles/ReadArticle.aspx?ArticleID=130184",
      "description": "An article discussing how video codec patent licensing (H.264, HEVC, AV1) impacts web streaming. It provides insights into royalties and the push for royalty-free codecs.",
      "tags": [
        "codec",
        "licensing",
        "patents",
        "web streaming",
        "H.264",
        "HEVC",
        "AV1"
      ],
      "categories": [
        "open-source-licensing-patents"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Per-Title Encode Optimization \u2013 Netflix TechBlog",
      "homepage": "https://netflixtechblog.com/per-title-encode-optimization-7e99442b62a2",
      "description": "Netflix\u2019s seminal whitepaper on Per-Title Encoding Optimization, describing how they determine optimal encoding settings for each content title to maximize quality and minimize bitrate.",
      "tags": [
        "encoding",
        "optimization",
        "bitrate",
        "quality",
        "netflix",
        "video processing"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Demuxed Conference Talks (YouTube Channel)",
      "homepage": "https://www.youtube.com/channel/UCFQoJk-PKfXI4M7qLrH_cCg",
      "description": "The YouTube channel for Demuxed, an annual conference for video engineers. Features recorded talks covering streaming protocols, codecs, player development, and industry case studies.",
      "tags": [
        "conference",
        "video engineering",
        "streaming",
        "tutorials",
        "technical talks"
      ],
      "categories": [
        "webinars-conference-talks"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Shaka Player",
      "homepage": "https://github.com/shaka-project/shaka-player",
      "description": "An open source JavaScript library for adaptive video streaming, providing a DASH and HLS player with Widevine DRM support for HTML5 browsers.",
      "tags": [
        "javascript",
        "html5",
        "adaptive streaming",
        "DASH",
        "HLS",
        "DRM",
        "Widevine"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "CyTube",
      "homepage": "https://github.com/calzoneman/sync",
      "description": "A self-hosted web application for synchronized media playback and chat. CyTube allows multiple users to watch videos together in real-time in various channels.",
      "tags": [
        "web player",
        "synchronized playback",
        "multi-user",
        "real-time streaming",
        "collaborative viewing"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "players-clients"
    },
    {
      "title": "Invidious",
      "homepage": "https://github.com/iv-org/invidious",
      "description": "An open source, alternative front-end for YouTube that is privacy-respecting. It streams YouTube content without ads or tracking, and supports lightweight instances.",
      "tags": [
        "web-player",
        "privacy",
        "youtube",
        "open-source",
        "client"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "players-clients"
    },
    {
      "title": "RapidBay",
      "homepage": "https://github.com/manwhoami/RapidBay",
      "description": "A self-hosted torrent video streaming service that streams videos directly from torrents. It allows searching and playing torrent video content via web interface using BitTorrent and HTTP.",
      "tags": [
        "torrent",
        "self-hosted",
        "streaming",
        "video-delivery",
        "p2p"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Restreamer",
      "homepage": "https://github.com/datarhei/restreamer",
      "description": "A user-friendly solution to re-stream video sources (like local RTSP webcams) to streaming platforms. It wraps FFmpeg to publish streams to YouTube, Twitch, or custom servers with a simple UI.",
      "tags": [
        "ffmpeg",
        "streaming",
        "restreamer",
        "rtsp",
        "multiplatform"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Streama",
      "homepage": "https://github.com/streamaserver/streama",
      "description": "An open source Netflix-like streaming media server. Streama lets you host your own videos, organize them, and stream to clients with resume and user profiles.",
      "tags": [
        "self-hosted",
        "media-server",
        "video-streaming",
        "open-source"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "SyncTube",
      "homepage": "https://github.com/sync-tube/synctube",
      "description": "A lightweight alternative to CyTube for watching videos in sync with friends. SyncTube is easy to set up and supports synchronized playback and chat for YouTube and direct video links.",
      "tags": [
        "web player",
        "synchronization",
        "collaborative viewing",
        "video sharing"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "players-clients"
    },
    {
      "title": "Tube Archivist",
      "homepage": "https://www.tubearchivist.com/",
      "description": "A self-hosted YouTube archival and library management application. It lets you subscribe to channels, automatically download videos, and index them with search and tags for offline access.",
      "tags": [
        "archival",
        "library",
        "video-management",
        "offline-access",
        "content-indexing"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Tube (Self-hosted Video Sharing)",
      "homepage": "https://github.com/prologic/tube",
      "description": "A simple self-hosted video sharing platform (written in Go) that allows uploading videos and automatically transcodes them to streamable formats (H.265/AAC in MP4).",
      "tags": [
        "transcoding",
        "self-hosted",
        "go",
        "video-processing",
        "h265",
        "mp4"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Jitsi Meet",
      "homepage": "https://jitsi.org/jitsi-meet/",
      "description": "An open source video conferencing platform that you can self-host. Jitsi Meet supports multi-user video calls with screen sharing, encryption, and no account needed.",
      "tags": [
        "video conferencing",
        "web player",
        "open source",
        "multi-user",
        "screen sharing"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "players-clients"
    },
    {
      "title": "BigBlueButton",
      "homepage": "https://bigbluebutton.org/",
      "description": "An open source web conferencing system designed for online learning. BigBlueButton supports video, audio, slides, chat, and whiteboard, and is often integrated with learning platforms.",
      "tags": [
        "web conferencing",
        "online learning",
        "video streaming",
        "education",
        "open source"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Galene",
      "homepage": "https://galene.org/",
      "description": "A simple self-hosted SFU (Selective Forwarding Unit) for videoconferencing. Galene is lightweight and supports multiple rooms and groups with direct browser clients (using WebRTC).",
      "tags": [
        "webrtc",
        "videoconferencing",
        "server",
        "self-hosted",
        "real-time"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "OpenVidu",
      "homepage": "https://openvidu.io/",
      "description": "An open source platform for building video conferencing or streaming solutions. OpenVidu provides easy-to-use APIs for WebRTC, enabling multi-party video calls and streaming with recording and broadcasting features.",
      "tags": [
        "WebRTC",
        "video conferencing",
        "real-time streaming",
        "multi-party communication"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "FFmpeg Wiki: H.264 Encoding Guide",
      "homepage": "https://trac.ffmpeg.org/wiki/Encode/H.264",
      "description": "A comprehensive guide on the FFmpeg Wiki detailing how to encode video to H.264 using FFmpeg. It covers recommended settings, presets, CRF usage, and quality considerations.",
      "tags": [
        "h264",
        "encoding",
        "tutorial",
        "ffmpeg",
        "video compression"
      ],
      "categories": [
        "encoding-transcoding-guides"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "FFmpeg Wiki: H.265 (HEVC) Encoding Guide",
      "homepage": "https://trac.ffmpeg.org/wiki/Encode/H.265",
      "description": "An FFmpeg Wiki guide for encoding video to H.265/HEVC. It describes how to use x265 via FFmpeg, including tuning parameters, bitrate vs quality (CRF), and preset trade-offs.",
      "tags": [
        "encoding",
        "h265",
        "hevc",
        "x265",
        "tutorial",
        "video compression"
      ],
      "categories": [
        "encoding-transcoding-guides"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "FFmpeg Wiki: Filtering Guide",
      "homepage": "https://trac.ffmpeg.org/wiki/FilteringGuide",
      "description": "Documentation on using FFmpeg\u2019s filtering system, demonstrating how to chain video filters (scale, crop, overlay, etc.) and audio filters for processing media with examples.",
      "tags": [
        "ffmpeg",
        "video filtering",
        "documentation",
        "tutorial",
        "media processing"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "FFmpeg Wiki: Streaming Guide",
      "homepage": "https://trac.ffmpeg.org/wiki/StreamingGuide",
      "description": "An official Wiki guide from FFmpeg explaining how to set up streaming using FFmpeg, including examples for streaming via RTMP to servers or using FFmpeg as a server for HLS/DASH.",
      "tags": [
        "ffmpeg",
        "streaming",
        "tutorial",
        "rtmp",
        "hls",
        "dash",
        "server configuration"
      ],
      "categories": [
        "video-streaming-tutorials"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Apple Technical Note TN2224 - HLS Best Practices",
      "homepage": "https://developer.apple.com/library/archive/technotes/tn2224/_index.html",
      "description": "An Apple Technical Note detailing best practices for HTTP Live Streaming. It covers how to encode media, segment files, set up playlists, and deliver HLS streams efficiently.",
      "tags": [
        "hls",
        "streaming",
        "apple",
        "technical-note",
        "best-practices",
        "encoding",
        "streaming-protocols"
      ],
      "categories": [
        "best-practices-guidelines"
      ],
      "category": "hls"
    },
    {
      "title": "DASH-IF Interoperability Guidelines",
      "homepage": "https://dashif.org/docs/DASH-IF-IOP-v4.3.pdf",
      "description": "DASH Industry Forum's Interoperability Points (IOP) guidelines. This document ensures consistent implementations of MPEG-DASH by defining profiles and common practices for players and encoders.",
      "tags": [
        "standards",
        "DASH",
        "specification",
        "guidelines",
        "MPEG"
      ],
      "categories": [
        "adaptive-streaming-standards"
      ],
      "category": "specs-standards"
    },
    {
      "title": "CTA WAVE Low Latency Service Guidelines",
      "homepage": "https://cta.tech/Research-Standards/Standards/CTA-WAVE",
      "description": "Guidelines from the CTA WAVE (Web Application Video Ecosystem) project focusing on low-latency streaming service implementation, including Low-Latency DASH and HLS considerations.",
      "tags": [
        "low-latency",
        "DASH",
        "HLS",
        "streaming guidelines",
        "CTA WAVE"
      ],
      "categories": [
        "best-practices-guidelines"
      ],
      "category": "adaptive-streaming"
    },
    {
      "title": "ISO/IEC 14496-12 (MPEG-4 Part 12) ISO Base Media File Format",
      "homepage": "https://www.iso.org/standard/74428.html",
      "description": "The ISO base media file format standard (used by MP4, MOV, etc.), defining the general structure for time-based media files. It's a foundation for MP4 and fragmented MP4 (CMAF).",
      "tags": [
        "ISO",
        "MPEG-4",
        "file format",
        "standard",
        "technical specification"
      ],
      "categories": [
        "standards-specifications-industry-resources"
      ],
      "category": "specs-standards"
    },
    {
      "title": "RTMPDump",
      "homepage": "https://rtmpdump.mplayerhq.hu/",
      "description": "A command-line utility to download RTMP streams. RTMPDump can save streaming media content transmitted via Real-Time Messaging Protocol, often used to retrieve videos from sites using RTMP.",
      "tags": [
        "rtmp",
        "streaming",
        "download",
        "protocol",
        "media-retrieval"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "transport-protocols"
    },
    {
      "title": "Nginx-RTMP Module",
      "homepage": "https://github.com/arut/nginx-rtmp-module",
      "description": "An Nginx module that adds RTMP streaming server capabilities to Nginx. It supports streaming live content via RTMP and can also be used to create HLS/DASH streams from RTMP input.",
      "tags": [
        "rtmp",
        "streaming",
        "server",
        "nginx",
        "live-streaming",
        "protocol"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "transport-protocols"
    },
    {
      "title": "The Making of VES: the Cosmos Microservice for Netflix Video Encoding",
      "homepage": "https://netflixtechblog.com/the-making-of-ves-the-cosmos-microservice-for-netflix-video-encoding-3e6177bfbeab",
      "description": "A Netflix Tech Blog article detailing the design and development of Netflix's Video Encoding Service (VES), a microservice in their Cosmos platform to improve video encoding processes.",
      "tags": [
        "netflix",
        "microservice",
        "video encoding",
        "case study",
        "infrastructure"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Rebuilding Netflix Video Processing Pipeline with Microservices",
      "homepage": "https://netflixtechblog.com/rebuilding-netflix-video-processing-pipeline-with-microservices-7ed3d6f805bf",
      "description": "Netflix Tech Blog post (part of a series) describing how Netflix migrated their video processing pipeline to a microservices architecture to increase agility and scalability.",
      "tags": [
        "microservices",
        "netflix",
        "video processing",
        "architecture",
        "case study"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "CAMBI: A Banding Artifact Detector",
      "homepage": "https://netflixtechblog.com/cambi-a-banding-artifact-detector-ea0f291a4dd8",
      "description": "Netflix Tech Blog article introducing CAMBI (Contrast-Aware Multi-scale Banding Index), a metric Netflix developed to automatically detect banding artifacts in video content.",
      "tags": [
        "video quality",
        "artifact detection",
        "netflix",
        "encoding",
        "video processing"
      ],
      "categories": [
        "media-analysis-quality-metrics-ai-tools"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Toward a Better Quality Metric for the Video Community",
      "homepage": "https://netflixtechblog.com/toward-a-better-quality-metric-for-the-video-community-7f94ba0d008",
      "description": "Netflix Tech Blog article discussing the need for improved video quality metrics beyond existing ones like PSNR or SSIM, and how metrics like VMAF were developed to better reflect human perception.",
      "tags": [
        "quality metrics",
        "video perception",
        "VMAF",
        "PSNR",
        "SSIM",
        "Netflix"
      ],
      "categories": [
        "media-analysis-quality-metrics-ai-tools"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Optimized Shot-Based Encodes for 4K: Now Streaming!",
      "homepage": "https://netflixtechblog.com/optimized-shot-based-encodes-for-4k-now-streaming-9e4236f07f0d",
      "description": "Netflix Tech Blog article on Netflix's rollout of shot-based encoding for 4K titles. It explains how splitting content by scene (shot) and encoding with per-shot parameters improved quality.",
      "tags": [
        "encoding",
        "4K",
        "netflix",
        "video quality",
        "scene-based encoding"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Improving Our Video Encodes for Legacy Devices",
      "homepage": "https://netflixtechblog.com/improving-our-video-encodes-for-legacy-devices-9f39f7774850",
      "description": "A Netflix Tech Blog post describing techniques to ensure Netflix content remains compatible and efficient on older or less powerful devices, through specialized encoding profiles and optimizations.",
      "tags": [
        "encoding",
        "device compatibility",
        "optimization",
        "legacy devices",
        "netflix"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Streaming Video Experimentation at Netflix",
      "homepage": "https://netflixtechblog.com/streaming-video-experimentation-at-netflix-visualizing-practical-optimization-834152da60a5",
      "description": "Netflix Tech Blog article explaining how Netflix conducts A/B testing and experimentation on streaming video quality and features to optimize QoE for its users at scale.",
      "tags": [
        "QoE",
        "A/B testing",
        "streaming optimization",
        "performance",
        "netflix"
      ],
      "categories": [
        "streaming-analytics-monitoring"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Netflix Video Quality at Scale with Cosmos Microservices",
      "homepage": "https://netflixtechblog.com/netflix-video-quality-at-scale-with-cosmos-microservices-35cf6047ed83",
      "description": "A deep dive into Netflix's Cosmos platform and how its microservice architecture enables large-scale video quality improvements (like per-title and per-shot encoding) across Netflix\u2019s catalog.",
      "tags": [
        "microservices",
        "netflix",
        "video encoding",
        "case study",
        "scaling",
        "video quality"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Video Annotator: Building Video Classifiers using Vision-Language",
      "homepage": "https://netflixtechblog.com/video-annotator-building-video-classifiers-using-vision-language-techniques-8609e457d9c",
      "description": "Netflix Tech Blog on a framework for training ML models for video understanding. Describes an internal system to create video classifiers using combined video and text (subtitle/metadata) analysis.",
      "tags": [
        "machine learning",
        "video classification",
        "netflix",
        "vision-language model",
        "ml framework"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Building In-Video Search at Netflix",
      "homepage": "https://netflixtechblog.com/building-in-video-search-c2f93429d18b",
      "description": "Netflix Tech Blog article about developing an internal system for searching within video content (e.g., finding scenes across the catalog). It covers the indexing of visual and audio data to enable search.",
      "tags": [
        "search",
        "video indexing",
        "content discovery",
        "audio processing",
        "visual search"
      ],
      "categories": [
        "media-analysis-quality-metrics-ai-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "More Efficient Mobile Encodes for Netflix Downloads",
      "homepage": "https://netflixtechblog.com/more-efficient-mobile-encodes-for-netflix-downloads-625d44b2daef",
      "description": "Netflix Tech Blog post summarizing improvements in Netflix\u2019s encoding for mobile downloads, targeting low-bandwidth scenarios. It discusses techniques like per-title optimizations for mobile.",
      "tags": [
        "mobile encoding",
        "bandwidth optimization",
        "per-title encoding",
        "video compression"
      ],
      "categories": [
        "encoding-transcoding-guides"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Projekktor",
      "homepage": "https://www.projekktor.com/",
      "description": "An open source HTML5 video player from the early 2010s. Projekktor provided a unified player with plugin support to handle both HTML5 and Flash fallback in an era of transition. While development has slowed, it remains a piece of the open source player history.",
      "tags": [
        "html5",
        "video player",
        "open source",
        "javascript",
        "web technology"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "jPlayer",
      "homepage": "https://jplayer.org/",
      "description": "A jQuery-based media library that can be used to build web audio and video players. jPlayer abstracts the HTML5 <video> and <audio> elements and provides a consistent API, with a Flash fallback (for older browsers) and skinnable UI via CSS.",
      "tags": [
        "web",
        "javascript",
        "player",
        "html5",
        "jquery",
        "media",
        "audio",
        "video"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "OpenPlayerJS",
      "homepage": "https://openplayerjs.io/",
      "description": "A lightweight open source video and audio player for the web. OpenPlayerJS supports modern streaming formats (HLS via hls.js, DASH via dash.js) and provides a clean UI that is easily customizable, aiming to be an easy-to-integrate solution.",
      "tags": [
        "HTML5",
        "web player",
        "streaming",
        "HLS",
        "DASH",
        "open source"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "afterglow",
      "homepage": "https://afterglowplayer.com/",
      "description": "An open source HTML5 video player that builds on top of Video.js, offering a simpler integration (just adding data attributes to video tags) and a default aesthetic out-of-the-box. afterglow aims to make including a responsive, skinnable video player on websites quick and easy.",
      "tags": [
        "html5",
        "video player",
        "javascript",
        "web",
        "responsive"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "Kurento Media Server",
      "homepage": "https://www.kurento.org/",
      "description": "An open source WebRTC media server with advanced capabilities like mixing, transcoding, and computer vision integration. Kurento allows building videoconferencing, broadcasting, and augmented video applications by handling streams on the server side.",
      "tags": [
        "WebRTC",
        "media server",
        "transcoding",
        "video processing",
        "server-side streaming"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "Red5 Pro (Open Source Edition)",
      "homepage": "https://github.com/Red5/red5-server",
      "description": "Red5 is an open source media server initially known for RTMP streaming. The open source Red5 server supports live publishing and playback of streams (RTMP, and via extensions to WebSockets/WebRTC) and can be extended via Java for custom streaming applications.",
      "tags": [
        "media server",
        "RTMP",
        "WebRTC",
        "Java",
        "streaming infrastructure"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "MediaMTX (rtsp-simple-server)",
      "homepage": "https://github.com/aler9/mediamtx",
      "description": "An open source, self-contained RTSP/RTMP/WebRTC server in Go. MediaMTX (formerly rtsp-simple-server) allows forwarding, reading, and publishing of live streams with minimal configuration, making it easy to deploy a streaming server for multiple protocols.",
      "tags": [
        "rtsp",
        "rtmp",
        "webrtc",
        "go",
        "server",
        "streaming",
        "protocol"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "Wowza Streaming Engine (Docs)",
      "homepage": "https://www.wowza.com/docs/wowza-streaming-engine",
      "description": "Documentation for Wowza Streaming Engine, a commercial media server supporting RTMP, RTSP, HLS, DASH, and more. It covers setup and integration details for those using Wowza to host live or on-demand streaming services.",
      "tags": [
        "media server",
        "documentation",
        "streaming platform",
        "RTMP",
        "HLS",
        "DASH"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "Cedexis Openmix (Whitepaper)",
      "homepage": "https://www.cedexis.com/openmix-application-load-balancer/",
      "description": "Cedexis (now part of Citrix) provided Openmix, a load balancing platform for directing traffic across multiple CDNs based on real-time performance data. Their resources and whitepapers describe strategies for multi-CDN failover and optimization for video streaming.",
      "tags": [
        "cdn",
        "load balancing",
        "multi-cdn",
        "traffic optimization",
        "performance routing"
      ],
      "categories": [
        "multi-cdn-management"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Mux's Multi-CDN Strategy (Article)",
      "homepage": "https://mux.com/blog/multi-cdn-strategy-for-video-streaming/",
      "description": "A blog post by Mux discussing how and why to use multiple CDNs for video streaming. It covers strategies to improve reliability and performance by switching CDNs dynamically based on region or metrics.",
      "tags": [
        "CDN",
        "video streaming",
        "performance",
        "reliability",
        "infrastructure"
      ],
      "categories": [
        "multi-cdn-management"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Apache Traffic Control",
      "homepage": "https://trafficcontrol.apache.org/",
      "description": "An open source CDN control plane originally contributed by Comcast. Apache Traffic Control can create a CDN with edge cache servers (like Apache Traffic Server) and provides tooling to manage content delivery, making it useful for building an edge caching infrastructure for video.",
      "tags": [
        "cdn",
        "content delivery",
        "edge caching",
        "infrastructure",
        "open source"
      ],
      "categories": [
        "edge-computing-caching-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Varnish Streaming Cache (Blog)",
      "homepage": "https://www.varnish-software.com/blog/cache-invalidation-for-live-streaming-with-varnish/",
      "description": "A Varnish Software blog post on using Varnish Cache for live video streaming (HLS/DASH). It covers techniques for caching segments and manifests at the edge, and how to handle cache invalidation and high request rates for live streams.",
      "tags": [
        "varnish",
        "caching",
        "live streaming",
        "HLS",
        "DASH",
        "edge caching"
      ],
      "categories": [
        "edge-computing-caching-solutions"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Conviva Streaming Performance Index (Report)",
      "homepage": "https://www.conviva.com/state-of-streaming/",
      "description": "Conviva regularly publishes 'State of Streaming' reports which provide analytics on streaming quality (startup times, rebuffer rates, bitrate) across the industry. These reports are valuable to understand trends and the importance of monitoring QoE at scale.",
      "tags": [
        "analytics",
        "performance",
        "QoE",
        "streaming metrics",
        "industry report"
      ],
      "categories": [
        "streaming-analytics-monitoring"
      ],
      "category": "quality-testing"
    },
    {
      "title": "OpenTelemetry Video QoE Metrics (Article)",
      "homepage": "https://medium.com/@opentelemetry/video-streaming-qoe-monitoring-with-opentelemetry-1d9f3c2e0715",
      "description": "An article on using OpenTelemetry (an open source observability framework) to collect and analyze Quality of Experience (QoE) metrics from video players. It demonstrates how to instrument players to send standardized metrics for buffering, startup time, etc., into a monitoring system.",
      "tags": [
        "observability",
        "metrics",
        "QoE",
        "instrumentation",
        "tutorial",
        "performance"
      ],
      "categories": [
        "streaming-analytics-monitoring"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Apple HLS Authoring Specification for Apple Devices",
      "homepage": "https://developer.apple.com/documentation/http_live_streaming/hls_authoring_specification_for_apple_devices",
      "description": "Apple's guidelines for creating HLS streams that are optimized for Apple devices (iPhone, iPad, Apple TV). It covers chunk durations, encoding settings, and playlist rules to ensure smooth playback on Apple hardware.",
      "tags": [
        "apple",
        "streaming",
        "authoring",
        "specification",
        "device-optimization"
      ],
      "categories": [
        "hls-tools"
      ],
      "category": "hls"
    },
    {
      "title": "hls.js Low-Latency Playlist Simulator",
      "homepage": "https://hls-js.netlify.app/demo/?src=LL-HLS_URL",
      "description": "An online demo environment for hls.js where one can input a Low-Latency HLS playlist URL to test playback. Useful for testing LL-HLS streams in a real player implementation and observing buffering and timing behaviors.",
      "tags": [
        "hls",
        "low-latency",
        "streaming",
        "demo",
        "testing",
        "playback"
      ],
      "categories": [
        "hls-tools"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "DASH-IF Conformance Tool",
      "homepage": "https://github.com/Dash-Industry-Forum/Conformance-Software",
      "description": "An official tool by the DASH Industry Forum to validate MPEG-DASH MPD files and segment formats. It checks for spec compliance and common issues in DASH content, helpful for anyone generating DASH streams.",
      "tags": [
        "validation",
        "conformance",
        "MPEG-DASH",
        "specification",
        "tool"
      ],
      "categories": [
        "dash-tools"
      ],
      "category": "dash"
    },
    {
      "title": "Live DASH DRM ClearKey Sample (DASH-IF)",
      "homepage": "https://reference.dashif.org/dash.js/v/latest/samples/drm/clearkey/",
      "description": "A sample page demonstrating MPEG-DASH playback with ClearKey DRM using the DASH-IF reference player (dash.js). It provides a working example of encrypted content playback which can be a template for developers testing DRM with DASH.",
      "tags": [
        "DASH",
        "DRM",
        "ClearKey",
        "streaming",
        "playback",
        "reference implementation"
      ],
      "categories": [
        "dash-tools"
      ],
      "category": "dash"
    },
    {
      "title": "CMAF Specification (ISO/IEC 23000-19:2018)",
      "homepage": "https://www.iso.org/standard/71975.html",
      "description": "The Common Media Application Format (CMAF) standard defines a container format (based on fragmented MP4) for segmented media delivery that can be used for both HLS and DASH. Understanding CMAF is key to creating streams that work across different streaming protocols with a single media file format.",
      "tags": [
        "CMAF",
        "ISO",
        "streaming standard",
        "container format",
        "media specification"
      ],
      "categories": [
        "cmaf-fmp4-packaging"
      ],
      "category": "specs-standards"
    },
    {
      "title": "Wowza Ultra Low Latency CMAF Guide",
      "homepage": "https://www.wowza.com/docs/using-cmaf-for-low-latency-streaming",
      "description": "A guide from Wowza on using CMAF for low-latency streaming. It explains how CMAF enables low-latency modes in HLS and DASH by using chunked transfer encoding and provides configuration tips for achieving sub-2-second latency.",
      "tags": [
        "CMAF",
        "low-latency",
        "HLS",
        "DASH",
        "streaming",
        "chunked encoding"
      ],
      "categories": [
        "cmaf-fmp4-packaging"
      ],
      "category": "adaptive-streaming"
    },
    {
      "title": "Python m3u8 Library",
      "homepage": "https://github.com/globocom/m3u8",
      "description": "A Python library to parse and generate M3U8 playlists for HLS. It allows developers to programmatically read HLS master or media playlists and create new ones, which is useful for tasks like dynamic playlist generation or analysis.",
      "tags": [
        "library",
        "playlist",
        "streaming",
        "python",
        "m3u8",
        "adaptive-streaming"
      ],
      "categories": [
        "hls-manifest-parsers-generators"
      ],
      "category": "hls"
    },
    {
      "title": "Node m3u8-parser",
      "homepage": "https://github.com/videojs/m3u8-parser",
      "description": "A JavaScript library (used by Video.js) for parsing M3U8 manifests. It's well-tested and can be used in Node or the browser to interpret HLS playlists, useful for building custom players or playlist manipulation tools.",
      "tags": [
        "m3u8",
        "parser",
        "HLS",
        "streaming",
        "JavaScript",
        "library"
      ],
      "categories": [
        "hls-manifest-parsers-generators"
      ],
      "category": "hls"
    },
    {
      "title": "mpd-parser (Node)",
      "homepage": "https://github.com/videojs/mpd-parser",
      "description": "A JavaScript library for parsing MPEG-DASH MPD manifests, maintained under the videojs project umbrella. It can interpret the XML of an MPD and output a JSON structure, making it easier to work with DASH manifests in web applications.",
      "tags": [
        "parsing",
        "manifest",
        "adaptive-streaming",
        "javascript",
        "library"
      ],
      "categories": [
        "dash-manifest-tools"
      ],
      "category": "dash"
    },
    {
      "title": "MPEG-DASH MPD Python Library",
      "homepage": "https://github.com/MPEGGroup/DASHSchema",
      "description": "A Python implementation of the MPEG-DASH schema and tools to validate or create MPD files. It aligns with the official XML schemas for DASH, helping generate standard-compliant manifests for testing or production.",
      "tags": [
        "python",
        "mpd",
        "library",
        "xml",
        "schema",
        "validation",
        "manifest"
      ],
      "categories": [
        "dash-manifest-tools"
      ],
      "category": "dash"
    },
    {
      "title": "Shaka Packager",
      "homepage": "https://github.com/google/shaka-packager",
      "description": "An open source tool by Google for packaging media content (e.g., creating MPD/manifest and segments) with support for encryption (Widevine, PlayReady, FairPlay). It's often used to prepare content for DASH and HLS with CMAF and DRM, complementing encoding pipelines.",
      "tags": [
        "packaging",
        "manifest",
        "DRM",
        "encryption",
        "DASH",
        "HLS",
        "CMAF"
      ],
      "categories": [
        "encryption-drm-for-adaptive-streaming"
      ],
      "category": "media-tools"
    },
    {
      "title": "bento4.mp4encrypt",
      "homepage": "https://www.bento4.com/documentation/mp4encrypt/",
      "description": "Part of the Bento4 suite, mp4encrypt is a command-line utility to apply DRM encryption (e.g., Common Encryption) to MP4 files. It's used to encrypt media files for DASH (cenc) or HLS (sample AES) and is essential for preparing content protection in adaptive streaming workflows.",
      "tags": [
        "drm",
        "encryption",
        "mp4",
        "content-protection",
        "streaming-security"
      ],
      "categories": [
        "encryption-drm-for-adaptive-streaming"
      ],
      "category": "general-tools"
    },
    {
      "title": "HESP (High Efficiency Streaming Protocol) Whitepaper",
      "homepage": "https://download2.diva-cdn.com/files/High%20Efficiency%20Streaming%20Protocol%20(HESP)%20Whitepaper%20v2.0.pdf",
      "description": "A whitepaper on the High Efficiency Streaming Protocol (HESP), an emerging approach to ultra low latency streaming. It describes how HESP achieves sub-second latencies with design differences from HLS/DASH, though it requires specialized server and player support.",
      "tags": [
        "streaming protocol",
        "low latency",
        "transport",
        "HESP",
        "whitepaper"
      ],
      "categories": [
        "low-latency-streaming-tools"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "WebRTC Samples for Live Streaming",
      "homepage": "https://webrtc.github.io/samples/src/content/peerconnection/webrtc-studio/",
      "description": "A collection of WebRTC sample applications (by webrtc.github.io) demonstrating how to use WebRTC for video streaming. These examples serve as tools to understand building low-latency peer-to-peer or server-mediated live streams in browsers.",
      "tags": [
        "WebRTC",
        "live streaming",
        "tutorial",
        "peer-to-peer",
        "browser",
        "sample code"
      ],
      "categories": [
        "low-latency-streaming-tools"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "ffmpeg-python",
      "homepage": "https://github.com/kkroening/ffmpeg-python",
      "description": "A Python library providing a fluent interface to compose FFmpeg command line invocations. It allows building complex filter graphs and processing pipelines in Python code as an alternative to writing FFmpeg shell commands.",
      "tags": [
        "ffmpeg",
        "python",
        "encoding",
        "video processing",
        "library"
      ],
      "categories": [
        "scripting-automation-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Av1an (Encoding Automation)",
      "homepage": "https://github.com/master-of-zen/Av1an",
      "description": "A tool to automate encoding using AV1 (and other codecs) by splitting video into scenes and encoding in parallel. Av1an optimizes multi-threaded encoding and merges outputs, speeding up the encoding process especially for AV1 which is slow.",
      "tags": [
        "encoding",
        "AV1",
        "parallel processing",
        "video optimization",
        "multi-threaded"
      ],
      "categories": [
        "scripting-automation-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "VapourSynth Script Repository",
      "homepage": "https://vsrepo.vapoursynth.com/",
      "description": "A repository and package manager of VapourSynth filters and scripts. It automates the installation and management of community-contributed VapourSynth plugins, which is useful for automating video processing tasks in scripts.",
      "tags": [
        "video processing",
        "scripting",
        "plugin management",
        "automation"
      ],
      "categories": [
        "scripting-automation-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "jrottenberg/ffmpeg Docker Images",
      "homepage": "https://hub.docker.com/r/jrottenberg/ffmpeg",
      "description": "A popular Docker image repository for FFmpeg maintained by the community. These images package FFmpeg (with various codecs enabled) for easy use in CI pipelines or cloud deployments, simplifying environment setup for video processing tasks.",
      "tags": [
        "docker",
        "encoding",
        "video-processing",
        "ci-pipeline",
        "cloud-deployment"
      ],
      "categories": [
        "docker-containerization-tools"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "Netflix Titus (Container orchestration for video)",
      "homepage": "https://netflix.github.io/titus/",
      "description": "Netflix's open source container management platform that runs video processing workloads among others. While not video-specific, Titus is key to how Netflix deploys and scales encoding and other batch jobs in a containerized fashion, ensuring efficient resource usage.",
      "tags": [
        "container",
        "orchestration",
        "netflix",
        "cloud",
        "kubernetes",
        "infrastructure"
      ],
      "categories": [
        "docker-containerization-tools"
      ],
      "category": "cloud-platforms"
    },
    {
      "title": "rdp/ffmpeg-windows-build-helpers",
      "homepage": "https://github.com/rdp/ffmpeg-windows-build-helpers",
      "description": "A set of shell scripts to build FFmpeg (and related libraries like x264, x265, etc.) on Windows using MSYS2 or Cygwin. This helps automate the otherwise complex process of compiling FFmpeg and its dependencies on the Windows platform.",
      "tags": [
        "ffmpeg",
        "build-script",
        "windows",
        "compilation",
        "encoding-tools"
      ],
      "categories": [
        "build-scripts-automation"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "AOMedia AV1 Codec Build Instructions",
      "homepage": "https://aomedia.googlesource.com/aom/+/refs/heads/master/BUILD.md",
      "description": "Documentation for building the AOMedia AV1 codec library (libaom) from source on various platforms. It's a useful reference for developers wanting to compile the latest AV1 encoder/decoder and integrate it into their workflows or products.",
      "tags": [
        "codec",
        "AV1",
        "libaom",
        "build instructions",
        "encoder",
        "decoder"
      ],
      "categories": [
        "build-scripts-automation"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Wireshark",
      "homepage": "https://www.wireshark.org/",
      "description": "A network protocol analyzer that can be used to debug streaming video at the packet level. Wireshark supports protocols like RTMP, HLS (HTTP), and MPEG-TS, allowing developers to inspect segment requests, manifest files, and timing to diagnose streaming issues.",
      "tags": [
        "network analysis",
        "protocol debugging",
        "streaming protocols",
        "packet inspection"
      ],
      "categories": [
        "logging-debugging-tools"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "FFmpeg Verbose Logging",
      "homepage": "https://ffmpeg.org/ffmpeg.html#Generic-Options",
      "description": "Using FFmpeg's `-loglevel` and debug options can aid in troubleshooting encoding/decoding issues. Documentation on log levels (quiet, panic, error, info, verbose, debug) and flags (like `-report` to write logs to file) helps developers enable detailed logs to inspect what FFmpeg is doing under the hood when processing media.",
      "tags": [
        "debugging",
        "logging",
        "ffmpeg",
        "media-processing",
        "troubleshooting"
      ],
      "categories": [
        "logging-debugging-tools"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "Terraform AWS Media Services Modules",
      "homepage": "https://registry.terraform.io/modules/terraform-aws-modules/mediaConvert/aws/latest",
      "description": "Terraform modules and examples for deploying AWS MediaConvert and MediaLive as infrastructure-as-code. This helps automate the provisioning of cloud encoding and live streaming resources, demonstrating best practices for treating video pipelines as code.",
      "tags": [
        "cloud",
        "aws",
        "infrastructure-as-code",
        "terraform",
        "media-services",
        "deployment"
      ],
      "categories": [
        "infrastructure-as-code-for-video"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Kubernetes and FFmpeg (Batch Jobs)",
      "homepage": "https://kubernetes.io/blog/2018/07/24/kubernetes-batch-processing-state-of-the-art/",
      "description": "A discussion on using Kubernetes for batch processing like transcoding. It covers how to define Kubernetes Jobs or CronJobs to run FFmpeg transcoding tasks, highlighting the benefits of containerization and orchestration in building scalable video processing infrastructure.",
      "tags": [
        "kubernetes",
        "ffmpeg",
        "batch processing",
        "containerization",
        "video infrastructure"
      ],
      "categories": [
        "infrastructure-as-code-for-video"
      ],
      "category": "cloud-platforms"
    },
    {
      "title": "Common Encryption (CENC) Standard",
      "homepage": "https://www.iso.org/standard/68042.html",
      "description": "The ISO/IEC 23001-7 standard for Common Encryption in ISO base media file format files. CENC allows a single video file to be encrypted once and used with multiple DRM systems (Widevine, PlayReady, etc.) by defining a common encryption scheme and signaling, forming the basis of DRM interoperability in DASH and HLS fMP4.",
      "tags": [
        "encryption",
        "drm",
        "widevine",
        "playready",
        "standards",
        "security"
      ],
      "categories": [
        "drm-content-protection-standards"
      ],
      "category": "drm"
    },
    {
      "title": "W3C Encrypted Media Extensions (EME) Recommendation",
      "homepage": "https://www.w3.org/TR/encrypted-media/",
      "description": "The W3C specification that defines how browsers interact with DRM systems via Content Decryption Modules (CDMs). EME is the web standard that enables JavaScript to access keys for encrypted media, ensuring DRM-protected content can be played in web browsers in a standardized way.",
      "tags": [
        "drm",
        "web standard",
        "specification",
        "browser",
        "content protection"
      ],
      "categories": [
        "drm-content-protection-standards"
      ],
      "category": "specs-standards"
    },
    {
      "title": "CEA-608/708 Closed Captioning Standards",
      "homepage": "https://en.wikipedia.org/wiki/CEA-708",
      "description": "The EIA-608 and EIA-708 standards define how closed captions are encoded in analog and digital television signals in the US. They are crucial for broadcast TV and cable, and understanding these can help when dealing with caption extraction or embedding in video files (e.g., in MPEG-2 or ATSC streams).",
      "tags": [
        "closed captions",
        "EIA-608",
        "EIA-708",
        "broadcast standards",
        "accessibility"
      ],
      "categories": [
        "closed-captioning-subtitling-standards"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "IMSC 1.1 (TTML for subtitles)",
      "homepage": "https://www.w3.org/TR/ttml-imsc1.1/",
      "description": "The W3C IMSC (Internet Media Subtitles and Captions) 1.1 specification defines a profile of TTML (Timed Text Markup Language) for subtitles and captions, used in streaming and broadcasting (like by Netflix, IMF). It's a modern standard for rich text subtitles including styling and positioning.",
      "tags": [
        "subtitles",
        "captions",
        "TTML",
        "W3C",
        "streaming",
        "text rendering"
      ],
      "categories": [
        "closed-captioning-subtitling-standards"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "W3C Media & Entertainment Interest Group",
      "homepage": "https://www.w3.org/blog/news/archives/9075",
      "description": "A World Wide Web Consortium group focused on media and entertainment. It examines use cases and requirements for web technologies in the media industry (like streaming, broadcasting integration, etc.) and often produces recommendations or liaisons with other standards (like W3C for HTML5 media, or CTA WAVE).",
      "tags": [
        "standards",
        "w3c",
        "web-standards",
        "media-technology",
        "streaming-standards"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "standards-industry"
    },
    {
      "title": "Ultra HD Forum Guidelines",
      "homepage": "https://ultrahdforum.org/guidelines/",
      "description": "Industry guidelines produced by the Ultra HD Forum, covering end-to-end workflows for Ultra HD content (4K, HDR, Wide Color Gamut, Next-Gen Audio) including distribution and streaming considerations. These guidelines help ensure interoperability and best practices for advanced video formats in streaming and broadcast.",
      "tags": [
        "standards",
        "4K",
        "HDR",
        "ultra HD",
        "workflow",
        "guidelines",
        "interoperability"
      ],
      "categories": [
        "industry-forums-standards-bodies"
      ],
      "category": "specs-standards"
    },
    {
      "title": "CALM Act (FCC Audio Loudness Rules)",
      "homepage": "https://www.fcc.gov/document/calm-act-guide-industry",
      "description": "The FCC's Commercial Advertisement Loudness Mitigation (CALM) Act requires broadcasters and streaming providers to ensure ads are not louder than the surrounding programming. This industry guide explains compliance for audio loudness, which influences how audio is processed in video streams.",
      "tags": [
        "audio",
        "loudness",
        "regulation",
        "broadcasting",
        "streaming",
        "compliance"
      ],
      "categories": [
        "regulatory-compliance-resources"
      ],
      "category": "media-tools"
    },
    {
      "title": "EU AVMSD Accessibility Requirements",
      "homepage": "https://digital-strategy.ec.europa.eu/en/policies/accessibility-avmsd",
      "description": "The European Union's Audiovisual Media Services Directive (AVMSD) includes requirements for accessibility (subtitles, audio description, sign language) on TV and on-demand services. Resources here outline how video service providers must comply to ensure content is accessible to people with disabilities.",
      "tags": [
        "accessibility",
        "subtitles",
        "audio description",
        "compliance",
        "disability",
        "EU regulations"
      ],
      "categories": [
        "regulatory-compliance-resources"
      ],
      "category": "media-tools"
    },
    {
      "title": "Netflix Timed Text Style Guide (English)",
      "homepage": "https://partnerhelp.netflixstudios.com/hc/en-us/articles/215758617-Timed-Text-Style-Guide-General-Requirements",
      "description": "Netflix's style guide for subtitles and captions outlines the editorial and formatting standards for timed text on their platform. It's a comprehensive resource for best practices in captioning (e.g., line length, timing, speaker labels) that is often referenced industry-wide.",
      "tags": [
        "subtitles",
        "captions",
        "style guide",
        "text formatting",
        "accessibility"
      ],
      "categories": [
        "subtitle-caption-tutorials"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "YouTube Creator Academy \u2013 Captions",
      "homepage": "https://creatoracademy.youtube.com/page/lesson/captions",
      "description": "A tutorial from YouTube's Creator Academy about adding captions and subtitles to videos. It explains how to create, upload, and auto-sync captions on YouTube, highlighting the importance of accessibility and offering tips for quality subtitle contributions.",
      "tags": [
        "tutorial",
        "accessibility",
        "captions",
        "subtitles",
        "youtube",
        "education"
      ],
      "categories": [
        "subtitle-caption-tutorials"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Lightworks",
      "homepage": "https://lwks.com/lightworks/",
      "description": "A professional NLE (non-linear editor) with a free edition. Lightworks has been used in Hollywood and offers multi-track editing, effects, and support for various formats on Windows, Mac, and Linux.",
      "tags": [
        "NLE",
        "video editing",
        "professional software",
        "multi-platform"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Cinelerra GG Infinity",
      "homepage": "https://cinelerra-gg.org/",
      "description": "A robust open source non-linear editor for Linux, derived from the long-running Cinelerra project. Cinelerra GG Infinity offers professional-grade editing, compositing, and audio features for advanced users on Linux.",
      "tags": [
        "linux",
        "video editing",
        "open source",
        "non-linear editor",
        "professional editing"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Avid Media Composer | First",
      "homepage": "https://my.avid.com/get/media-composer-first",
      "description": "Avid's free tier of Media Composer, offering a subset of the professional editing tools for beginners. It's widely used in the film & TV industry, making this entry-level version a resource for learning industry-standard workflows.",
      "tags": [
        "video editing",
        "learning",
        "professional tools",
        "beginner",
        "media composer"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "learning-resources"
    },
    {
      "title": "Blackmagic Fusion",
      "homepage": "https://www.blackmagicdesign.com/products/fusion/",
      "description": "A node-based compositing and visual effects software (with a free version integrated into DaVinci Resolve, and a Studio version). Fusion is used for 2D/3D compositing, motion graphics, and effects in films and TV.",
      "tags": [
        "compositing",
        "visual effects",
        "post-production",
        "motion graphics",
        "software"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Foundry Nuke (Non-commercial)",
      "homepage": "https://www.foundry.com/products/nuke/non-commercial",
      "description": "Nuke is an industry-standard compositing tool. The Non-commercial edition provides free access for learning and personal projects, allowing users to explore Nuke's powerful node-based compositing workflows (with some limitations).",
      "tags": [
        "compositing",
        "video editing",
        "learning",
        "tutorial",
        "non-commercial"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "learning-resources"
    },
    {
      "title": "HitFilm Express",
      "homepage": "https://fxhome.com/product/hitfilm-express",
      "description": "A free video editing and VFX software that combines an editor timeline with a layer-based compositing toolset. HitFilm Express is useful for enthusiasts to create both cuts and visual effects in one package.",
      "tags": [
        "video editing",
        "VFX",
        "compositing",
        "free software",
        "multimedia tool"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "FilmLight Baselight STUDENT",
      "homepage": "https://www.filmlight.ltd.uk/products/editions/student.php",
      "description": "A free license of Baselight (professional color grading software) for learning purposes. Baselight STUDENT offers the core toolset of Baselight for color grading, without output to high-res or collaborative features, letting aspiring colorists practice on industry-grade software.",
      "tags": [
        "color grading",
        "education",
        "software",
        "professional training",
        "post-production"
      ],
      "categories": [
        "color-grading-correction-tools"
      ],
      "category": "learning-resources"
    },
    {
      "title": "3DLUT Creator",
      "homepage": "https://3dlutcreator.com/",
      "description": "A stand-alone software to create and edit 3D LUTs (Look Up Tables) for color grading. It provides a unique interface for manipulating the color response of images and videos, which can then be applied via LUT in other grading software or on monitors.",
      "tags": [
        "color grading",
        "lut",
        "video processing",
        "color correction",
        "post-production"
      ],
      "categories": [
        "color-grading-correction-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "DisplayCAL",
      "homepage": "https://displaycal.net/",
      "description": "An open source display calibration and profiling tool. While not directly a video editing tool, calibrating your monitor using DisplayCAL ensures accurate color representation, which is critical for color correction and grading tasks in video production.",
      "tags": [
        "color-calibration",
        "color-correction",
        "monitor-profiling",
        "video-production-tools"
      ],
      "categories": [
        "color-grading-correction-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Subtitle Workshop XE",
      "homepage": "https://subworkshop.sourceforge.io/",
      "description": "One of the oldest and popular freeware tools for subtitle editing. Subtitle Workshop XE is a modern update that supports a variety of subtitle formats, offering spell check, timing adjustment, and format conversion in a user-friendly environment.",
      "tags": [
        "subtitle",
        "editing",
        "format-conversion",
        "text-processing",
        "media-tool"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "YTT (YouTube Caption) Editor",
      "homepage": "https://github.com/arc298/ytt",
      "description": "A tool to download, edit, and convert YouTube captions (which come in .ytt or .sbv format). Helpful for repurposing auto-generated captions or doing offline editing of YouTube subtitles for re-upload.",
      "tags": [
        "subtitles",
        "captions",
        "editing",
        "youtube",
        "conversion"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "EBU STL Validator",
      "homepage": "https://github.com/IRT-Open-Source/ebu-stl-validator",
      "description": "A tool to validate EBU STL subtitle files (commonly used in broadcast). It checks STL files for compliance with the standard, ensuring subtitles intended for TV meet technical requirements.",
      "tags": [
        "subtitles",
        "validation",
        "broadcast",
        "EBU STL",
        "technical compliance"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "FFmpeg Batch Converter (Windows)",
      "homepage": "https://ffmpeg-batch.sourceforge.io/",
      "description": "A Windows front-end that allows batch processing with FFmpeg. Users can queue up multiple files with presets for conversion or processing, automating repetitive FFmpeg tasks without writing a script.",
      "tags": [
        "batch conversion",
        "windows",
        "automation",
        "video processing",
        "ffmpeg-frontend"
      ],
      "categories": [
        "batch-processing-automation"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "Adobe Media Encoder (AME) Guide",
      "homepage": "https://helpx.adobe.com/media-encoder/user-guide.html",
      "description": "User guide for Adobe Media Encoder, a tool that automates batch transcoding and export from Adobe's video apps. Useful resource for understanding batch encoding settings for various formats and how to optimize output for different platforms.",
      "tags": [
        "transcoding",
        "batch encoding",
        "media encoder",
        "export",
        "video formats"
      ],
      "categories": [
        "batch-processing-automation"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "MediaConch",
      "homepage": "https://mediaarea.net/MediaConch",
      "description": "An open source policy compliance checker for video files (especially in archival). MediaConch can batch-scan a collection of files to ensure they meet format specifications or institutional policies (like checking if files conform to MKV/FFV1 or MOV/ProRes standards).",
      "tags": [
        "compliance",
        "archival",
        "file validation",
        "video format",
        "batch processing"
      ],
      "categories": [
        "batch-processing-automation"
      ],
      "category": "media-tools"
    },
    {
      "title": "Kvazaar HEVC Encoder",
      "homepage": "https://github.com/ultravideo/kvazaar",
      "description": "An open source HEVC encoder developed by Tampere University. Kvazaar is aimed at academic research and ultra HD content encoding, offering a modular codebase for experimentation with HEVC encoding algorithms while achieving competitive performance.",
      "tags": [
        "encoder",
        "codec",
        "research",
        "academic",
        "open-source",
        "ultra-hd"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "hevc"
    },
    {
      "title": "OpenHEVC Decoder",
      "homepage": "https://github.com/OpenHEVC/openHEVC",
      "description": "An open source high-performance HEVC decoder. OpenHEVC was developed to provide a fast HEVC/H.265 software decoding solution and has been integrated into projects like VLC. It supports real-time decoding of 1080p and higher resolutions on typical PC hardware.",
      "tags": [
        "codec",
        "decoder",
        "open-source",
        "h265",
        "video-decoding"
      ],
      "categories": [
        "software-codecs"
      ],
      "category": "hevc"
    },
    {
      "title": "Cisco Thor Video Codec",
      "homepage": "https://tools.ietf.org/html/draft-fuldseth-netvc-thor-00",
      "description": "Thor was an experimental video codec developed by Cisco as a candidate for the NETVC (Next-Gen Video) initiative. While Thor itself is not used as-is, some of its technology contributed to the development of AV1. It's a piece of codec research history with source available for study.",
      "tags": [
        "codec",
        "research",
        "video compression",
        "AV1",
        "experimental"
      ],
      "categories": [
        "next-generation-codecs-av1-vvc"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "XVC Codec (Divideon)",
      "homepage": "https://github.com/divideon/xvc",
      "description": "XVC is a proprietary but openly documented video codec by Divideon that claims high compression efficiency. An open source evaluation implementation was released for research purposes. XVC serves as a modern codec design to compare against standards like HEVC and AV1 in compression efficiency research.",
      "tags": [
        "codec",
        "research",
        "compression",
        "video encoding",
        "open source"
      ],
      "categories": [
        "next-generation-codecs-av1-vvc"
      ],
      "category": "codecs"
    },
    {
      "title": "Daala Codec (Xiph)",
      "homepage": "https://xiph.org/daala/",
      "description": "An experimental video codec from the Xiph.Org Foundation that aimed to achieve next-generation compression (the effort preceded and influenced AV1). Daala introduced novel techniques like lapped transforms and per-pixel entropy coding. Its codebase is open and served as a sandbox for ideas that made it into AV1.",
      "tags": [
        "codec",
        "compression",
        "open-source",
        "experimental",
        "video-encoding"
      ],
      "categories": [
        "next-generation-codecs-av1-vvc"
      ],
      "category": "codecs"
    },
    {
      "title": "flvmeta",
      "homepage": "https://github.com/noirotm/flvmeta",
      "description": "An open source tool to manipulate Adobe FLV files. flvmeta can inject onMetaData tags, fix timestamps, and generally prepare FLV files for optimal playback (seeking). Useful for legacy content or repackaging streams from RTMP to file.",
      "tags": [
        "flv",
        "metadata",
        "file-manipulation",
        "video-tools",
        "rtmp"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Yamdi (Yet Another Metadata Injector)",
      "homepage": "http://yamdi.sourceforge.net/",
      "description": "A simple, fast tool to inject metadata (onMetaData) into FLV files. Yamdi can also insert an onLastSecond event and is often used to prepare live-recorded FLV files for on-demand playback by adding missing metadata for durations and keyframes.",
      "tags": [
        "metadata",
        "FLV",
        "encoding",
        "video processing",
        "file manipulation"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Facebook Live Video at Facebook: A Technical Deep Dive",
      "homepage": "https://engineering.fb.com/video-engineering/live-video/",
      "description": "Facebook Engineering\u2019s article detailing the architecture of Facebook Live. It covers the end-to-end pipeline from the camera to the viewer, including ingestion, transcoding, and edge delivery, and how Facebook scales live video to millions of concurrent viewers with low latency.",
      "tags": [
        "live streaming",
        "architecture",
        "facebook",
        "case study",
        "video infrastructure",
        "scalability"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Transcoding 360 Video at Facebook",
      "homepage": "https://engineering.fb.com/2017/03/14/video-engineering/transcoding-360-video-at-facebook/",
      "description": "A Facebook Engineering blog post about the challenges and solutions for processing 360\u00b0 VR video. It discusses cube map projection, encoding optimizations, and how Facebook re-architected parts of the pipeline to handle the massive data of 360 videos while preserving quality.",
      "tags": [
        "transcoding",
        "360-video",
        "VR",
        "video processing",
        "encoding",
        "cube map projection"
      ],
      "categories": [
        "case-studies-whitepapers"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "AV1 vs HEVC \u2013 Bitmovin Compression Efficiency Results",
      "homepage": "https://bitmovin.com/av1-showing-greater-compression-efficiency-than-hevc/",
      "description": "A Bitmovin blog post that discusses internal testing results comparing AV1 and HEVC encoders. It provides charts and analysis of bitrate savings, encoding speed, and visual quality, contributing practical data to the conversation about next-gen codec adoption.",
      "tags": [
        "codec",
        "compression",
        "AV1",
        "HEVC",
        "bitrate",
        "encoding",
        "comparison"
      ],
      "categories": [
        "video-streaming-tutorials"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "CMAF for Low Latency Streaming \u2013 Bitmovin",
      "homepage": "https://bitmovin.com/cmaf-low-latency.html",
      "description": "A detailed blog explaining how CMAF enables low-latency streaming. Bitmovin covers the technical aspects of chunked CMAF, the changes required in players and CDNs, and results from tests using their encoder and player in low-latency mode.",
      "tags": [
        "CMAF",
        "low-latency",
        "streaming",
        "adaptive bitrate",
        "CDN"
      ],
      "categories": [
        "video-streaming-tutorials"
      ],
      "category": "adaptive-streaming"
    },
    {
      "title": "Per-Title Encoding: 5 Implementation Tips \u2013 Bitmovin",
      "homepage": "https://bitmovin.com/per-title-encoding-5-tips/",
      "description": "A Bitmovin guide that offers practical tips for implementing Per-Title encoding (content adaptive encoding) in a video workflow. It builds on Netflix\u2019s concept but provides advice gleaned from Bitmovin\u2019s own encoder, such as deciding on complexity metrics and fallback conditions.",
      "tags": [
        "encoding",
        "tutorial",
        "adaptive-bitrate",
        "video-optimization"
      ],
      "categories": [
        "encoding-transcoding-guides"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "DaVinci Resolve (Free Edition)",
      "homepage": "https://www.blackmagicdesign.com/products/davinciresolve",
      "description": "A professional cross-platform video editing, color grading, and post-production suite with a free version available.",
      "tags": [
        "video editing",
        "color grading",
        "post-production",
        "free software",
        "professional tool"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Flowplayer",
      "homepage": "https://flowplayer.com/",
      "description": "A lightweight HTML5 video player known for fast performance and plugin support, historically used as an open source web player.",
      "tags": [
        "html5",
        "web player",
        "open source",
        "javascript",
        "video playback"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "JW Player (Free Version)",
      "homepage": "https://www.jwplayer.com/",
      "description": "A popular embeddable web video player with a free tier, originally an open source project, offering HLS and DASH support and extensive customization.",
      "tags": [
        "web player",
        "HTML5",
        "streaming",
        "HLS",
        "DASH",
        "embeddable"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "Media Player Classic - Home Cinema (MPC-HC)",
      "homepage": "https://github.com/clsid2/mpc-hc",
      "description": "A lightweight, open source Windows media player modeled after the classic Windows Media Player 6.4. It supports a wide range of formats with GPU acceleration and subtitle support.",
      "tags": [
        "media player",
        "windows",
        "desktop player",
        "open source",
        "video playback"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "Media Player Classic - Black Edition (MPC-BE)",
      "homepage": "https://sourceforge.net/projects/mpcbe/",
      "description": "A community fork of MPC-HC with additional features and improvements, offering enhanced audio/video playback and a dark-themed interface.",
      "tags": [
        "desktop player",
        "media player",
        "video playback",
        "open source",
        "community fork"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "PotPlayer",
      "homepage": "https://potplayer.daum.net/",
      "description": "A free multimedia player for Windows with extensive format support, advanced features (such as 3D and 360\u00b0 playback), and custom skins.",
      "tags": [
        "desktop player",
        "multimedia",
        "windows",
        "video playback",
        "format support"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "GStreamer",
      "homepage": "https://gstreamer.freedesktop.org/",
      "description": "An open source multimedia framework in C that allows the construction of graphs for media handling (capture, transcoding, playback) on various platforms.",
      "tags": [
        "multimedia",
        "framework",
        "encoding",
        "transcoding",
        "open-source",
        "C"
      ],
      "categories": [
        "video-players-playback-libraries"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "VirtualDub",
      "homepage": "https://www.virtualdub.org/",
      "description": "A classic open source video capture and processing utility for Windows, useful for quick linear operations, filtering, and format conversions on AVI files.",
      "tags": [
        "video processing",
        "windows",
        "avi",
        "open source",
        "encoding"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "OpenShot Video Editor",
      "homepage": "https://www.openshot.org/",
      "description": "An easy-to-use, cross-platform open source video editor. It supports timeline editing, effects, and keyframes for creating videos on Linux, Mac, and Windows.",
      "tags": [
        "video editor",
        "cross-platform",
        "open source",
        "editing",
        "timeline"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Shotcut",
      "homepage": "https://shotcut.org/",
      "description": "A free, open source, cross-platform video editor. It offers a wide format support via FFmpeg, a customizable UI, and a range of video and audio filters.",
      "tags": [
        "video editor",
        "open source",
        "cross-platform",
        "ffmpeg",
        "video processing"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Olive Video Editor",
      "homepage": "https://olivevideoeditor.org/",
      "description": "A next-generation open source non-linear video editor under development aiming for professional features and performance (currently in alpha).",
      "tags": [
        "video editor",
        "open source",
        "non-linear editing",
        "professional editing"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Kdenlive",
      "homepage": "https://kdenlive.org/",
      "description": "A free and open source non-linear video editor for GNU/Linux, Windows, and macOS. It offers multi-track video editing, a wide range of effects, and GPU acceleration.",
      "tags": [
        "video editor",
        "open source",
        "multi-track",
        "gpu acceleration",
        "cross-platform"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Pitivi",
      "homepage": "http://www.pitivi.org/",
      "description": "A free, open source video editor for Linux built on the GStreamer framework, focusing on an intuitive user interface and integration with GNOME.",
      "tags": [
        "linux",
        "open-source",
        "video-editor",
        "gstreamer",
        "gnome"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Blender (Video Sequence Editor)",
      "homepage": "https://www.blender.org/",
      "description": "The video sequence editor within Blender, an open source 3D creation suite. It provides basic cutting, transitions, color grading, and masking on top of Blender\u2019s powerful compositing nodes.",
      "tags": [
        "video editing",
        "open source",
        "compositing",
        "post-production"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "CasparCG",
      "homepage": "http://casparcg.com/",
      "description": "An open source broadcast graphics and video playout server. CasparCG is used to deliver layered videos, images, and templates to professional broadcast environments in real-time.",
      "tags": [
        "broadcast",
        "graphics",
        "playout",
        "real-time",
        "server"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "FFAStrans",
      "homepage": "https://github.com/FFAStrans/FFAStrans",
      "description": "A free workflow automation tool for broadcast and video production, enabling automated transcoding and processing using FFmpeg and other encoders via a user-friendly UI.",
      "tags": [
        "ffmpeg",
        "transcoding",
        "workflow",
        "automation",
        "encoding"
      ],
      "categories": [
        "batch-processing-automation"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "XMedia Recode",
      "homepage": "https://www.xmedia-recode.de/en/",
      "description": "A free Windows tool for converting media files to various formats. It supports a broad array of codecs (built on FFmpeg) and provides fine control over encoding settings.",
      "tags": [
        "ffmpeg",
        "media conversion",
        "encoding",
        "transcoding",
        "windows"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "MKVToolNix",
      "homepage": "https://mkvtoolnix.download/",
      "description": "A set of tools to create, alter, and inspect Matroska (MKV) files. Includes mkvmerge for muxing streams into MKV and mkvinfo/mkvextract for inspecting and extracting content.",
      "tags": [
        "container",
        "muxing",
        "media-manipulation",
        "mkv",
        "video-tools"
      ],
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Bento4",
      "homepage": "https://www.bento4.com/",
      "description": "A C++ library and tools for parsing, modifying, and creating MP4 files. Bento4 includes command-line utilities (mp4encrypt, mp4dash, etc.) for packaging and encrypting media for DASH and HLS.",
      "tags": [
        "mp4",
        "encryption",
        "packaging",
        "dash",
        "hls",
        "media-processing"
      ],
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "LAV Filters",
      "homepage": "https://github.com/Nevcairiel/LAVFilters",
      "description": "An open source set of DirectShow filters based on FFmpeg that allow the playback of virtually any audio/video format on Windows (often used within media players like MPC-HC).",
      "tags": [
        "ffmpeg",
        "directshow",
        "media player",
        "windows",
        "codec",
        "filter"
      ],
      "categories": [
        "video-players-playback-libraries"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "DivFix++",
      "homepage": "https://sourceforge.net/projects/divfixpp/",
      "description": "An open source utility to repair and preview partially downloaded AVI files by rebuilding the index chunk, allowing playback of corrupted or incomplete AVIs.",
      "tags": [
        "file repair",
        "video recovery",
        "AVI",
        "media utility",
        "file indexing"
      ],
      "categories": [
        "repair-recovery-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Meteorite",
      "homepage": "https://sourceforge.net/projects/meteorite/",
      "description": "The first (experimental) open source MKV/Matroska repair tool. Meteorite can attempt to fix corrupted .mkv files or those still downloading, by reconstructing missing or damaged segments.",
      "tags": [
        "repair",
        "mkv",
        "file-recovery",
        "video-repair",
        "open-source"
      ],
      "categories": [
        "repair-recovery-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Academy Color Encoding System (ACES)",
      "homepage": "https://acescentral.com/",
      "description": "A standardized color management and interchange system for motion pictures and television. ACES defines comprehensive workflows for color grading and consistent color reproduction across devices.",
      "tags": [
        "color",
        "color-management",
        "standards",
        "workflow",
        "video-processing"
      ],
      "categories": [
        "standards-specifications-industry-resources"
      ],
      "category": "standards-industry"
    },
    {
      "title": "Xabe.FFmpeg",
      "homepage": "https://github.com/tomaszzmuda/Xabe.FFmpeg",
      "description": "A .NET Standard wrapper for FFmpeg, enabling developers to compose and execute FFmpeg commands in C# with a fluent interface.",
      "tags": [
        "ffmpeg",
        ".NET",
        "encoding",
        "video processing",
        "wrapper",
        "library"
      ],
      "categories": [
        "scripting-automation-tools"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "libaom (AV1 Reference Codec)",
      "homepage": "https://aomedia.googlesource.com/aom/",
      "description": "The reference implementation of the AV1 video codec by the Alliance for Open Media. libaom provides both encoding and decoding capabilities for AV1 streams.",
      "tags": [
        "codec",
        "encoding",
        "open-source",
        "video compression",
        "AV1"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "av1"
    },
    {
      "title": "VVdeC (Fraunhofer VVC Decoder)",
      "homepage": "https://github.com/fraunhoferhhi/vvdec",
      "description": "An open source Versatile Video Coding (H.266/VVC) software decoder by Fraunhofer HHI. VVdeC supports Main10 profile and can decode 4K/8K content in real-time with optimizations.",
      "tags": [
        "VVC",
        "H.266",
        "decoder",
        "codec",
        "4K",
        "8K",
        "real-time"
      ],
      "categories": [
        "software-codecs"
      ],
      "category": "codecs"
    },
    {
      "title": "SJVideoPlayer",
      "homepage": "https://github.com/changsanjiang/SJVideoPlayer",
      "description": "An open source media player library for iOS that provides a customizable player interface. It supports multiple backends (AVPlayer, IJKPlayer, etc.) and features like gesture controls and picture-in-picture.",
      "tags": [
        "iOS",
        "media player",
        "AVPlayer",
        "mobile video",
        "open source",
        "picture-in-picture"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "NymphCast",
      "homepage": "https://github.com/MayaPosch/NymphCast",
      "description": "An open source audio and video casting system (similar to Chromecast) that allows streaming media and running custom applications on a receiver device.",
      "tags": [
        "casting",
        "streaming",
        "open source",
        "media player",
        "receiver device"
      ],
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "players-clients"
    },
    {
      "title": "Chimee",
      "homepage": "https://github.com/Chimeejs/chimee",
      "description": "A web video player framework that provides a plug-in architecture for HTML5 video. Chimee is focused on smooth playback experiences on the browser with support for custom plugins (ads, stats, etc.).",
      "tags": [
        "HTML5",
        "video player",
        "framework",
        "browser",
        "plugin",
        "playback"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "web-players"
    },
    {
      "title": "mpv-android",
      "homepage": "https://github.com/mpv-android/mpv-android",
      "description": "An Android port of the mpv media player. It leverages mpv\u2019s core for high quality video playback on Android devices, supporting hardware decoding and gesture controls.",
      "tags": [
        "mobile",
        "video player",
        "android",
        "media playback",
        "hardware decoding"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "android"
    },
    {
      "title": "streamlit-webrtc",
      "homepage": "https://github.com/whitphx/streamlit-webrtc",
      "description": "A Streamlit component that enables real-time video/audio streams in web apps. It allows building interactive computer vision or conferencing apps by integrating WebRTC with Streamlit.",
      "tags": [
        "webrtc",
        "streamlit",
        "web",
        "real-time",
        "interactive",
        "video-streaming"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "BackgroundRemover",
      "homepage": "https://github.com/nadermx/backgroundremover",
      "description": "An AI-powered command-line tool to remove the background from images and videos. It uses deep learning to perform background removal with a simple interface.",
      "tags": [
        "ai",
        "image-processing",
        "video-processing",
        "background-removal",
        "command-line-tool"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "VideoReTalking",
      "homepage": "https://github.com/OpenTalker/video-retalking",
      "description": "A research project (SIGGRAPH Asia 2022) providing code for audio-driven lip synchronization in talking head videos. It enables realistic re-sync of lip movements to new audio on existing footage.",
      "tags": [
        "AI",
        "video-editing",
        "lip-sync",
        "audio-processing",
        "computer-vision"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "ShortGPT",
      "homepage": "https://github.com/RayVentura/ShortGPT",
      "description": "An experimental AI framework to automate the creation of YouTube Shorts or TikTok videos. ShortGPT can generate video content (scenes, subtitles, etc.) using generative AI models.",
      "tags": [
        "ai",
        "video-generation",
        "automation",
        "content-creation",
        "shorts",
        "tiktok"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Text2Video-Zero",
      "homepage": "https://github.com/Picsart-AI-Research/Text2Video-Zero",
      "description": "An AI model (ICCV 2023) for zero-shot text-to-video generation using image diffusion models. It allows generating short video clips from text prompts without training on video data.",
      "tags": [
        "AI",
        "text-to-video",
        "machine learning",
        "diffusion models",
        "generative AI"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Lux (Media Downloader)",
      "homepage": "https://github.com/iawia002/lux",
      "description": "A command-line media downloader (formerly known as \"annie\") that supports downloading videos and audio from various websites in high quality, similar to youtube-dl but in Go.",
      "tags": [
        "downloader",
        "media-utility",
        "cli-tool",
        "go-lang",
        "video-download"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "Cobalt",
      "homepage": "https://cobalt.tools/",
      "description": "A simple and efficient multi-platform media downloader. Cobalt provides an easy way to download videos and audio from sites like YouTube, Instagram, and TikTok with a clean GUI.",
      "tags": [
        "downloader",
        "media-utility",
        "cross-platform",
        "video-download",
        "audio-download"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "ScreenToGif",
      "homepage": "https://www.screentogif.com/",
      "description": "An open source tool to record a selected screen area, webcam, or whiteboard and export it as an animated GIF or video. It includes basic editing like frame-by-frame editing and text/brush overlays.",
      "tags": [
        "screen recording",
        "gif creation",
        "video editing",
        "screen capture",
        "animation"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "Remotion",
      "homepage": "https://www.remotion.dev/",
      "description": "A framework for creating videos programmatically using React. Developers can use web technologies to render dynamic video content (with animations, data, etc.) and export it as MP4 videos.",
      "tags": [
        "video-generation",
        "react",
        "programmatic-video",
        "web-technology",
        "mp4-export"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "media-tools"
    },
    {
      "title": "GSYVideoPlayer",
      "homepage": "https://github.com/CarGuo/GSYVideoPlayer",
      "description": "An open source video player library for Android, offering multiple playback engines (ExoPlayer, IjkPlayer etc.), gesture controls, and rich features for building video apps.",
      "tags": [
        "android",
        "video player",
        "mobile",
        "playback",
        "ExoPlayer",
        "IjkPlayer"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "android"
    },
    {
      "title": "Anime4K",
      "homepage": "https://github.com/bloc97/Anime4K",
      "description": "A simple high-quality anime upscaling algorithm implemented as shaders. Anime4K can be used with players like mpv to enhance low-resolution anime videos in real-time.",
      "tags": [
        "upscaling",
        "anime",
        "real-time",
        "shader",
        "video-enhancement"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "FreeTube",
      "homepage": "https://freetubeapp.io/",
      "description": "A standalone YouTube client for Windows, macOS, and Linux that is open source and privacy-friendly. FreeTube lets users watch YouTube content without ads or tracking.",
      "tags": [
        "desktop",
        "open-source",
        "privacy",
        "video-player",
        "cross-platform"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "players-clients"
    },
    {
      "title": "VHS (Terminal Recorder)",
      "homepage": "https://github.com/charmbracelet/vhs",
      "description": "A tool for turning terminal sessions into animated GIFs or videos. VHS lets you script terminal interactions and outputs them as recordings, useful for demos and documentation.",
      "tags": [
        "terminal",
        "recording",
        "gif",
        "animation",
        "documentation"
      ],
      "categories": [
        "logging-debugging-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Digital Video Introduction (Guide)",
      "homepage": "https://github.com/leandromoreira/digital_video_introduction",
      "description": "A comprehensive open source guide that introduces digital video concepts (compression, formats, protocols) with simple explanations and examples. Great for learning video fundamentals.",
      "tags": [
        "fundamentals",
        "video concepts",
        "compression",
        "formats",
        "protocols",
        "educational"
      ],
      "categories": [
        "learning-tutorials-documentation"
      ],
      "category": "introduction"
    },
    {
      "title": "ijkplayer",
      "homepage": "https://github.com/bilibili/ijkplayer",
      "description": "An open source cross-platform media player library based on FFmpeg. ijkplayer is widely used on Android and iOS for its stable performance and was originally developed by Bilibili.",
      "tags": [
        "mobile player",
        "FFmpeg",
        "cross-platform",
        "Android",
        "iOS"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "WinFF",
      "homepage": "https://winff.org/",
      "description": "A graphical user interface for FFmpeg that runs on Windows and Linux. WinFF makes it easy to convert multiple media files by providing presets and a batch-processing interface.",
      "tags": [
        "ffmpeg",
        "media conversion",
        "batch processing",
        "cross-platform"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "MLT Framework",
      "homepage": "https://www.mltframework.org/",
      "description": "An open source multimedia framework for video editing applications. MLT provides a toolkit for developers to build editors (used by Kdenlive, Shotcut) with support for a range of effects and transitions.",
      "tags": [
        "video editing",
        "framework",
        "multimedia",
        "open source",
        "development"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "DVBlast",
      "homepage": "https://www.videolan.org/projects/dvblast.html",
      "description": "A simple and powerful MPEG-2/TS demux and streaming application. DVBlast can stream digital TV (DVB) channels over a network, often used for IPTV or SAT-IP solutions.",
      "tags": [
        "streaming",
        "DVB",
        "IPTV",
        "network streaming",
        "transport protocol"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "OpenColorIO",
      "homepage": "https://opencolorio.org/",
      "description": "An open source color management solution geared towards motion picture production. Developed by the Academy Software Foundation, OpenColorIO handles color space conversions and is a core part of VFX/animation workflows.",
      "tags": [
        "color management",
        "vfx",
        "post-production",
        "color grading",
        "academy software foundation"
      ],
      "categories": [
        "color-grading-correction-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "AviSynth+",
      "homepage": "https://avs-plus.net/",
      "description": "An improved version of the classic AviSynth frameserver. AviSynth+ allows video processing and filtering through scripting, enabling complex edits and conversions on Windows with high performance.",
      "tags": [
        "frameserver",
        "video processing",
        "scripting",
        "windows",
        "filtering"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "OpenPose",
      "homepage": "https://github.com/CMU-Perceptual-Computing-Lab/openpose",
      "description": "A real-time multi-person keypoint detection library (for body, face, and hands) by CMU. Often used on video to extract pose information frame-by-frame for animation or analysis.",
      "tags": [
        "computer vision",
        "pose detection",
        "keypoint extraction",
        "machine learning",
        "video analysis"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "DeepFaceLab",
      "homepage": "https://github.com/iperov/DeepFaceLab",
      "description": "The leading software for creating deepfakes. It's an open source toolkit that allows users to swap faces in videos using machine learning, with support for multiple models and GPU acceleration.",
      "tags": [
        "machine-learning",
        "video-editing",
        "deepfake",
        "ai-tools",
        "video-manipulation"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "general-tools"
    },
    {
      "title": "FaceSwap",
      "homepage": "https://github.com/deepfakes/faceswap",
      "description": "An open source deepfake application that provides tools to extract, train, and swap faces in videos. FaceSwap has an active community and supports plugins for different neural network models.",
      "tags": [
        "deepfake",
        "machine-learning",
        "video-editing",
        "neural-networks",
        "face-swapping"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "general-tools"
    },
    {
      "title": "Avatarify",
      "homepage": "https://github.com/alievk/avatarify",
      "description": "A real-time photorealistic avatar substitution tool. Avatarify uses neural networks to map your facial movements onto a target portrait (e.g., on Zoom or Skype) for fun impersonation or puppeteering.",
      "tags": [
        "neural-networks",
        "facial-recognition",
        "avatar-generation",
        "video-manipulation",
        "real-time-processing"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "First Order Motion Model",
      "homepage": "https://github.com/AliaksandrSiarohin/first-order-model",
      "description": "A famous deep learning model for image animation (e.g., making a single portrait image speak or move) by modeling motion as a first order approximation. Often used in one-shot talking head video generation.",
      "tags": [
        "deep learning",
        "image animation",
        "AI",
        "video generation",
        "computer vision",
        "motion modeling"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Wav2Lip",
      "homepage": "https://github.com/Rudrabha/Wav2Lip",
      "description": "An AI model that achieves accurate lip-syncing in videos. Given an input video of a person and a target speech audio, Wav2Lip generates a video where the person's lip movements match the audio perfectly.",
      "tags": [
        "AI",
        "lip-sync",
        "video-processing",
        "machine-learning",
        "audio-video-sync"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Frei0r Plugins",
      "homepage": "https://github.com/dyne/frei0r",
      "description": "A collection of free and simple video effect plugins. Frei0r plugins provide dozens of filters, mixers, and generators that can be used in compatible video editors (like LiVES, Flowblade, Kdenlive).",
      "tags": [
        "video effects",
        "plugins",
        "filters",
        "video editing",
        "open source"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "OpenFX (OFX)",
      "homepage": "https://github.com/AcademySoftwareFoundation/openfx",
      "description": "An open standard for visual effects plugins, widely supported in compositing software. It defines a C API for writing plugins (e.g., for Nuke, Natron) that perform image and video processing tasks.",
      "tags": [
        "plugins",
        "visual effects",
        "image processing",
        "video processing",
        "compositing"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "RepairTools (AVI & MKV)",
      "homepage": "https://github.com/fifonik/RepairTools",
      "description": "A set of open source tools aimed at repairing broken AVI and Matroska (MKV) files by fixing indexes and recovering playable content from corrupted media files.",
      "tags": [
        "repair",
        "video-recovery",
        "file-repair",
        "media-tools",
        "AVI",
        "MKV"
      ],
      "categories": [
        "repair-recovery-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "GPAC",
      "homepage": "https://github.com/gpac/gpac",
      "description": "An open source multimedia framework focused on packaging, streaming, and playback. GPAC includes the MP4Box tool for MP4 manipulations and supports ISOBMFF, DASH, VR, and more.",
      "tags": [
        "multimedia",
        "packaging",
        "streaming",
        "MP4",
        "DASH",
        "ISOBMFF",
        "VR"
      ],
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Libav",
      "homepage": "https://libav.org/",
      "description": "A fork of the FFmpeg project that started in 2011 to develop a cleaner codebase. Libav provides similar functionality to FFmpeg (libraries for decoding/encoding and avconv tool) though it's now largely inactive.",
      "tags": [
        "ffmpeg",
        "library",
        "encoding",
        "decoding",
        "video processing"
      ],
      "categories": [
        "legacy-obsolete-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Open Broadcast Encoder (OBE)",
      "homepage": "https://github.com/obecast/obe-rt",
      "description": "A real-time video encoder designed for broadcast use-cases. OBE can ingest SDI or IP video sources and encode them to MPEG-TS streams (MPEG-2, H.264, etc.) with low latency for contribution feeds.",
      "tags": [
        "encoder",
        "broadcast",
        "real-time",
        "SDI",
        "IP",
        "MPEG-TS",
        "low-latency"
      ],
      "categories": [
        "real-time-encoding-solutions"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "InfraRecorder",
      "homepage": "http://infrarecorder.org/",
      "description": "An open source DVD burning tool that, among other features, can be used to author basic video DVDs (it includes support for creating video DVD file systems from video files).",
      "tags": [
        "dvd",
        "burning",
        "authoring",
        "video-tools",
        "file-system"
      ],
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Stb-tester",
      "homepage": "https://github.com/stb-tester/stb-tester",
      "description": "An automation tool for testing set-top boxes and video devices. stb-tester uses a Raspberry Pi with a capture card to run automated tests (via video analysis and remote control input) on HDMI outputs.",
      "tags": [
        "testing",
        "automation",
        "video-analysis",
        "quality-assurance",
        "set-top-box",
        "raspberry-pi"
      ],
      "categories": [
        "logging-debugging-tools"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Vrecord",
      "homepage": "https://github.com/amiaopensource/vrecord",
      "description": "An open source tool for capturing analog video (VHS, Beta, etc.) to digital formats using Blackmagic or AJA capture cards. Vrecord provides a scriptable FFmpeg-based workflow for archivists with features like live histogram and QA metrics.",
      "tags": [
        "ffmpeg",
        "video-capture",
        "archival",
        "analog-to-digital",
        "preservation"
      ],
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "RawCooked",
      "homepage": "https://mediaarea.net/RawCooked",
      "description": "A tool that wraps video, audio, and data files (like DPX sequences or WAV) into a Matroska container without loss. Often used in digital archiving to store large raw content more efficiently while preserving all data for exact restoration.",
      "tags": [
        "archiving",
        "container",
        "preservation",
        "matroska",
        "raw-video"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Internet Friendly Media Encoder (IFME)",
      "homepage": "https://github.com/Anime4000/IFME",
      "description": "A cross-platform GUI front-end for x265, x264, and VP9 encoders. IFME makes it easy to batch encode videos with advanced compression (HEVC) settings, including support for plugins and multiple audio streams.",
      "tags": [
        "encoder",
        "video compression",
        "batch encoding",
        "HEVC",
        "GUI tool"
      ],
      "categories": [
        "ffmpeg-based-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "libde265",
      "homepage": "https://github.com/strukturag/libde265",
      "description": "An open source H.265/HEVC video decoder written in C. libde265 can be used to decode HEVC bitstreams in software and is often integrated into players or frameworks needing HEVC support.",
      "tags": [
        "hevc",
        "decoder",
        "codec",
        "open-source",
        "video-decoding"
      ],
      "categories": [
        "software-codecs"
      ],
      "category": "codecs"
    },
    {
      "title": "BBC Dirac (SMPTE VC-2)",
      "homepage": "https://github.com/bbc/dirac-research",
      "description": "Dirac is an open and royalty-free video compression format developed by the BBC, later standardized as SMPTE VC-2. It uses wavelet compression; open implementations include Schr\u00f6dinger for encoding/decoding Dirac streams.",
      "tags": [
        "codec",
        "compression",
        "open-source",
        "wavelet",
        "BBC",
        "SMPTE"
      ],
      "categories": [
        "legacy-obsolete-tools"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "MPlayer",
      "homepage": "http://www.mplayerhq.hu/",
      "description": "One of the original open source media players for UNIX-like systems, known for its wide codec support and command-line interface. MPlayer can play virtually any format and was the basis for mpv and many other players.",
      "tags": [
        "open-source",
        "media-player",
        "unix",
        "codec-support",
        "command-line"
      ],
      "categories": [
        "legacy-obsolete-tools"
      ],
      "category": "players-clients"
    },
    {
      "title": "Auto-Editor",
      "homepage": "https://github.com/WyattBlue/auto-editor",
      "description": "A command-line application that automatically edits video by removing silence, jump cuts, and more. Auto-Editor processes videos using audio/visual heuristics to create a faster-paced result without manual editing.",
      "tags": [
        "video editing",
        "automation",
        "command-line",
        "video processing",
        "ffmpeg"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "YouTube-DL",
      "homepage": "https://ytdl-org.github.io/youtube-dl/",
      "description": "The classic command-line program for downloading videos from YouTube and hundreds of other sites. youtube-dl is open source and supports extracting audio, selecting formats, and many customization options.",
      "tags": [
        "download",
        "video",
        "extraction",
        "command-line",
        "open-source"
      ],
      "categories": [
        "legacy-obsolete-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "PeerTube",
      "homepage": "https://joinpeertube.org/",
      "description": "A decentralized, federated video sharing platform powered by ActivityPub and BitTorrent. PeerTube allows anyone to host their own video service while interconnected with other PeerTube instances for discovery.",
      "tags": [
        "decentralized",
        "federation",
        "video hosting",
        "peer-to-peer",
        "bitTorrent",
        "ActivityPub"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Kodi (XBMC)",
      "homepage": "https://kodi.tv/",
      "description": "A free and open source media center software for playing videos, music, and more. Kodi runs on multiple platforms (TVs, computers) and supports add-ons for streaming services, local library management, and live TV.",
      "tags": [
        "media center",
        "cross-platform",
        "video player",
        "open source",
        "streaming"
      ],
      "categories": [
        "set-top-box-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "Janus WebRTC Server",
      "homepage": "https://janus.conf.meetecho.com/",
      "description": "An open source, general-purpose WebRTC server (SFU and gateway). Janus is modular and can support video conferencing, streaming, and SIP/RTSP/WebRTC interop through its plugin architecture.",
      "tags": [
        "WebRTC",
        "server",
        "SFU",
        "gateway",
        "video conferencing",
        "streaming"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "MediaCMS",
      "homepage": "https://mediacms.io/",
      "description": "An open source video sharing content management system built with Django. MediaCMS lets you create a YouTube-like site with features for uploading, encoding (via Celery/FFmpeg), and managing video content.",
      "tags": [
        "cms",
        "django",
        "video-hosting",
        "content-management",
        "ffmpeg",
        "celery"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Syncplay",
      "homepage": "https://syncplay.pl/",
      "description": "A tool that synchronizes media playback across multiple computers over the internet. Syncplay allows friends to watch the same video file or stream in lockstep with a shared experience (works with MPC-HC, mpv, VLC).",
      "tags": [
        "synchronization",
        "media-playback",
        "collaborative-viewing",
        "video-sharing"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "media-tools"
    },
    {
      "title": "Aegisub",
      "homepage": "http://www.aegisub.org/",
      "description": "A free, open source cross-platform subtitle editor. It supports advanced typesetting (ASS format), timing, and translation workflows for creating and editing subtitles with frame accuracy.",
      "tags": [
        "subtitle",
        "editor",
        "localization",
        "translation",
        "ASS format"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions"
    },
    {
      "title": "Subtitle Edit",
      "homepage": "https://github.com/SubtitleEdit/subtitleedit",
      "description": "A powerful subtitle editor for Windows capable of reading, writing, and converting between 200+ subtitle formats. It provides waveform views for timing, spell-check, auto-translate via APIs, and more.",
      "tags": [
        "subtitles",
        "editing",
        "conversion",
        "text-processing",
        "video-tools"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Shaka Packager",
      "homepage": "https://github.com/google/shaka-packager",
      "description": "A media packaging tool by Google for DASH and HLS. It can take encoded media and produce encrypted or unencrypted segments and manifests. Supports Widevine, PlayReady, and FairPlay DRM packaging (CENC).",
      "tags": [
        "packaging",
        "DRM",
        "DASH",
        "HLS",
        "encryption",
        "manifest",
        "Google"
      ],
      "categories": [
        "encryption-drm-for-adaptive-streaming"
      ],
      "category": "media-tools"
    },
    {
      "title": "FFmpeg.wasm",
      "homepage": "https://github.com/ffmpegwasm/ffmpeg.wasm",
      "description": "A pure WebAssembly port of FFmpeg that enables video and audio processing directly in the browser. It provides an API to run FFmpeg commands for transcoding or editing media on the web.",
      "tags": [
        "ffmpeg",
        "webassembly",
        "encoding",
        "browser",
        "video-processing",
        "transcoding"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Open Broadcaster Software (OBS Studio)",
      "homepage": "https://obsproject.com/",
      "description": "A free and open source software for video recording and live streaming. OBS Studio is extensible with plugins and supports various sources (screen, cameras, capture cards) and streaming platforms out of the box.",
      "tags": [
        "streaming",
        "recording",
        "screen capture",
        "live streaming",
        "video production"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "media-tools"
    },
    {
      "title": "x264",
      "homepage": "https://code.videolan.org/videolan/x264",
      "description": "A highly optimized open source H.264/AVC encoder implementation. x264 is known for its excellent quality and performance across many profiles and is used in many transcoding tools.",
      "tags": [
        "encoder",
        "h264",
        "video compression",
        "open source",
        "transcoding"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "x265",
      "homepage": "https://x265.org/",
      "description": "An open source HEVC/H.265 video encoder, offering high efficiency compression. x265 is widely used to create HEVC content and provides many tuning options for quality, speed, and latency.",
      "tags": [
        "encoder",
        "HEVC",
        "H.265",
        "compression",
        "video encoding"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "SVT-HEVC",
      "homepage": "https://github.com/OpenVisualCloud/SVT-HEVC",
      "description": "An open source high-performance HEVC encoder from Intel (Scalable Video Technology for HEVC). SVT-HEVC is optimized for speed and latency, allowing real-time encoding of HD/UHD content on multi-core CPUs.",
      "tags": [
        "codec",
        "encoder",
        "intel",
        "high-performance",
        "real-time",
        "multi-core"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "hevc"
    },
    {
      "title": "SVT-VP9",
      "homepage": "https://github.com/OpenVisualCloud/SVT-VP9",
      "description": "Intel's Scalable Video Technology implementation of the VP9 codec. SVT-VP9 is an open source VP9 encoder/decoder designed to leverage multi-core processors for faster encoding of VP9 videos.",
      "tags": [
        "codec",
        "encoder",
        "decoder",
        "open source",
        "intel",
        "multi-core",
        "video compression"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "vp9"
    },
    {
      "title": "FFmpeg AutoGen (C#)",
      "homepage": "https://github.com/Ruslan-B/FFmpeg.AutoGen",
      "description": "A set of auto-generated P/Invoke bindings for FFmpeg libraries. FFmpeg.AutoGen allows .NET developers to directly use FFmpeg's C API in C# for advanced media processing tasks.",
      "tags": [
        "ffmpeg",
        "c-sharp",
        "video-processing",
        "library",
        "bindings"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "Flowblade",
      "homepage": "https://github.com/jliljebl/flowblade",
      "description": "A multitrack non-linear video editor for Linux using MLT. Flowblade offers a stable editing experience with tools for trimming, transitions, title, and filters while integrating well with the GNOME desktop.",
      "tags": [
        "linux",
        "video editor",
        "MLT",
        "non-linear editing",
        "open source"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "LiVES",
      "homepage": "https://lives-video.com/",
      "description": "A hybrid video editor and VJ tool for Linux. LiVES allows both timeline editing of video and real-time performance (mixing clips and applying effects live), making it unique for video artists.",
      "tags": [
        "video editor",
        "linux",
        "live performance",
        "video mixing",
        "effects"
      ],
      "categories": [
        "non-linear-editing-suites"
      ],
      "category": "media-tools"
    },
    {
      "title": "Celluloid (GNOME MPV)",
      "homepage": "https://github.com/celluloid-player/celluloid",
      "description": "A simple GTK+ frontend for the mpv player (formerly GNOME MPV). Celluloid provides a lightweight graphical interface to mpv on Linux, integrating features like playlists and settings into a GNOME-friendly UI.",
      "tags": [
        "open-source",
        "linux",
        "media-player",
        "gtk",
        "desktop-application"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "FfmpegGUI (ffWorks)",
      "homepage": "https://www.ffworks.net/",
      "description": "A macOS graphical front-end to FFmpeg (commercially known as ffWorks). It simplifies complex FFmpeg operations with a drag-and-drop interface and preset configurations, while harnessing FFmpeg\u2019s full power under the hood.",
      "tags": [
        "ffmpeg",
        "gui",
        "video encoding",
        "macOS",
        "tool"
      ],
      "categories": [
        "ffmpeg-based-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "SimpleVideoCutter",
      "homepage": "https://github.com/bartekmotyl/simple-video-cutter",
      "description": "A straightforward Windows tool for browsing and cutting segments from video files without re-encoding. It provides a preview and easy selection of in/out points to extract clips quickly.",
      "tags": [
        "video cutting",
        "windows tool",
        "clip extraction",
        "no re-encoding"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "VidCutter",
      "homepage": "https://github.com/ozmartian/vidcutter",
      "description": "An open source cross-platform tool for fast video trimming and joining. VidCutter focuses on doing simple cuts without re-encoding, using intelligent scene detection and supporting many formats via FFmpeg.",
      "tags": [
        "ffmpeg",
        "video-editing",
        "cross-platform",
        "trimming",
        "scene-detection"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "MystiQ Video Converter",
      "homepage": "https://github.com/swl-x/MystiQ",
      "description": "A cross-platform FFmpeg GUI for converting audio and video. MystiQ offers an intuitive interface, preset profiles for common formats (MP4, WEBM, MP3, etc.), and options for advanced users to tweak encoding parameters.",
      "tags": [
        "ffmpeg",
        "video converter",
        "cross-platform",
        "encoding",
        "transcoding"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Selene Media Encoder",
      "homepage": "https://github.com/teejee2008/selene",
      "description": "A minimalistic audio/video converter for Linux. Selene provides a simple GUI to convert media files to formats like MP4, MKV, OGG, with support for latest codecs (H.264, H.265, VP9) and basic editing (trim, crop).",
      "tags": [
        "linux",
        "media converter",
        "video encoding",
        "codec support",
        "GUI tool"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Open Broadcast Systems' OBS Studio Fork",
      "homepage": "https://github.com/obsproject/obs-studio",
      "description": "A highly modified fork of OBS tailored for broadcast. This variant integrates professional features like NDI, SDI output, and multi-channel audio for use in live television production environments.",
      "tags": [
        "broadcasting",
        "streaming",
        "video-production",
        "live-streaming",
        "audio-processing"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "media-tools"
    },
    {
      "title": "MediaArea Tools (MediaInfo, etc.)",
      "homepage": "https://mediaarea.net/",
      "description": "MediaArea produces open source software for media analysis, including MediaInfo (displays technical and tag data for files), MediaConch (policy compliance for archival video), and BWF MetaEdit (for WAV metadata).",
      "tags": [
        "metadata",
        "analysis",
        "file-inspection",
        "archival",
        "WAV",
        "media-info"
      ],
      "categories": [
        "metadata-extraction-management"
      ],
      "category": "media-tools"
    },
    {
      "title": "OpenShot Library (libopenshot)",
      "homepage": "https://github.com/OpenShot/libopenshot",
      "description": "The C++ library behind OpenShot Video Editor that provides core video editing functionalities (timeline, effects, keyframes). libopenshot can be used independently to build custom video editing applications.",
      "tags": [
        "video editing",
        "library",
        "C++",
        "open source",
        "video processing"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "PySceneDetect",
      "homepage": "https://github.com/Breakthrough/PySceneDetect",
      "description": "An open source Python tool for automated scene cut detection in videos. PySceneDetect can split video content into scenes by detecting cuts, fades, and transitions using metrics like content change or black frame detection.",
      "tags": [
        "scene detection",
        "video processing",
        "python",
        "automation",
        "content analysis"
      ],
      "categories": [
        "scene-detection-segmentation"
      ],
      "category": "media-tools"
    },
    {
      "title": "LosslessCut",
      "homepage": "https://github.com/mifi/lossless-cut",
      "description": "A cross-platform GUI tool for lossless trimming and cutting of videos. It uses FFmpeg to cut video segments without re-encoding, ensuring no quality loss and lightning-fast operation, ideal for slicing large recordings.",
      "tags": [
        "ffmpeg",
        "video-editing",
        "lossless-cutting",
        "cross-platform"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Kodi Add-ons (PVR IPTV Simple Client)",
      "homepage": "https://kodi.tv/addons",
      "description": "An example official Kodi add-on that allows playing live TV streams via IPTV. Kodi's rich add-on ecosystem includes clients for various streaming protocols, enabling Kodi to serve as a full-fledged PVR.",
      "tags": [
        "media player",
        "IPTV",
        "streaming client",
        "open source"
      ],
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "players-clients"
    },
    {
      "title": "ExoPlayer",
      "homepage": "https://exoplayer.dev/",
      "description": "An open source, application-level media player for Android by Google. ExoPlayer provides an easy way to play adaptive streaming content (DASH, HLS, SmoothStreaming) with features like DRM support and custom renderers.",
      "tags": [
        "android",
        "mobile",
        "media-player",
        "streaming",
        "adaptive-streaming",
        "DRM"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "android"
    },
    {
      "title": "FFmpeg CLI (ffmpeg)",
      "homepage": "https://ffmpeg.org/",
      "description": "The ubiquitous open source command-line tool for video/audio processing. FFmpeg can record, convert, and stream digital media in numerous formats, powered by its libav* suite of libraries.",
      "tags": [
        "cli",
        "video-processing",
        "encoding",
        "open-source",
        "multimedia"
      ],
      "categories": [
        "video-editing-processing-tools"
      ],
      "category": "ffmpeg"
    },
    {
      "title": "Matroska Specification",
      "homepage": "https://www.matroska.org/",
      "description": "The open specification for the Matroska multimedia container, which is the basis for MKV files. It defines how video, audio, subtitle, and metadata tracks are stored in a single file and is fully open and extensible.",
      "tags": [
        "container",
        "specification",
        "mkv",
        "multimedia",
        "file format"
      ],
      "categories": [
        "standards-specifications-industry-resources"
      ],
      "category": "specs-standards"
    },
    {
      "title": "YouPHPTube (AVideo)",
      "homepage": "https://github.com/WWBN/AVideo",
      "description": "An open source, self-hosted video sharing website platform (formerly YouPHPTube). It supports user accounts, video uploads, streaming, and plugins for features like live broadcasting and advertisement.",
      "tags": [
        "video platform",
        "self-hosted",
        "streaming server",
        "video hosting"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Opencast",
      "homepage": "https://opencast.org/",
      "description": "An open source lecture capture and video management system. Opencast allows universities and organizations to schedule recordings of lectures, process the videos (including multi-source), and distribute them to students.",
      "tags": [
        "lecture capture",
        "video management",
        "education",
        "content distribution",
        "multi-source recording"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "media-tools"
    },
    {
      "title": "Ant Media Server (Community Edition)",
      "homepage": "https://github.com/ant-media/Ant-Media-Server",
      "description": "A streaming engine focused on ultra-low latency WebRTC and RTMP streams. The Community Edition of Ant Media Server is open source and supports features like one-to-many WebRTC broadcasting and HLS/DASH output.",
      "tags": [
        "streaming",
        "server",
        "WebRTC",
        "RTMP",
        "open-source",
        "low-latency"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "video-react",
      "homepage": "https://github.com/video-react/video-react",
      "description": "A web video player built for the HTML5 world using React.",
      "tags": [
        "react",
        "html5",
        "web",
        "player",
        "javascript"
      ],
      "categories": [
        "frameworks-ui-components"
      ],
      "category": "web-players"
    },
    {
      "title": "SponsorBlock",
      "homepage": "https://github.com/ajayyy/SponsorBlock",
      "description": "An open source browser extension to skip sponsor segments in YouTube videos.",
      "tags": [
        "browser-extension",
        "youtube",
        "video-utility",
        "content-filtering"
      ],
      "categories": [
        "browser-extensions"
      ],
      "category": "media-tools"
    },
    {
      "title": "Enhancer for YouTube",
      "homepage": "https://www.mrfdev.com/enhancer-for-youtube",
      "description": "A browser extension that adds a variety of features to enhance the YouTube watching experience (ad control, playback speed, themes, etc.).",
      "tags": [
        "browser-extension",
        "video-enhancement",
        "playback-control",
        "web-player"
      ],
      "categories": [
        "browser-extensions"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "Jellyfin",
      "homepage": "https://jellyfin.org/",
      "description": "An open source media server and client solution, providing streaming of video (and other media) to a variety of devices as a self-hosted alternative to Plex.",
      "tags": [
        "media server",
        "self-hosted",
        "streaming",
        "open source",
        "video hosting"
      ],
      "categories": [
        "cross-platform-media-tools"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "Plex",
      "homepage": "https://www.plex.tv/",
      "description": "A popular media server and client platform for organizing and streaming personal video (and other media) collections across devices.",
      "tags": [
        "media server",
        "streaming",
        "personal media",
        "cross-platform",
        "media organization"
      ],
      "categories": [
        "cross-platform-media-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "LFLiveKit",
      "homepage": "https://github.com/LaiFengiOS/LFLiveKit",
      "description": "An open source iOS live streaming framework that supports RTMP broadcasting with H.264 (GPU) and AAC encoding.",
      "tags": [
        "iOS",
        "live streaming",
        "RTMP",
        "mobile",
        "broadcasting",
        "H.264",
        "AAC"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "MobilePlayer",
      "homepage": "https://github.com/mobileplayer/mobileplayer-ios",
      "description": "A powerful and completely customizable media player for iOS, with playback controls and easy integration.",
      "tags": [
        "mobile",
        "iOS",
        "media player",
        "playback",
        "custom controls"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "MHVideoPhotoGallery",
      "homepage": "https://github.com/mariohahn/MHVideoPhotoGallery",
      "description": "An iOS Photo and Video Gallery component that supports playing videos and viewing photos in a gallery interface.",
      "tags": [
        "mobile",
        "ios",
        "gallery",
        "video-player",
        "photo-viewer"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "piemonte/Player",
      "homepage": "https://github.com/piemonte/Player",
      "description": "A simple iOS video player library written in Swift, used to play and stream media with customizable UI.",
      "tags": [
        "swift",
        "ios",
        "video player",
        "mobile",
        "streaming"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "Swift-YouTube-Player",
      "homepage": "https://github.com/gilesvangruisen/Swift-YouTube-Player",
      "description": "A Swift library for embedding and controlling YouTube videos in iOS applications via a WKWebView.",
      "tags": [
        "iOS",
        "Swift",
        "video player",
        "WKWebView",
        "mobile development"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "VersaPlayer",
      "homepage": "https://github.com/josejuanqm/VersaPlayer",
      "description": "A versatile video player for iOS, macOS, and tvOS, built on AVPlayer with support for customization and plugins.",
      "tags": [
        "video player",
        "iOS",
        "macOS",
        "tvOS",
        "AVPlayer",
        "mobile player"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "PryntTrimmerView",
      "homepage": "https://github.com/HHK1/PryntTrimmerView",
      "description": "An iOS UI component that provides a video trimming interface, allowing users to select and cut segments of a video with a visual timeline.",
      "tags": [
        "iOS",
        "video editing",
        "UI component",
        "mobile development",
        "video trimming"
      ],
      "categories": [
        "trimming-cutting-tools"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "CTVideoPlayerView",
      "homepage": "https://github.com/ChiliLabs/CTVideoPlayerView",
      "description": "An Objective-C video player view for iOS based on AVFoundation, allowing multiple video playback instances and customization of controls and covers.",
      "tags": [
        "iOS",
        "video player",
        "AVFoundation",
        "mobile",
        "objective-c"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "Periscope VideoViewController",
      "homepage": "https://github.com/gontovnik/Periscope-VideoViewController",
      "description": "An iOS video view controller that mimics Periscope's fast rewind control for quick scrubbing through video playback.",
      "tags": [
        "iOS",
        "video player",
        "mobile development",
        "user interface",
        "video scrubbing"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "Vimeo PlayerKit",
      "homepage": "https://github.com/vimeo/PlayerKit",
      "description": "An open source iOS video player framework by Vimeo for easily integrating Vimeo videos and playback functionalities into apps.",
      "tags": [
        "iOS",
        "mobile",
        "video player",
        "framework",
        "Vimeo",
        "SDK"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "ios-tvos"
    },
    {
      "title": "SMPlayer",
      "homepage": "https://smplayer.sourceforge.io/",
      "description": "A free, open source media player for Windows and Linux with built-in codecs. SMPlayer provides a graphical front-end for MPlayer and MPV, including features like subtitles and playback speed control.",
      "tags": [
        "media player",
        "open source",
        "desktop application",
        "video playback"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "mpv.net",
      "homepage": "https://github.com/stax76/mpv.net",
      "description": "A modern Windows user interface for the mpv media player, adding a GUI and settings dialog to the powerful mpv core.",
      "tags": [
        "media player",
        "windows",
        "gui",
        "open source",
        "video playback"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "IINA",
      "homepage": "https://iina.io/",
      "description": "A modern, open source macOS media player built on mpv. IINA features a sleek UI, gesture support, and wide format compatibility.",
      "tags": [
        "media player",
        "macOS",
        "open source",
        "mpv",
        "video playback"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "MediaElement.js",
      "homepage": "https://github.com/mediaelement/mediaelement",
      "description": "A JavaScript library that provides a consistent HTML5 video and audio player UI across all major browsers, with support for fallback to Flash when needed.",
      "tags": [
        "HTML5",
        "JavaScript",
        "video player",
        "cross-browser",
        "web player"
      ],
      "categories": [
        "web-players"
      ],
      "category": "web-players"
    },
    {
      "title": "ClipBucket",
      "homepage": "https://github.com/arslancb/clipbucket",
      "description": "An open source video sharing platform (YouTube-like) allowing users to upload, manage, and stream video content on their own server.",
      "tags": [
        "video platform",
        "self-hosted",
        "streaming server",
        "video hosting"
      ],
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "GNU MediaGoblin",
      "homepage": "https://mediagoblin.org/",
      "description": "A decentralized, federated media hosting platform supporting video, images, and audio. MediaGoblin allows users to run their own instances for sharing media content.",
      "tags": [
        "media hosting",
        "decentralized",
        "federation",
        "open source",
        "content sharing"
      ],
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "media-tools"
    },
    {
      "title": "Shutter Encoder",
      "homepage": "https://www.shutterencoder.com/",
      "description": "A free, cross-platform video and audio converter that uses FFmpeg behind the scenes. Shutter Encoder offers a user-friendly GUI with presets and advanced options.",
      "tags": [
        "ffmpeg",
        "converter",
        "video-encoding",
        "cross-platform",
        "gui"
      ],
      "categories": [
        "ffmpeg-based-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Xuggler",
      "homepage": "https://github.com/artclarke/xuggle-xuggler",
      "description": "An open source Java library (now discontinued) that wrapped FFmpeg functionality, enabling Java developers to decode, encode, and stream video.",
      "tags": [
        "java",
        "ffmpeg",
        "encoding",
        "library",
        "video processing"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "JCodec",
      "homepage": "https://github.com/jcodec/jcodec",
      "description": "A pure Java library for video and audio codecs, including support for H.264 and AAC decoding, aimed at processing media without native dependencies.",
      "tags": [
        "codec",
        "java",
        "h264",
        "aac",
        "decoding",
        "library"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "VidCoder",
      "homepage": "https://github.com/RandomEngy/VidCoder",
      "description": "An open source Windows application for converting and ripping video files and DVDs/Blu-rays, built on the HandBrake engine with an enhanced user interface.",
      "tags": [
        "video conversion",
        "encoding",
        "windows",
        "handbrake",
        "dvd",
        "blu-ray"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "TalbotGooday/Android-Oembed-Video",
      "homepage": "https://github.com/TalbotGooday/Android-Oembed-Video",
      "description": "An Android library for parsing and playing video links (YouTube, Vimeo, etc.) within a WebView without requiring official APIs, using oEmbed.",
      "tags": [
        "android",
        "mobile",
        "webview",
        "video-player",
        "oembed"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "MarcinMoskala/VideoPlayView",
      "homepage": "https://github.com/MarcinMoskala/VideoPlayView",
      "description": "A custom Android view that integrates a video player with a loader and placeholder image, enabling quick embedding of video playback in Android apps.",
      "tags": [
        "mobile",
        "android",
        "video-player",
        "custom-view",
        "playback"
      ],
      "categories": [
        "mobile-players"
      ],
      "category": "android"
    },
    {
      "title": "kibotu/Android-FFmpeg-Transcoder",
      "homepage": "https://github.com/kibotu/Android-FFmpeg-Transcoder",
      "description": "An Android library for performing video transcoding on-device, leveraging FFmpeg (or MediaCodec) to extract frames or encode videos on Android.",
      "tags": [
        "ffmpeg",
        "android",
        "transcoding",
        "mobile",
        "video-encoding"
      ],
      "categories": [
        "video-encoding-transcoding-packaging-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "Able Player",
      "homepage": "https://ableplayer.github.io/ableplayer",
      "description": "A fully accessible, cross-browser HTML5 media player library that supports captions, audio descriptions, and sign language tracks, designed to be inclusive for users with disabilities.",
      "tags": [
        "accessibility",
        "HTML5",
        "media player",
        "web",
        "captions",
        "inclusive design"
      ],
      "categories": [
        "web-players"
      ],
      "category": "mobile-web-players"
    },
    {
      "title": "Pion WebRTC",
      "homepage": "https://github.com/pion/webrtc",
      "description": "A pure Go implementation of the WebRTC protocol, enabling developers to build real-time video (and audio) streaming applications without external dependencies.",
      "tags": [
        "webrtc",
        "real-time",
        "streaming",
        "transport",
        "go",
        "protocol"
      ],
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport"
    },
    {
      "title": "aler9/rtsp-simple-server",
      "homepage": "https://github.com/aler9/rtsp-simple-server",
      "description": "A simple, ready-to-use RTSP streaming server written in Go. It supports publishing and reading streams via RTSP and can also re-distribute via other protocols.",
      "tags": [
        "rtsp",
        "go",
        "server",
        "streaming",
        "protocol"
      ],
      "categories": [
        "rtmprtsphttp-protocol-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "gstreamer-rs",
      "homepage": "https://github.com/sdroege/gstreamer-rs",
      "description": "Rust language bindings for the GStreamer multimedia framework, allowing developers to create GStreamer pipelines and plugins in Rust.",
      "tags": [
        "rust",
        "gstreamer",
        "multimedia",
        "encoding",
        "framework",
        "plugin"
      ],
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "youtube-upload",
      "homepage": "https://github.com/tokland/youtube-upload",
      "description": "A command-line Python script that uploads videos to YouTube using the YouTube Data API, facilitating automated or batch uploads.",
      "tags": [
        "python",
        "youtube",
        "api",
        "upload",
        "automation",
        "tutorial"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Open Video Downloader (youtube-dl GUI)",
      "homepage": "https://github.com/jely2002/youtube-dl-gui",
      "description": "A cross-platform GUI for youtube-dl/yt-dlp that makes it easy to download videos from YouTube and other platforms without using the command line.",
      "tags": [
        "downloader",
        "youtube",
        "video-utility",
        "cross-platform",
        "gui"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "Video Hub App",
      "homepage": "https://github.com/whyboris/Video-Hub-App",
      "description": "An electron-based video library organizer that scans folders for video files and presents an interface with thumbnails and search for browsing a video collection.",
      "tags": [
        "video library",
        "electron",
        "file management",
        "thumbnails",
        "search"
      ],
      "categories": [
        "metadata-extraction-management"
      ],
      "category": "media-tools"
    },
    {
      "title": "QWinFF",
      "homepage": "https://sourceforge.net/projects/qwinff/",
      "description": "A simple cross-platform FFmpeg GUI (using Qt) for converting audio and video, providing preset profiles and the ability to batch process files.",
      "tags": [
        "ffmpeg",
        "conversion",
        "gui",
        "cross-platform",
        "batch processing"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "CasparCG",
      "homepage": "https://github.com/CasparCG/server",
      "description": "A professional open source graphics and video playback server used in TV broadcasting for overlaying graphics, playing videos, and mixing live inputs on multiple outputs.",
      "tags": [
        "broadcast",
        "graphics",
        "video server",
        "live production",
        "tv technology"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "oneVPL (oneAPI Video Processing Library)",
      "homepage": "https://github.com/oneapi-src/oneVPL",
      "description": "Intel's oneAPI Video Processing Library, providing a unified API to utilize hardware accelerators (CPU/GPU) for video encoding, decoding, and processing.",
      "tags": [
        "hardware acceleration",
        "video processing",
        "intel",
        "encoding",
        "decoding",
        "gpu",
        "cpu"
      ],
      "categories": [
        "hardware-codecs-acceleration"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Apache Traffic Server",
      "homepage": "https://trafficserver.apache.org/",
      "description": "An open source HTTP/1.1 and HTTP/2 caching proxy server that can be used as an edge cache in video streaming content delivery networks (CDNs) to improve scalability.",
      "tags": [
        "caching",
        "proxy",
        "CDN",
        "edge cache",
        "HTTP",
        "content delivery"
      ],
      "categories": [
        "edge-computing-caching-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "PySceneDetect",
      "homepage": "https://github.com/Breakthrough/PySceneDetect",
      "description": "An open source tool that automatically detects scene changes in video files. It can split video content into scenes using visual metrics (ideal for preprocessing editing).",
      "tags": [
        "scene detection",
        "video preprocessing",
        "editing tool",
        "video analysis"
      ],
      "categories": [
        "scene-detection-segmentation"
      ],
      "category": "media-tools"
    },
    {
      "title": "Deep Video Analytics",
      "homepage": "https://github.com/DeepVideoAnalytics/DVA",
      "description": "An open source system leveraging deep learning to index, search, and analyze video content (detect objects, faces, etc.), enabling large-scale video analytics.",
      "tags": [
        "deep learning",
        "video analytics",
        "object detection",
        "computer vision",
        "indexing",
        "search"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Doom9 Forums",
      "homepage": "http://forum.doom9.org/",
      "description": "A long-standing forum community dedicated to digital video discussion, including codec development, DVD backup, video encoding techniques, and troubleshooting.",
      "tags": [
        "community",
        "forum",
        "video encoding",
        "codec",
        "discussion"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "online-forums"
    },
    {
      "title": "VideoHelp",
      "homepage": "https://www.videohelp.com/",
      "description": "A comprehensive website offering tools, guides, and forums for video conversion, editing, and troubleshooting, popular among video enthusiasts for its vast information on formats and software.",
      "tags": [
        "video conversion",
        "tutorials",
        "software guides",
        "community learning",
        "video formats"
      ],
      "categories": [
        "community-blogs-forums"
      ],
      "category": "learning-resources"
    },
    {
      "title": "IFME (Internet Friendly Media Encoder)",
      "homepage": "https://github.com/Anime4000/IFME",
      "description": "An open source batch video encoding tool that uses x265, VP9, and other encoders to compress video files with an easy-to-use GUI, including options for parallel processing.",
      "tags": [
        "video compression",
        "x265",
        "VP9",
        "batch encoding",
        "GUI",
        "parallel processing"
      ],
      "categories": [
        "conversion-format-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "AMD Advanced Media Framework (AMF SDK)",
      "homepage": "https://github.com/GPUOpen-LibrariesAndSDKs/AMF",
      "description": "AMD's GPUOpen Video SDK that provides developers access to GPU-accelerated encoding and decoding (H.264, HEVC, etc.) on AMD hardware.",
      "tags": [
        "gpu",
        "encoding",
        "decoding",
        "h264",
        "hevc",
        "sdk",
        "hardware-acceleration"
      ],
      "categories": [
        "hardware-codecs-acceleration"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "RIFE (AI Frame Interpolation)",
      "homepage": "https://github.com/hzwer/arXiv2020-RIFE",
      "description": "An AI-based method (Real-Time Intermediate Flow Estimation) for frame interpolation to create slow-motion videos by generating intermediate frames between existing ones.",
      "tags": [
        "AI",
        "frame interpolation",
        "slow-motion",
        "video enhancement",
        "machine learning"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "First Order Motion Model (for Image Animation)",
      "homepage": "https://github.com/AliaksandrSiarohin/first-order-model",
      "description": "A deep learning model for animating a static image using the motion pattern extracted from a source video. Often used for puppeteering faces or objects (one-shot deepfakes).",
      "tags": [
        "deep learning",
        "image animation",
        "AI",
        "motion model",
        "computer vision",
        "deepfake"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "general-tools"
    },
    {
      "title": "FaceSwap",
      "homepage": "https://github.com/deepfakes/faceswap",
      "description": "An open source deepfakes tool that allows the swapping of faces in videos using machine learning. It provides implementations of several face-swapping algorithms and a GUI.",
      "tags": [
        "machine-learning",
        "deepfakes",
        "video-editing",
        "ai-tools"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "general-tools"
    },
    {
      "title": "OpenPose",
      "homepage": "https://github.com/CMU-Perceptual-Computing-Lab/openpose",
      "description": "A real-time multi-person keypoint detection library (pose estimation) that can detect body, hand, and facial keypoints in video frames. Useful for analysis or augmented reality.",
      "tags": [
        "computer vision",
        "pose estimation",
        "keypoint detection",
        "augmented reality",
        "video analysis"
      ],
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "ffsubsync",
      "homepage": "https://github.com/smacke/ffsubsync",
      "description": "A tool to automatically synchronize subtitles with video by analyzing audio tracks. It uses speech detection to align subtitle timing via FFmpeg and machine learning.",
      "tags": [
        "subtitles",
        "synchronization",
        "machine-learning",
        "audio-processing",
        "ffmpeg"
      ],
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "audio-subtitles"
    },
    {
      "title": "SMTube",
      "homepage": "https://github.com/smplayer-dev/smtube",
      "description": "A lightweight YouTube browser that allows playing YouTube videos in external media players like SMPlayer or mpv, bypassing the web interface.",
      "tags": [
        "youtube",
        "media player",
        "video browser",
        "external player"
      ],
      "categories": [
        "browser-extensions"
      ],
      "category": "players-clients"
    },
    {
      "title": "Kaltura Community Edition",
      "homepage": "https://github.com/kaltura/server",
      "description": "The open source edition of the Kaltura video platform, which offers video content management, transcoding, and streaming services that can be self-hosted.",
      "tags": [
        "video platform",
        "self-hosted",
        "content management",
        "transcoding",
        "streaming"
      ],
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "Galicaster",
      "homepage": "https://github.com/teltek/Galicaster",
      "description": "An open source lecture capture system often used with the Opencast platform. It provides an interface for recording multiple video sources (camera, slides) in classrooms or conferences.",
      "tags": [
        "lecture capture",
        "open source",
        "education",
        "multi-source recording",
        "video capture"
      ],
      "categories": [
        "experimental-projects-prototypes"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Opencast",
      "homepage": "https://github.com/opencast/opencast",
      "description": "An open source enterprise video capture and distribution system, commonly used by educational institutions to manage lecture recordings, process videos, and distribute them to students.",
      "tags": [
        "lecture capture",
        "video distribution",
        "enterprise video",
        "education technology"
      ],
      "categories": [
        "community-collaboration-platforms"
      ],
      "category": "infrastructure-delivery"
    },
    {
      "title": "vid.stab",
      "homepage": "https://github.com/georgmartius/vid.stab",
      "description": "An open source video stabilization library, used with FFmpeg to stabilize shaky footage by analyzing and smoothing camera motion.",
      "tags": [
        "stabilization",
        "ffmpeg",
        "video-processing",
        "library"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "slowmoVideo",
      "homepage": "http://slowmovideo.granjow.net/",
      "description": "An open source tool that creates slow-motion videos from existing footage by interpolating intermediate frames, allowing extreme slow motion effects.",
      "tags": [
        "frame interpolation",
        "slow motion",
        "video processing",
        "open source",
        "video enhancement"
      ],
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "encoding-tools"
    },
    {
      "title": "NVIDIA Video Codec SDK",
      "homepage": "https://developer.nvidia.com/nvidia-video-codec-sdk",
      "description": "NVIDIA's official SDK for GPU-accelerated video encode/decode on GeForce and Quadro cards (NVENC/NVDEC). It provides APIs for developers to utilize NVIDIA hardware video codecs.",
      "tags": [
        "gpu",
        "codec",
        "encoding",
        "decoding",
        "hardware-acceleration",
        "nvenc",
        "nvdec"
      ],
      "categories": [
        "hardware-codecs-acceleration"
      ],
      "category": "encoding-codecs"
    },
    {
      "title": "Fraunhofer VVenC (VVC Encoder)",
      "homepage": "https://github.com/fraunhoferhhi/vvenc",
      "description": "An open source H.266/VVC video encoder library from Fraunhofer HHI implementing the Versatile Video Coding standard with a focus on performance and efficiency.",
      "tags": [
        "encoder",
        "VVC",
        "H.266",
        "codec",
        "performance",
        "efficiency"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "other-encoders"
    },
    {
      "title": "Fraunhofer VVdeC (VVC Decoder)",
      "homepage": "https://github.com/fraunhoferhhi/vvdec",
      "description": "An open source decoder for the Versatile Video Coding (H.266/VVC) standard, released by Fraunhofer HHI for research and development purposes.",
      "tags": [
        "VVC",
        "H.266",
        "decoder",
        "open source",
        "codec implementation"
      ],
      "categories": [
        "open-source-encoder-projects"
      ],
      "category": "codecs"
    },
    {
      "title": "Livestreamer",
      "homepage": "https://github.com/chrippa/livestreamer",
      "description": "The precursor to Streamlink, a command-line utility that extracted streams from various services to feed into a media player. (No longer maintained, replaced by Streamlink.)",
      "tags": [
        "stream extraction",
        "command-line",
        "media utility",
        "streaming tool"
      ],
      "categories": [
        "hls-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "Tartube",
      "homepage": "https://github.com/axcore/tartube",
      "description": "A GUI front-end for youtube-dl/yt-dlp on Linux and Windows that helps manage video downloads, subscriptions to channels/playlists, and metadata for offline viewing.",
      "tags": [
        "download",
        "video-management",
        "metadata",
        "youtube-dl",
        "offline-viewing"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "media-tools"
    },
    {
      "title": "Media Player Classic - Black Edition (MPC-BE)",
      "homepage": "https://sourceforge.net/projects/mpcbe/",
      "description": "An enhanced, community-driven fork of the classic MPC-HC for Windows. MPC-BE includes additional features, updated codecs, and bug fixes while maintaining a lightweight footprint.",
      "tags": [
        "media player",
        "windows",
        "video playback",
        "open source",
        "codec"
      ],
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients"
    },
    {
      "title": "Big Buck Bunny (4K UHD Demo)",
      "homepage": "https://peach.blender.org/",
      "description": "A short animated film by the Blender Foundation (2008). It's open content and commonly used as demo video footage for testing 4K, HDR, and high-bitrate video setups.",
      "tags": [
        "demo video",
        "4K",
        "HDR",
        "test footage",
        "resolution testing",
        "video quality"
      ],
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Tears of Steel (Open Movie)",
      "homepage": "https://mango.blender.org/",
      "description": "A Blender Foundation live-action/CGI short film (2012) released as open content. Often used as test material for visual effects, 4K streaming, and encoding performance evaluations.",
      "tags": [
        "open source",
        "blender",
        "4K",
        "visual effects",
        "encoding",
        "test material"
      ],
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "tutorials-case-studies"
    },
    {
      "title": "Sintel (Open Movie)",
      "homepage": "https://durian.blender.org/",
      "description": "A 15-minute open source animated film (2010) by Blender Institute. It's frequently used for benchmarking video encoders and playback devices (available in 4K and various formats).",
      "tags": [
        "benchmarking",
        "4K",
        "encoder testing",
        "video quality",
        "open source"
      ],
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "quality-testing"
    },
    {
      "title": "Elephants Dream (Open Movie)",
      "homepage": "https://orange.blender.org/",
      "description": "The first open movie from the Blender Foundation (2006). It's an animated short film widely used in the past as a standard test video for new compression codecs and media players.",
      "tags": [
        "open source",
        "animation",
        "codec testing",
        "educational video",
        "blender foundation"
      ],
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "intro-learning"
    },
    {
      "title": "SRS (Simple Realtime Server)",
      "homepage": "https://github.com/ossrs/srs",
      "description": "An open source real-time video server in C++ that supports RTMP, WebRTC, HLS, HTTP-FLV, and SRT. SRS is known for its use in low-latency live streaming and is easy to deploy.",
      "tags": [
        "server",
        "RTMP",
        "WebRTC",
        "HLS",
        "low-latency",
        "open-source",
        "C++"
      ],
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers"
    },
    {
      "title": "RTMPDump",
      "homepage": "https://rtmpdump.mplayerhq.hu/",
      "description": "A command-line program for downloading RTMP streaming media. RTMPDump was historically important for saving live streams to disk and has influenced newer tools for stream capture.",
      "tags": [
        "rtmp",
        "streaming",
        "download",
        "capture",
        "protocol"
      ],
      "categories": [
        "specialized-utility-scripts"
      ],
      "category": "transport-protocols"
    },
    {
      "title": "Streamlink",
      "homepage": "https://github.com/streamlink/streamlink",
      "description": "A command-line utility that extracts live video streams from various websites (like Twitch, YouTube, etc.) and pipes them to a player or saves them. It's a maintained fork of the Livestreamer project.",
      "tags": [
        "stream extraction",
        "video utility",
        "command-line tool",
        "livestreaming"
      ],
      "categories": [
        "hls-tools"
      ],
      "category": "media-tools"
    },
    {
      "title": "AllPlayer",
      "homepage": "https://www.allplayer.org/",
      "description": "A free media player for Windows with support for a wide range of video formats and subtitles.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "windows",
        "video formats",
        "subtitles",
        "desktop application"
      ]
    },
    {
      "title": "Apprentice Video",
      "homepage": "https://sourceforge.net/projects/apprenticevideo/",
      "description": "An open source cross-platform media player focusing on high quality playback and unique features like alpha channel preview and timeline looping.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "cross-platform",
        "playback",
        "open source",
        "timeline",
        "alpha channel"
      ]
    },
    {
      "title": "GOM Player",
      "homepage": "https://www.gomlab.com/gomplayer-media-player/",
      "description": "A popular free media player for Windows with built-in support for many codecs and a user-friendly interface.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "windows",
        "codec support",
        "free software",
        "video playback"
      ]
    },
    {
      "title": "KMPlayer",
      "homepage": "https://www.kmplayer.com/",
      "description": "A versatile media player for Windows and mobile that supports various video formats and provides advanced playback controls.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "video playback",
        "cross-platform",
        "multimedia",
        "windows",
        "mobile"
      ]
    },
    {
      "title": "JetAudio",
      "homepage": "http://www.jetaudio.com/",
      "description": "An integrated multimedia player for Windows capable of playing video and audio with an array of sound effects and visualization features.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "desktop player",
        "multimedia",
        "audio player",
        "video player",
        "Windows"
      ]
    },
    {
      "title": "JRiver Media Center",
      "homepage": "https://jriver.com/",
      "description": "A comprehensive media center application with high-quality video and audio playback, library management, and home theater features.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "home theater",
        "library management",
        "video playback",
        "audio playback"
      ]
    },
    {
      "title": "Banshee",
      "homepage": "https://bansheemediaplayer.github.io/",
      "description": "An open source media player for Linux (and other platforms) that can play and organize video and audio, with support for podcasts and device sync.",
      "categories": [
        "legacy-obsolete-tools"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "linux",
        "open source",
        "audio",
        "video",
        "desktop application"
      ]
    },
    {
      "title": "GNOME Videos (Totem)",
      "homepage": "https://apps.gnome.org/Totem/",
      "description": "The default video player for the GNOME desktop (formerly Totem). It provides simple playback for local and network video streams on Linux.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "desktop",
        "linux",
        "media-player",
        "open-source"
      ]
    },
    {
      "title": "MythTV",
      "homepage": "https://www.mythtv.org/",
      "description": "An open source DVR and media center that lets you capture broadcast TV, schedule recordings, and play them back on various devices.",
      "categories": [
        "set-top-box-players"
      ],
      "category": "players-clients",
      "tags": [
        "DVR",
        "media center",
        "playback",
        "open source",
        "recording"
      ]
    },
    {
      "title": "MediaPortal",
      "homepage": "https://www.team-mediaportal.com/",
      "description": "An open source media center for Windows that turns a PC into a complete home theater hub for playing TV, video, and music.",
      "categories": [
        "set-top-box-players"
      ],
      "category": "players-clients",
      "tags": [
        "media center",
        "home theater",
        "windows",
        "video player",
        "media playback"
      ]
    },
    {
      "title": "Xine",
      "homepage": "http://xine.sourceforge.net/",
      "description": "An open source multimedia playback engine and player for Unix-like systems, featuring support for CD/DVD playback and a wide range of codecs.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "open-source",
        "multimedia",
        "player",
        "unix",
        "codec-support",
        "playback-engine"
      ]
    },
    {
      "title": "OMXPlayer",
      "homepage": "https://github.com/popcornmix/omxplayer",
      "description": "A hardware-accelerated command-line video player for the Raspberry Pi that utilizes the Pi\u2019s GPU decoding for smooth playback.",
      "categories": [
        "embedded-players"
      ],
      "category": "players-clients",
      "tags": [
        "raspberry-pi",
        "command-line",
        "video-player",
        "hardware-acceleration",
        "gpu-decoding"
      ]
    },
    {
      "title": "Doikki/DKVideoPlayer",
      "homepage": "https://github.com/Doikki/DKVideoPlayer",
      "description": "An Android video player library wrapping MediaPlayer, ExoPlayer, and IJKPlayer with features like preload, list playback, floating window, and more.",
      "categories": [
        "mobile-players"
      ],
      "category": "android",
      "tags": [
        "android",
        "video-player",
        "mobile",
        "library",
        "playback"
      ]
    },
    {
      "title": "Mp4Composer-android",
      "homepage": "https://github.com/MasayukiSuda/Mp4Composer-android",
      "description": "An Android library to compose and edit MP4 videos using MediaCodec, supporting filters, scaling, trimming, transcoding, cropping, time scaling, and rotation.",
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "encoding-tools",
      "tags": [
        "android",
        "mediacodec",
        "video-editing",
        "transcoding",
        "mobile-encoding"
      ]
    },
    {
      "title": "GPUVideo-android",
      "homepage": "https://github.com/MasayukiSuda/GPUVideo-android",
      "description": "An Android library that applies GPU-accelerated video filters to videos, integrates with ExoPlayer, and supports video recording with Camera2.",
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "android",
      "tags": [
        "mobile",
        "android",
        "gpu",
        "video-processing",
        "exoplayer",
        "camera2"
      ]
    },
    {
      "title": "Gaupol",
      "homepage": "https://otsaloma.io/gaupol/",
      "description": "An open source subtitle editor for text-based subtitle files, featuring timing adjustment, translation support, and built-in video preview (Linux).",
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "audio-subtitles",
      "tags": [
        "subtitle",
        "editor",
        "text-processing",
        "video-tools",
        "linux"
      ]
    },
    {
      "title": "Subtitle Composer",
      "homepage": "https://github.com/maxrd2/subtitlecomposer",
      "description": "A Qt-based subtitle editor for KDE/Linux that supports multiple subtitle formats and provides tools for timing, text editing, and translation.",
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "subtitles-captions",
      "tags": [
        "subtitle",
        "editor",
        "KDE",
        "Linux",
        "text-editing",
        "translation"
      ]
    },
    {
      "title": "Kaltura nginx-vod-module",
      "homepage": "https://github.com/kaltura/nginx-vod-module",
      "description": "An NGINX module for Video on Demand streaming that enables MP4 repackaging and dynamic adaptive streaming (HLS/DASH) support on Nginx servers.",
      "categories": [
        "vod-streaming-servers"
      ],
      "category": "streaming-servers",
      "tags": [
        "nginx",
        "vod",
        "streaming",
        "server",
        "hls",
        "dash",
        "mp4"
      ]
    },
    {
      "title": "NodeTube",
      "homepage": "https://github.com/mayeaux/nodetube",
      "description": "An open-source self-hosted online video platform (YouTube alternative) supporting video/audio upload, livestreaming, and monetization.",
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "infrastructure-delivery",
      "tags": [
        "open-source",
        "video platform",
        "self-hosted",
        "streaming",
        "infrastructure",
        "monetization"
      ]
    },
    {
      "title": "NymphCast",
      "homepage": "https://github.com/MayaPosch/NymphCast",
      "description": "An open source audio and video casting system with a client-server architecture, allowing media streaming to remote displays and custom application support.",
      "categories": [
        "embedded-players"
      ],
      "category": "players-clients",
      "tags": [
        "casting",
        "streaming",
        "client-server",
        "media player",
        "open source"
      ]
    },
    {
      "title": "Peer5 HLS P2P",
      "homepage": "https://docs.peer5.com/",
      "description": "Peer5\u2019s peer-to-peer content delivery solution for HLS streams. It uses WebRTC to distribute video segments among viewers to offload bandwidth from the CDN.",
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport",
      "tags": [
        "HLS",
        "WebRTC",
        "P2P",
        "content delivery",
        "streaming protocol"
      ]
    },
    {
      "title": "aiortc (Python WebRTC)",
      "homepage": "https://github.com/aiortc/aiortc",
      "description": "A Python library for Web Real-Time Communication that implements WebRTC and ORTC, enabling real-time audio/video and data streaming in Python applications.",
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport",
      "tags": [
        "WebRTC",
        "real-time",
        "streaming",
        "Python",
        "transport",
        "communication"
      ]
    },
    {
      "title": "Medooze Media Server",
      "homepage": "https://github.com/medooze/media-server",
      "description": "An open source SFU (Selective Forwarding Unit) and MCU for WebRTC that routes and processes real-time video streams, supporting low-latency streaming and conferencing.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "infrastructure-delivery",
      "tags": [
        "WebRTC",
        "media server",
        "real-time streaming",
        "SFU",
        "MCU",
        "video routing"
      ]
    },
    {
      "title": "coturn",
      "homepage": "https://github.com/coturn/coturn",
      "description": "An open source implementation of TURN and STUN servers, used to facilitate NAT traversal for peer-to-peer video (and audio) communication in WebRTC and other protocols.",
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport",
      "tags": [
        "WebRTC",
        "NAT",
        "network",
        "transport",
        "peer-to-peer",
        "communication"
      ]
    },
    {
      "title": "Nimble Streamer",
      "homepage": "https://wmspanel.com/nimble",
      "description": "A lightweight, free live streaming server supporting HLS, DASH, RTMP, SRT, and more, often used for low-latency streaming and transmuxing in production workflows.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers",
      "tags": [
        "live streaming",
        "server",
        "transmuxing",
        "low-latency",
        "HLS",
        "DASH",
        "RTMP",
        "SRT"
      ]
    },
    {
      "title": "Icecast",
      "homepage": "https://icecast.org/",
      "description": "An open source streaming media server primarily for audio streaming (Ogg/Opus), which can also deliver video in formats like Ogg/Theora. Commonly used for internet radio and basic video streams.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers",
      "tags": [
        "streaming",
        "server",
        "open-source",
        "audio",
        "video",
        "internet radio"
      ]
    },
    {
      "title": "Haivision SRT",
      "homepage": "https://github.com/Haivision/srt",
      "description": "Secure Reliable Transport protocol open source implementation that provides low-latency video streaming over unpredictable networks with error recovery and encryption.",
      "categories": [
        "low-latency-streaming-tools"
      ],
      "category": "transport-protocols",
      "tags": [
        "srt",
        "streaming",
        "protocol",
        "network",
        "transport",
        "encryption"
      ]
    },
    {
      "title": "librist",
      "homepage": "https://code.videolan.org/rist/librist",
      "description": "An open source library implementing the Reliable Internet Stream Transport (RIST) protocol for reliable low-latency video contribution and distribution over the Internet.",
      "categories": [
        "low-latency-streaming-tools"
      ],
      "category": "transport-protocols",
      "tags": [
        "rist",
        "transport",
        "streaming",
        "protocol",
        "library"
      ]
    },
    {
      "title": "ZLMediaKit",
      "homepage": "https://github.com/ZLMediaKit/ZLMediaKit",
      "description": "A high-performance C++ media server framework supporting WebRTC, RTSP, RTMP, HTTP-FLV, HLS, WebSocket streaming, and SRT, for building streaming server/client applications.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers",
      "tags": [
        "media server",
        "WebRTC",
        "RTSP",
        "RTMP",
        "streaming",
        "C++",
        "framework"
      ]
    },
    {
      "title": "WebRTC Samples",
      "homepage": "https://webrtc.github.io/samples/",
      "description": "A collection of WebRTC demos and sample applications illustrating real-time peer-to-peer video, audio, and data streaming in web browsers using the WebRTC API.",
      "categories": [
        "learning-tutorials-documentation"
      ],
      "category": "tutorials-case-studies",
      "tags": [
        "WebRTC",
        "tutorial",
        "peer-to-peer",
        "web",
        "streaming",
        "demo",
        "javascript"
      ]
    },
    {
      "title": "Deskreen",
      "homepage": "https://github.com/pavlobu/deskreen",
      "description": "An open source application that turns any device with a web browser into a secondary screen for your computer by streaming your desktop over WebRTC in real-time.",
      "categories": [
        "independent-hobbyist-projects"
      ],
      "category": "mobile-web-players",
      "tags": [
        "WebRTC",
        "screen sharing",
        "web streaming",
        "real-time",
        "cross-platform"
      ]
    },
    {
      "title": "PeerJS",
      "homepage": "https://peerjs.com/",
      "description": "A simple peer-to-peer JavaScript library that abstracts WebRTC for direct video, audio, and data connectivity between browsers. Provides an easy way to build video chat and P2P apps.",
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "protocols-transport",
      "tags": [
        "WebRTC",
        "peer-to-peer",
        "real-time communication",
        "browser technology"
      ]
    },
    {
      "title": "WebRTC-Experiment",
      "homepage": "https://github.com/muaz-khan/WebRTC-Experiment",
      "description": "A repository of WebRTC experimental demos by Muaz Khan, including source code for various real-time communication use cases (screen sharing, peer connections, recording, etc.).",
      "categories": [
        "experimental-projects-prototypes"
      ],
      "category": "tutorials-case-studies",
      "tags": [
        "WebRTC",
        "peer-to-peer",
        "real-time communication",
        "demos",
        "source code"
      ]
    },
    {
      "title": "BigBlueButton",
      "homepage": "https://bigbluebutton.org/",
      "description": "An open source web conferencing system designed for online learning that supports real-time sharing of video, slides, chat, and screens with low-latency audio and video.",
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "tutorials-case-studies",
      "tags": [
        "web conferencing",
        "online learning",
        "real-time streaming",
        "educational technology",
        "video sharing"
      ]
    },
    {
      "title": "go2rtc",
      "homepage": "https://github.com/AlexxIT/go2rtc",
      "description": "A flexible high-performance streaming server written in Go that can ingest RTSP, WebRTC, RTMP, HTTP-FLV, and LL-HLS and output streams to multiple protocols (commonly used for home camera streaming).",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "streaming-servers",
      "tags": [
        "rtsp",
        "webrtc",
        "rtmp",
        "streaming",
        "server",
        "go",
        "home-camera"
      ]
    },
    {
      "title": "MP4Joiner & MP4Splitter",
      "homepage": "https://www.mp4joiner.org/en/",
      "description": "Free open-source tools to losslessly join and split MP4 files without re-encoding. Useful for simple video file merging and cutting tasks.",
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "encoding-tools",
      "tags": [
        "mp4",
        "video-editing",
        "lossless",
        "file-manipulation",
        "open-source"
      ]
    },
    {
      "title": "Light Alloy",
      "homepage": "https://light-alloy.com/",
      "description": "A lightweight, freeware media player for Windows known for its fast startup and support of all common video formats with configurable keyboard shortcuts.",
      "categories": [
        "desktop-players"
      ],
      "category": "players-clients",
      "tags": [
        "media player",
        "windows",
        "video playback",
        "freeware"
      ]
    },
    {
      "title": "Content Delivery Video Library (CDVL)",
      "homepage": "https://www.cdvl.org/",
      "description": "An online library of test video content and sequences provided for researchers and developers to evaluate video processing and streaming techniques (various resolutions, formats, and scenarios).",
      "categories": [
        "test-content-sample-streams"
      ],
      "category": "quality-testing",
      "tags": [
        "video testing",
        "research",
        "evaluation",
        "video sequences",
        "resolution testing"
      ]
    },
    {
      "title": "FreeJ",
      "homepage": "https://github.com/freej/freej",
      "description": "A real-time video mixer (VJ tool) that allows compositing multiple video inputs (live capture, movies, images) with layers and effects, controllable via command-line or Joystick (Linux).",
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "media-tools",
      "tags": [
        "video mixer",
        "VJ tool",
        "real-time compositing",
        "linux",
        "video effects"
      ]
    },
    {
      "title": "DVBlast",
      "homepage": "https://www.videolan.org/projects/dvblast.html",
      "description": "A simple and powerful MPEG-2/TS demux and streaming application from the VideoLAN project, often used for broadcasting DVB streams (multicast or unicast) over IP networks.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "protocols-transport",
      "tags": [
        "streaming",
        "DVB",
        "IP transport",
        "multicast",
        "unicast",
        "MPEG-2"
      ]
    },
    {
      "title": "multicat",
      "homepage": "https://www.videolan.org/projects/multicat.html",
      "description": "A set of lightweight tools for multicast and transport stream manipulation (from the VLC project) \u2013 used for efficient UDP streaming, recording, and conversion of TS streams.",
      "categories": [
        "live-streaming-servers"
      ],
      "category": "protocols-transport",
      "tags": [
        "multicast",
        "UDP",
        "transport stream",
        "streaming",
        "VLC"
      ]
    },
    {
      "title": "CineForm SDK",
      "homepage": "https://gopro.github.io/cineform-sdk/",
      "description": "GoPro\u2019s CineForm codec SDK, open-sourced, providing tools and libraries for the CineForm HD wavelet-based video codec used for high-fidelity video compression.",
      "categories": [
        "software-codecs"
      ],
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "sdk",
        "compression",
        "video-encoding",
        "gopro"
      ]
    },
    {
      "title": "Lagarith Lossless Codec",
      "homepage": "https://lags.leetcode.net/codec.html",
      "description": "A lossless video codec for Windows that offers high compression ratios. Useful for archival and intermediate video editing workflows where quality must be preserved (open source).",
      "categories": [
        "software-codecs"
      ],
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "lossless",
        "compression",
        "windows",
        "open-source",
        "archival"
      ]
    },
    {
      "title": "UT Video Codec Suite",
      "homepage": "http://umezawa.dyndns.info/wordpress/?page_id=67",
      "description": "An open source lossless video codec from Umezawa that provides fast encoding/decoding and is often used for lossless video compression on Windows (supports RGB and YUV formats).",
      "categories": [
        "software-codecs"
      ],
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "lossless",
        "compression",
        "windows",
        "RGB",
        "YUV"
      ]
    },
    {
      "title": "FFV1 Codec",
      "homepage": "https://ffmpeg.org/~michael/ffv1.html",
      "description": "FFmpeg\u2019s FFV1 is a lossless intra-frame video codec. It\u2019s open, extremely efficient for archiving video, and is defined in an ongoing standardization (supported by archival institutions).",
      "categories": [
        "video-codec-specifications"
      ],
      "category": "codecs",
      "tags": [
        "lossless",
        "archival",
        "ffmpeg",
        "codec",
        "video compression"
      ]
    },
    {
      "title": "ButtleOFX",
      "homepage": "https://github.com/ButtleOFX/ButtleOFX",
      "description": "An open source nodal video compositing software built on top of OpenFX. It provides a user-friendly interface to apply and connect video effects (an experimental alternative to commercial compositors).",
      "categories": [
        "effects-compositing-tools"
      ],
      "category": "encoding-tools",
      "tags": [
        "compositing",
        "open-source",
        "video-effects",
        "OpenFX",
        "video-processing"
      ]
    },
    {
      "title": "VLMC (VideoLAN Movie Creator)",
      "homepage": "https://www.videolan.org/vlmc/",
      "description": "An experimental non-linear video editing software from the VideoLAN project. Aims to offer basic editing (cutting, transitions, etc.) with a simple interface, built on libVLC.",
      "categories": [
        "experimental-projects-prototypes"
      ],
      "category": "encoding-tools",
      "tags": [
        "video editing",
        "libVLC",
        "non-linear editing",
        "open source"
      ]
    },
    {
      "title": "video4j",
      "homepage": "https://github.com/metaloom/video4j",
      "description": "A Java video processing library providing a set of tools and APIs to handle video operations in Java applications.",
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools",
      "tags": [
        "java",
        "library",
        "video-processing",
        "encoding",
        "video-tools"
      ]
    },
    {
      "title": "scikit-video",
      "homepage": "https://github.com/aizvorski/scikit-video",
      "description": "A set of video processing routines for use with SciPy, providing basic video reading and writing capabilities for scientific computing workflows in Python.",
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools",
      "tags": [
        "python",
        "video-processing",
        "scientific-computing",
        "library",
        "video-tools"
      ]
    },
    {
      "title": "Jubler",
      "homepage": "http://www.jubler.org/",
      "description": "A cross-platform open source subtitle editor written in Java. It supports multiple subtitle formats, style editing, timing synchronization, and real-time preview of subtitles on video.",
      "categories": [
        "subtitle-caption-tools"
      ],
      "category": "media-tools",
      "tags": [
        "subtitles",
        "editor",
        "java",
        "cross-platform",
        "media-processing"
      ]
    },
    {
      "title": "JCodec",
      "homepage": "https://github.com/jcodec/jcodec",
      "description": "A pure Java implementation of common video and audio codecs (H.264, VP8, etc.), enabling decoding and encoding of media entirely in Java without native dependencies.",
      "categories": [
        "software-codecs"
      ],
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "java",
        "encoding",
        "decoding",
        "h264",
        "vp8"
      ]
    },
    {
      "title": "libmpeg2",
      "homepage": "http://libmpeg2.sourceforge.net/",
      "description": "A free library for decoding MPEG-1 and MPEG-2 video streams. It's lightweight and portable, used in several open source media players for MPEG-2 playback.",
      "categories": [
        "software-codecs"
      ],
      "category": "encoding-codecs",
      "tags": [
        "codec",
        "mpeg",
        "decoding",
        "library",
        "open-source"
      ]
    },
    {
      "title": "MMAction2",
      "homepage": "https://github.com/open-mmlab/mmaction2",
      "description": "An open source toolkit for video understanding by OpenMMLab. It supports state-of-the-art models for action recognition, temporal action detection, and spatio-temporal detection in videos.",
      "categories": [
        "ai-machine-learning-tools"
      ],
      "category": "media-tools",
      "tags": [
        "machine learning",
        "computer vision",
        "action recognition",
        "video analysis",
        "AI"
      ]
    },
    {
      "title": "Bento4",
      "homepage": "https://www.bento4.com/",
      "description": "A full-featured C++ toolkit for reading, writing, and processing MP4 files. Bento4 is often used for packaging content for MPEG-DASH and HLS, including encryption and manifest generation.",
      "categories": [
        "containerization-packaging-tools"
      ],
      "category": "encoding-tools",
      "tags": [
        "mp4",
        "packaging",
        "encryption",
        "manifest-generation",
        "c++",
        "dash",
        "hls"
      ]
    },
    {
      "title": "fluent-ffmpeg (Node.js)",
      "homepage": "https://github.com/fluent-ffmpeg/node-fluent-ffmpeg",
      "description": "A fluent API for using FFmpeg in Node.js applications. It allows programmatic creation of FFmpeg commands for video and audio processing using JavaScript.",
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "nodejs",
        "video-processing",
        "encoding",
        "library"
      ]
    },
    {
      "title": "PyAV",
      "homepage": "https://github.com/PyAV-Org/PyAV",
      "description": "A Pythonic binding for FFmpeg\u2019s libraries (Libav). PyAV allows Python programs to read, write, and manipulate video and audio data by leveraging the powerful FFmpeg backend.",
      "categories": [
        "api-libraries-sdks"
      ],
      "category": "encoding-tools",
      "tags": [
        "ffmpeg",
        "python",
        "encoding",
        "video-processing",
        "library"
      ]
    },
    {
      "title": "DTube",
      "homepage": "https://d.tube/",
      "description": "A decentralized video platform built on blockchain (Steem/LBRY), offering an alternative to YouTube where videos are distributed via a peer-to-peer network and blockchain stores metadata and rewards.",
      "categories": [
        "peer-to-peer-streaming-solutions"
      ],
      "category": "infrastructure-delivery",
      "tags": [
        "blockchain",
        "decentralized",
        "peer-to-peer",
        "video platform",
        "distributed infrastructure"
      ]
    },
    {
      "title": "MediaCMS",
      "homepage": "https://mediacms.io/",
      "description": "An open source online video and media content management system. It supports uploading, transcoding (via FFmpeg), and streaming of video content, providing a self-hosted YouTube-like platform.",
      "categories": [
        "video-streaming-distribution-solutions"
      ],
      "category": "infrastructure-delivery",
      "tags": [
        "cms",
        "video hosting",
        "self-hosted",
        "streaming",
        "ffmpeg"
      ]
    },
    {
      "title": "video_transcoding Scripts",
      "homepage": "https://github.com/donmelton/video_transcoding",
      "description": "A collection of command-line scripts that automate the process of transcoding video files (e.g., using HandBrake/FFmpeg) into formats suitable for streaming and archiving, with sane defaults.",
      "categories": [
        "scripting-automation-tools"
      ],
      "category": "encoding-tools",
      "tags": [
        "transcoding",
        "ffmpeg",
        "handbrake",
        "automation",
        "video processing"
      ]
    },
    {
      "title": "DVBSnoop",
      "homepage": "http://dvbsnoop.sourceforge.net/",
      "description": "An analyzer and debugging tool for MPEG transport streams and DVB broadcasts. It allows inspection of packet structure, tables (PAT, PMT, etc.), and payload of digital video streams.",
      "categories": [
        "miscellaneous-experimental-niche-tools"
      ],
      "category": "media-tools",
      "tags": [
        "analysis",
        "debugging",
        "transport-stream",
        "dvb",
        "mpeg",
        "inspection"
      ]
    },
    {
      "title": "MediaConch",
      "homepage": "https://mediaarea.net/MediaConch",
      "description": "An open source policy compliance checker for digital audiovisual files (from MediaArea, the creators of MediaInfo). It helps verify and enforce file format standards and encoding best practices for archival video.",
      "categories": [
        "regulatory-compliance-resources"
      ],
      "category": "media-tools",
      "tags": [
        "file validation",
        "archival",
        "compliance",
        "video standards",
        "encoding"
      ]
    }
  ]
}